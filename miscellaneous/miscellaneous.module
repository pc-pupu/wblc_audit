<?php

function miscellaneous_init(){
	
}

function miscellaneous_menu(){
	$items = array();
											   
	$items['miscellaneous_address']	= array(
							'title' 			=> 	'Applying For License',
							'page callback'		=>	'drupal_get_form',
							'page arguments'	=>	array('miscellaneous_establishment_address_form'),
							'access arguments' 	=> 	array('access content'),
							'access callback'	=>	TRUE
							);
											  
											  
	$items['office-address'] 					= array( 
													'title' 					=> 'OFFICE ADDRESS UPDATE',
													'page callback'				=> 'drupal_get_form',
													'page arguments'			=> array('update_office_address'),
													'file' 						=> 'includes/update_office_address_alc_inspector.inc',
													'access arguments' 			=> array('Permission for alc and inspector'),
												);
												
	/*$items['principal-employer/%/%'] 			= array( 
													'title' 					=> 'Principal Employer Details',
													'page callback'				=> 'drupal_get_form',
													'page arguments'			=> array('principal_employer_form',1,2),
													'file' 						=> 'includes/common_principal_employer_form.inc',
													'access arguments' 			=> array('applicant_forms_clra_all_per'),
												);/*
												
	/*** 30082018 ** PAYAL (FOR COMMON ADD)***/
												
	$items['add-person/%/%/%'] 			= array( 
													//'title' 					=> 'Principal Employer Details',
													'page callback'				=> 'drupal_get_form',
													'page arguments'			=> array('common_add_person',1,2,3),
													'file' 						=> 'includes/common_principal_employer_form.inc',
													'access arguments' 			=> array('applicant_forms_clra_all_per'),
												);
												
	$items['postal-address/%/%'] 				= array( 
													//'title' 					=> 'Postal Address',
													'page callback'				=> 'drupal_get_form',
													'page arguments'			=> array('postal_address_form',1,2),
													'file' 						=> 'includes/common_postal_address_form.inc',
													'access arguments' 			=> array('applicant_forms_clra_all_per'),
												);
												
	$items['name-and-location/%/%'] 			= array( 
													//'title' 					=> 'Establishment Name and Location',
													'page callback'				=> 'drupal_get_form',
													'page arguments'			=> array('name_and_location_form',1,2),
													'file' 						=> 'includes/common_name_location_establishment_form.inc',
													'access arguments' 			=> array('applicant_forms_clra_all_per'),
												);
												
	$items['view-details/%/%/%'] 					= array( 
													//'title callback'    		=> 'viewdetails_title_callback',
													'title arguments'   		=> array(1),
													'page callback' 			=> 'drupal_get_form',
													'page arguments'			=> array('view_details_form',1,2,3),
													'file' 						=> 'includes/view_details_information.inc',
													//'access arguments' 			=> 	array('access content'),
													//'access arguments' 		=> 'user_is_logged_in',  
													'access arguments' 			=> array('Permission for application super all'),
												);
												
	$items['delete-remarks/%/%/%/%']	 		= array(
													'title' 				=> t('Common Remark Delete'),
													'page callback' 		=> 'drupal_get_form',
													'page arguments'		=> array('common_remark_delete',1,2,3,4),
													'access arguments'	 	=> array('permission_for_appicant_alc_inspector'),
													);
													
	$items['deleteRemarks']						= array(
														'page callback' 	=> 'commonRemarkDelete',
														'access arguments' 	=> array('access content'),
														'type' 				=> MENU_CALLBACK
														);
														
	$items['ownership-list/%/%/%'] 				= array( 
													//'title' 					=> 'Establishment Name and Location',
													'page callback'				=> 'drupal_get_form',
													'page arguments'			=> array('ownership_list_form',1,2,3),
													'file' 						=> 'includes/common_ownership_list_form.inc',
													'access arguments' 			=> array('applicant_forms_clra_all_per'),
												);
												
	$items['tu-view-details/%/%/%'] 			= array( 
							'title callback'    	=> 'tuviewdetails_title_callback',
							'title arguments'   	=> array(1),
							'page callback' 		=> 'drupal_get_form',
							'page arguments'		=> array('tu_view_details_form',1,2,3),
							'file' 					=> 'includes/tu_view_details_information.inc',
							'access callback' 		=> 'user_is_logged_in',  
							);
											  
	
	$items['applicant-location-amendment/%/%'] 	= array(
						'title' 				=> 'Amendment of Location of the Establishment of Principal Employers Under CLRA,1960',
						'page callback' 		=> 'drupal_get_form', 
						'page arguments' 		=> array('amendment_establishmentlocation_approval', 1,2),
						'file' 					=> 'includes/applicant_amendment_approval_form.inc',
						'access arguments' 		=> array('applicant_forms_clra_all_per')
							);								
	$items['documents-view/%/%/%'] = array( 						
						'page callback'	=> 'documents_view',
						'page arguments' => array(1, 2, 3),
						'file' => 'includes/documents_view.inc',
						'access arguments' => array('access content'),
					);
	
	$items['download-certificate/%/%/%'] = array(			
						'page callback' 	=> 'deemed_download_certificate',
						'page arguments' 	=> array(1,2,3),					
						'file' 				=> 'includes/deemed_download_certificate.inc',								
						'access arguments' 	=> array('applicant_forms_clra_all_per')
						);
$items['migrantworker/autocomplete_ifsc'] 	= array(
							'title' 					=> t('AutoCompomplete'),
							'page callback' 			=> 'selectAllifsc',
							'access arguments' 		=> array('access content'),
							'type' 					=> MENU_CALLBACK,
					  );
	return $items;
}


function miscellaneous_permission() {
	$permission = array();
	$permission['Permission for alc and inspector'] = array(
      		'title' => t('Permission for alc and inspector'),
     		 'description' => t('Permission for alc and inspector'),
   	);
	$permission['logged_in_user'] = array(
		'title' => t('Permission for Logged in User '),
		'description' => t('Permission for logged in user'),
   	);
	$permission['Permission_for_alc'] = array(
		'title' => t('Permission for ALC'),
		'description' => t('Permission for ALC'),
   	);
	
   return $permission;
}

/** Validation Functions ***/
function MISC_USERNAME_VALIDATE($element, &$form_state){
	$txtValue =	trim($element['#value']); 
	$match_pattern = '/^(?![_ -])(?:(?![_ -]{2,})[\w-.@]){5,}(?<![_ -])$/';
	if(!empty($txtValue)){
		if(!preg_match($match_pattern, $txtValue)) {
			form_error($element, t($element['#title'].' should be of at least 5 characters long</br>'.$element['#title'].' should not precede with special charecters.</br>'.$element['#title'].' can only contain special charecters dot(.), @, -, _'));
		}
	} else {
			form_error($element, t($element['#title'].' cannot be empty.')); 
	}
}


function MISC_DOB_VALIDATE($element, &$form_state){
	$employer_dob_value = strtotime($element['#value']);
	//$employer_dob_timestamp = strtotime(trim($employer_dob_value['year']).'-'.trim($employer_dob_value['month']).'-'.trim($employer_dob_value['day']));
	$todays_date= strtotime(date("Y-m-d")) ; 
	if($employer_dob_value >= $todays_date){
		form_error($element, t($element['#title'].' is not valid . '));
	}
}

function MISC_VALID_AGE_VALIDATE($element, &$form_state){
    $dob = strtotime($element['#value']);
    $min = strtotime('+18 years', $dob);
    if(time() <= $min)  {
       	form_error($element, t('Age should be 18 years and above'));
    }
}

function MISC_TEXTBOX_TEXT_ENAME_VALIDATE($element,&$form_state){
	$txtValue		=	trim($element['#value']); 
	//$match_pattern 	= 	'/^[ A-Za-z0-9.\/\(\)&,]+$/';
	$match_pattern 	= 	'/[A-Za-z0-9.,_&-\/\(\) ]+/';
	if(!empty($txtValue)){
		if(!preg_match($match_pattern, $txtValue)) {
			form_error($element, t($element['#title'].' should be text only'));
		}
	}
}


/*function MISC_TEXTBOX_TEXT_VALIDATE($element,&$form_state){
	$txtValue		=	trim($element['#value']); 
	$match_pattern 	= 	'/^[ A-Za-z.\/\(\) ]+$/';
	if(!empty($txtValue)){
		if(!preg_match($match_pattern, $txtValue)) {
			form_error($element, t($element['#title'].' SHOULD BE TEXT ONLY'));
		}
	}
}*/
function MISC_TEXTBOX_TEXT_VALIDATE($element,&$form_state){
	$txtValue		=	trim($element['#value']); 
	$match_pattern 	= 	'/^[ A-Za-z.\/\(\) ]+$/';
	if(!empty($txtValue)){
		if(!preg_match($match_pattern, $txtValue)) {
			form_error($element, t($element['#title'].' should be text only'));
		}
	} else {
			form_error($element, t($element['#title'].' cannot be empty.')); 
	}
}

function MISC_OTHERNATURE_TEXTBOX_TEXT_VALIDATE($element,&$form_state){ 
	$txtValue		=	$form_state['values']['other_nature_of_work_value']; 
	$match_pattern 	= 	'/^[ A-Za-z0-9.&\/\(\) ]+$/';
	
	if( (in_array(28,$form_state['values']['con_nature_of_work'] ))||(in_array(28,$form_state['values']['e_nature_of_work'])) ){
		
		if(!empty($txtValue)){
			if(!preg_match($match_pattern, $txtValue)) {
				form_error($element, t($element['#title'].' should be text only'));
			}
		} else {
				form_error($element, t($element['#title'].' cannot be empty.')); 
		}	
	}
}
function MISC_EMAIL_VALIDATE($element, &$form_state){
	 $email		=	trim($element['#value']); 
	 if( $email == "" ){
		form_error($element, t($element['#title'].' CANNOT BE EMPTY.')); 
	 }
	 if (!filter_var($email, FILTER_VALIDATE_EMAIL)) {
		form_error($element, t($element['#title'].' FORMAT IS INAVLID.'));
	 }
}

/*function MISC_PHONE_VALIDATE($element, &$form_state){
	$mob	= "/^[789][0-9]{9}$/";
	$contact_number		=	trim($element['#value']); 
	
	if(!preg_match($mob, $contact_number)){ 
		form_error($element, t('<b>'.$element['#title'].'</b> should be valid.'));
	
	}
}*/
function MISC_PHONE_VALIDATE($element, &$form_state){
	$mob	= "/^[1-9]{1}[0-9]{9}$/";
	if(strlen(trim($element['#value']))>0){
		  if(strlen(trim($element['#value'])) < 10 ){
			 form_error($element, t($element['#title'].' must be of 10 digits.'));
		  }
		  if(! is_numeric(trim($element['#value']))){
			 form_error($element, t($element['#title'].' should be numeric.'));
		  }
		  if(!preg_match($mob, $element['#value'])){ 
			form_error($element, t($element['#title'].' should be valid.'));
		  }
	 }else{
		form_error($element, t($element['#title'].' cannot be blank.'));
	 }
}

/*function MISC_PIN_NUMBER($element,&$form_state){
	$pin 			=	trim($element['#value']); 
	$match_pattern  = '/^[0-9]+$/i';
	
	if(!empty($pin)){
		if(strlen($pin) < 6){
			form_error($element, t($element['#title'].' SHOULD BE 6 DIGITS.'));
		}
		if(!preg_match($match_pattern, $pin)) {
				form_error($element, t($element['#title'].' SHOULD BE NUMBER ONLY'));
		}
	}
}
*/

function MISC_PIN_NUMBER($element,&$form_state){
	$pin 			=	trim($element['#value']); 
	$match_pattern  = '/^[0-9]+$/i';
	if(strlen($pin) != 6) {
		form_error($element, t($element['#title'].' should be 6 digits.'));
	}
	if(!preg_match($match_pattern, $pin)) {
		form_error($element, t($element['#title'].' should be number only.'));
	}
}

function MISC_NUMBER($element,&$form_state){
	$pin 			=	trim($element['#value']); 
	$match_pattern  = '/^[0-9]+$/i';
	
	if(!preg_match($match_pattern, $pin)) {
		form_error($element, t($element['#title'].' should be number only.'));
	}
}

function MISC_FLOT_VALIDATE($element,&$form_state){
	$fieldValue=trim($element['#value']); 
	$match_pattern = '/^[0-9]*\.[0-9]{2}+/';
	if(!empty($fieldValue)){
		if(!preg_match($match_pattern, $fieldValue)) {
			$match_pattern2 = '/^[0-9]+$/i';
			if(!preg_match($match_pattern2, $fieldValue)) {
				form_error($element, t($element['#title'].' SHOULD BE NUMERIC ONLY'));
			}
		}
	}
}

function MISC_SPECIAL_CHAR_EDIT_TEXT_VALIDATE($element,&$form_state){
	$txtValue		=	trim($element['#value']); 
	$match_pattern 	= 	'/[A-Za-z0-9]+/';
	if(!preg_match($match_pattern, $txtValue)) {
		form_error($element, t($element['#title'].' SHOULD BE TEXT ONLY'));
	}
}

function MISC_TEXTBOX_LOCATION_VALIDATE($element,&$form_state){
	$txtValue		=	trim($element['#value']); 
	$match_pattern 	= 	'/[A-Za-z0-9.,_&-\/\(\) ]+/';
	if(!preg_match($match_pattern, $txtValue)) {
		form_error($element, t($element['#title'].' should be text only'));
	}
}


function MISC_TEXTBOX_NUMERIC_VALIDATE($element,&$form_state){
	$fieldValue=trim($element['#value']); 
	$match_pattern = '/^[0-9]+$/i';
	if(!empty($fieldValue)){
		if(!preg_match($match_pattern, $fieldValue)) {
			form_error($element, t($element['#title'].' SHOULD BE NUMERIC ONLY'));
		}
	}
}

function MISC_TEXTBOX_NAME_VALIDATE($element, &$form_state){
		$txtValue		=	trim($element['#value']); 
		if(strlen(trim($txtValue)) > 0 && !ereg('^[a-zA-Z]+$', $txtValue)){
			 form_error($element, t('Your '.$element['#title'].' contains space or invalid characters. Only letters are allowed!'));
		}
}	

function MISC_TEXTBOX_EST_VALIDATE($element,&$form_state){
	$txtValue		=	trim($element['#value']); 
	$match_pattern 	= 	/*'/^[a-zA-Z0-9.&-]+/';*/ '/[A-Za-z0-9.,_&-()]+/';
	if(!preg_match($match_pattern, $txtValue)) {
		form_error($element, t($element['#title'].' SHOULD BE VALID TEXT ONLY'));
	}
}

function commonRemarkDelete(){
	
	global $user;
	$user_id 		= $user->uid;
	$certificateFID = '';
	$statusField	= '';
	$flag 			= '';
	
	$remarkRowID 	= encryption_decryption_fun('decrypt', $_POST['remarkPKID']);
	$loggedUserID 	= encryption_decryption_fun('decrypt', $_POST['loggedUserID']);
	$actID 			= encryption_decryption_fun('decrypt', $_POST['actID']);
	//echo $actID.'--'.$loggedUserID.'--'.$remarkRowID;exit;
	$user_role = db_select('l_custom_user_detail', 'lcud');
	$user_role->fields('lcud', array('usr_rid'));
	$user_role->condition('lcud.usr_id', trim($loggedUserID));
	$user_role_result = $user_role->execute()->fetchAssoc(); 
	$get_user_role 	  = $user_role_result['usr_rid'];
	
	if($actID == 1 ){
		$remarkTableName 	= 'l_remarks_master';
		$masterTable 		= 'l_clra_registration_master';
		$colCertificateFID  = 'certificates_fid';
		$statusField   		= 'status';
		$remarkPKField 		= 'remark_id';
		
	}else if($actID == 2 ){
		$remarkTableName 	= 'l_bocwa_remark_master';
		$masterTable 		= 'l_bocwa_registration_master';
		$colCertificateFID  = 'bocwa_registration_certificate';
		$statusField   		= 'status';
		$remarkPKField 		= 'id';
		
	}else if($actID == 4 ){
		$remarkTableName 	= 'l_interstate_remark_master';
		$masterTable 		= 'l_interstate_workman_master';
		$colCertificateFID  = 'iwm_certificates_fid';
		$statusField   		= 'status';
		$remarkPKField 		= 'id'; 
		
	}else if($actID == 13){
		$remarkTableName 	= 'l_remark_license';
		$masterTable 		= 'l_contractor_license_apply_renweal';
		$colCertificateFID  = 'renewal_certificate_id';
		$statusField   		= 'renewal_appliaction_status';
		$remarkPKField 		= 'id'; 
	}
	
	$get_remark = db_select($remarkTableName, 'remarkMaster');
	$get_remark	->leftJoin('role', 'ro', 'ro.rid = remarkMaster.remark_by_role');
	$get_remark->fields('remarkMaster', array());
	$get_remark->fields('ro', array('name'));
	$get_remark->condition('remarkMaster.'.$remarkPKField, trim($remarkRowID));
	$get_remark->condition('remarkMaster.is_active', 1);
	$remarkResult = $get_remark->execute()->fetchAssoc();
	
	/** GET CERTIFICATE ID ***/
	
	$getFID = db_select($masterTable, 'master');
	$getFID->fields('master', array($colCertificateFID));
	if($actID == 13 ){ // Renewal PK ID == REMARK TAbLE's (Particular ID)
		$getFID->condition('master.id', $remarkResult['particular_id']);
	}else{
		$getFID->condition('master.id', $remarkResult['application_id']);
	}
	$getCertificateFID = $getFID->execute()->fetchAssoc(); 
	
	if($actID == 1 ){
		$certificateFID  = $getCertificateFID['certificates_fid'];
		$application_id = $remarkResult['application_id'];
		$flag 			= '';
	}else if($actID == 2 ){
		$certificateFID  = $getCertificateFID['bocwa_registration_certificate'];
		$application_id  = $remarkResult['application_id'];
		$flag 			 = '';
	}else if($actID == 4 ){
		$certificateFID = $getCertificateFID['iwm_certificates_fid']; 
		$application_id = $remarkResult['application_id'];
		$flag 			= ''; 
	}else if($actID == 13 ){
		$certificateFID = $getCertificateFID['renewal_certificate_id'];
		$application_id = $remarkResult['particular_id'];
		$flag 			= 'R';
	}
	
	$delquery		= db_update($remarkTableName)->fields(array('is_active'=> 0))->condition($remarkPKField,$remarkRowID)->execute();
	
	if($actID == 1 ){
		$getLastId	= db_query("SELECT * FROM ".$remarkTableName." WHERE remark_id=(SELECT MAX(remark_id) FROM ".$remarkTableName." WHERE is_active=1 and application_id=".$application_id.")")->fetchObject();
	}else if($actID == 13 ){
		$getLastId	= db_query("SELECT * FROM ".$remarkTableName." WHERE id=(SELECT MAX(id) FROM ".$remarkTableName." WHERE is_active=1 and particular_id=".$application_id." and remark_to=".$remarkResult['remark_to'].")")->fetchObject();
	}else{
		$getLastId = db_query("SELECT * FROM ".$remarkTableName." WHERE id=(SELECT MAX(id) FROM ".$remarkTableName." WHERE is_active=1 and application_id=".$application_id.")")->fetchObject();
	}
	$previousStatus	= $getLastId->remark_type;
	
	
	// Update MASTER ***/
	
	db_update($masterTable)->fields(array($statusField => $previousStatus))->condition('id',$application_id)->execute();
	
	/*if($remarkResult['remark_type'] == 'I' && $actID != 2 ){ //echo $certificateFID.'---'.$remarkResult['remark_by'];exit;
		/*db_update('file_managed')->fields(array('status' => 0))->condition('filename',$certificateFID)->condition('uid',$remarkResult['remark_by'])->execute();
	}else{
		db_update('file_managed')->fields(array('status' => 0))->condition('fid',$certificateFID)->execute();
	}*/
	
	// Update or Delete TAG MASTER ***/
	
	if($actID == 4 ){
		db_update('l_interstate_tag_master')->fields(array('status' => $previousStatus))->condition('application_id',$application_id)->condition('applied_for', 'REG')->condition('pe_user_id', $remarkResult['remark_to'])->condition('act_id', 4)->execute();
		
	}else if($actID == 13){
		
		$tag_query = db_select('l_contractor_activity_tag', 'tag');
		$tag_query->fields('tag', array());
		$tag_query->condition('tag.from_v_serial_no', $remarkResult['remark_to']);
		$tag_query->condition('tag.renewal_license_ammendment_id', $application_id);
		//$tag_query->condition('tag.created_by', $getLicenseResult['contractor_user_id']);
		$tag_query->condition('tag.flag',$flag);
		$tag_query->orderBy('tag.id','DESC');
		$tag_query->range(0, 1);
		$tag_result = $tag_query->execute()->fetchAssoc(); 
			
		if(!empty($tag_result)){
			
			if($tag_result['application_status'] == $remarkResult['remark_type'] && $tag_result['renewal_license_ammendment_id'] == $application_id ){
				
				db_delete('l_contractor_activity_tag')->condition('from_v_serial_no',$tag_result['from_v_serial_no'])->condition('flag',$tag_result['flag'])->condition('renewal_license_ammendment_id',$tag_result['renewal_license_ammendment_id'])->condition('application_status',$tag_result['application_status'])->condition('id',$tag_result['id'])->execute();
			}
		}
	}
	//$changedOutput	=	'Deactivated';
	echo 'Deactivated';exit;
	//return drupal_json_output($changedOutput);
	
	
	
}
	
function common_remark_delete($form, &$form_state, $rowId = '', $application_id='', $app_user_id='' ,$act_id = ''){
	
	global $user;
	$user_id 			= $user->uid;
	
	$user_role = db_select('l_custom_user_detail', 'lcud');
	$user_role->fields('lcud', array('usr_rid'));
	$user_role->condition('lcud.usr_id', trim($user_id));
	$user_role_result = $user_role->execute()->fetchAssoc(); 
	
	$get_user_role 		= $user_role_result['usr_rid'];
	
	$row_id 			= encryption_decryption_fun('decrypt',$rowId); 
	
	/*** 
		$application_id
		
		FOR CLRA License Application Id =   Serial Form-V 
		FOR CLRA Renewal Application Id = 	 Serial Form-V  **/
	
	
	$application_id		= encryption_decryption_fun('decrypt',$application_id); 
	
	/*** $applicantUserId
	
	FOR CLRA License Applicant User Id 	=   particular Id
	FOR CLRA Renewal Application Id 	= 	Renewal Id **/
	
	$applicantUserId	= encryption_decryption_fun('decrypt',$app_user_id); 
	$act_id				= encryption_decryption_fun('decrypt',$act_id);
	
	if($act_id == 2 ){ 
	
		$delquery		= db_update('l_bocwa_remark_master')->fields(array('is_active'=> 0))->condition('id', $row_id)->execute();
		$getLastId		= db_query("SELECT * FROM l_bocwa_remark_master WHERE id=(SELECT MAX(id) FROM l_bocwa_remark_master WHERE is_active=1 and application_id=".$application_id.")")->fetchObject();
		$previousStatus	= $getLastId->remark_type;
		$update			= db_update('l_bocwa_registration_master')->fields(array('status' => $previousStatus))->condition('id',$application_id)->execute();
		
	}else if($act_id == 4 ){ 
	
		$delquery		= db_update('l_interstate_remark_master')->fields(array('is_active'=> 0))->condition('id', $row_id)->execute();
		$getLastId		= db_query("SELECT * FROM l_interstate_remark_master WHERE id=(SELECT MAX(id) FROM l_interstate_remark_master WHERE is_active=1 and application_id=".$application_id.")")->fetchObject();
		$previousStatus	= $getLastId->remark_type;
		$update			= db_update('l_interstate_workman_master')->fields(array('status' => $previousStatus))->condition('id',$application_id)->execute();
		
	}else if($act_id == 42 || $act_id == 43){ 
	
		$delquery		= db_update('l_interstate_remarks_license')->fields(array('is_active'=> 0))->condition('id', $row_id)->execute();
		$getLastId		= db_query("SELECT * FROM l_interstate_remarks_license WHERE id=(SELECT MAX(id) FROM l_interstate_remarks_license WHERE is_active=1 and license_id=".$application_id.")")->fetchObject();
		$previousStatus	= $getLastId->remark_type;		
		$update			= db_update('l_interstate_license_master')->fields(array('status' => $previousStatus))->condition('id',$application_id)->execute();
				
	}elseif($act_id == 12){
		$delquery		= db_update('l_remark_license')->fields(array('is_active'=> 0))->condition('id', $row_id)->execute();
		$getLastId		= db_query("SELECT * FROM l_remark_license WHERE id=(SELECT MAX(id) FROM l_remark_license WHERE is_active=1 and flag= 'L' and particular_id=".$applicantUserId." and remark_to=".$application_id.")")->fetchObject();
		$previousStatus	= $getLastId->remark_type;
		$update			= db_update('l_contractor_license_application')->fields(array('status' => $previousStatus))->condition('serial_no_from_v',$application_id)->condition('contractor_particular_id',$applicantUserId)->execute();
		
		$getLicense  		= 	db_select('l_contractor_license_application', 'license');	
		$getLicense			->  fields('license', array('id', 'contractor_user_id','status'));	
		$getLicense			->	condition('license.serial_no_from_v', $application_id);	
		$getLicense			->	condition('license.contractor_particular_id', $applicantUserId);	
		$getLicenseResult	= 	$getLicense->execute()->fetchAssoc();
		
		if(!empty($getLicenseResult)){
			$tag_query = db_select('l_contractor_activity_tag', 'tag');
			$tag_query->fields('tag', array('id'));
			$tag_query->condition('tag.from_v_serial_no', $application_id);
			$tag_query->condition('tag.renewal_license_ammendment_id', $getLicenseResult['id']);
			$tag_query->condition('tag.created_by', $getLicenseResult['contractor_user_id']);
			$tag_query->condition('tag.flag','L');
			$tag_query->orderBy('tag.id','DESC');
			$tag_query->range(0, 1);
			$tag_result = $tag_query->execute()->fetchAssoc();
			
			$deltag		= db_delete('l_contractor_activity_tag')->condition('id', $tag_result['id'])->execute();
		}
		
	}elseif($act_id == 13){
		
		$delquery		= db_update('l_remark_license')->fields(array('is_active'=> 0))->condition('id', $row_id)->execute();
		$getLastId		= db_query("SELECT * FROM l_remark_license WHERE id=(SELECT MAX(id) FROM l_remark_license WHERE is_active=1 and flag= 'R' and particular_id=".$applicantUserId." and remark_to=".$application_id.")")->fetchObject();
		$previousStatus	= $getLastId->remark_type;
		$preRemarkBy	= $getLastId->remark_by;
		$update			= db_update('l_contractor_license_apply_renweal')->fields(array('renewal_appliaction_status' => $previousStatus,'remark_by_userid' => $preRemarkBy))->condition('serial_no_from_v',$application_id)->condition('contractor_particular_id',$applicantUserId)->execute();
		
		if(!empty($getRenewalRes)){
			$tag_query = db_select('l_contractor_activity_tag', 'tag');
			$tag_query->fields('tag', array('id'));
			$tag_query->condition('tag.from_v_serial_no', $application_id);
			$tag_query->condition('tag.renewal_license_ammendment_id', $applicantUserId);
			$tag_query->condition('tag.created_by', $getRenewalRes['created_by']);
			$tag_query->condition('tag.flag','R');
			$tag_query->orderBy('tag.id','DESC');
			$tag_query->range(0, 1);
			$tag_result = $tag_query->execute()->fetchAssoc();
			
			$deltag		= db_delete('l_contractor_activity_tag')->condition('id', $tag_result['id'])->execute();
		}
	}
	
	
	/** FOR ALC REDIRECTION PAGE ***/
	
	if($get_user_role == 4){  
		
		if($act_id == 2){
			drupal_goto('alc_receivedapplications_bocwa/'.encryption_decryption_fun('encrypt',$application_id).'/'.encryption_decryption_fun('encrypt',$applicantUserId));
		}elseif($act_id == 4){
			drupal_goto('ismwapplications-view/'.encryption_decryption_fun('encrypt',$application_id).'/'.encryption_decryption_fun('encrypt',$applicantUserId));
		}elseif($act_id == 42){
			drupal_goto('ismwlicenseview-employment/'.encryption_decryption_fun('encrypt',$application_id));
		}elseif($act_id == 43){
			drupal_goto('ismwlicenseview-recruitment/'.encryption_decryption_fun('encrypt',$application_id));
		}elseif($act_id == 12){
			drupal_goto('alc-view-license/'.encryption_decryption_fun('encrypt',$application_id).'/'.encryption_decryption_fun('encrypt',$applicantUserId));
		}elseif($act_id == 13){
			drupal_goto('alc-view-contractor-license-renewal/'.encryption_decryption_fun('encrypt',$applicantUserId).'/'.encryption_decryption_fun('encrypt',$getRenewalRes['lincense_id']));
		}
		
	}else{
		
		if($act_id == 42){ /** FOR INSPECTOR REDIRECTION PAGE ***/
		
			drupal_goto('ismwlicenseinspector-employment/'.encryption_decryption_fun('encrypt',$application_id));
			
		}elseif($act_id == 43){
			
			drupal_goto('ismwlicenseinspector-recruitment/'.encryption_decryption_fun('encrypt',$application_id));
		}
	}
	
	drupal_set_message(t('Remark is sucessfully deleted'));
	return $form;
}



/*** Function for Listing All Districts STARTS ****/

function get_all_state($value_country=''){
	if(empty($value_country)){
		$result 			= db_query("SELECT id,statename FROM {state_master} order by statename");
	}else{
		
		if($value_country == 'WB'){
			
			$result 			= db_query("SELECT id,statename FROM {state_master} where id !=1 order by statename");
		}else{
		
			$result 			= db_query("SELECT id,statename FROM {state_master} where country_id = $value_country order by statename");
		}
	}
	$default_select 	= array(""=>"- Select State -");
	
	
	$list 				= array();
	foreach ($result as $record) {
		$list[$record->id] = t('@districtname', array(
			'@districtname' => $record->statename,
		));
	}
	return ($default_select+$list);
}


function get_district_by_id($value_state=''){
	$default_select 	= array(""=>"- Select District -");
	if(!empty($value_state)){
		$result 			= db_query("SELECT district_code,district_name FROM {district_master} where is_active = 'Y' and state_id = $value_state order by district_name");
		$list 				= array();
	foreach ($result as $record) {
		$list[$record->district_code] = t('@districtname', array(
			'@districtname' => $record->district_name,
		));
	}
	return ($default_select+$list);
	}else{
		return ($default_select);
	}
}

/*function get_district_by_id($value_state=''){
	$default_select 	= array(""=>"- Select District -");
	
		$result 			= db_query("SELECT district_code,district_name FROM {district_master} where is_active = 'Y' and state_id = $value_state order by district_name");
		$list 				= array();
	foreach ($result as $record) {
		$list[$record->district_code] = t('@districtname', array(
			'@districtname' => $record->district_name,
		));
	}
	return ($default_select+$list);
	
}*/

//*** Function for dropdown of Concerned Authority to Edit and Update Office Name ***/

function office_name(){	
	global $user;
	
	$query_areatype 	= db_select('block_mun_master', 'bmm');
	$query_areatype		->InnerJoin('l_customuser_relation_address', 'lcra', 'bmm.block_code = lcra.block_code');
	$query_areatype		->fields('bmm',array('block_mun_name'));
	$query_areatype		->condition('lcra.user_id', $user->uid);		
	$result_areatype 	= $query_areatype->execute()->fetchAssoc();
	
	$rlo_ofc = $result_areatype['block_mun_name'];
	
	$office_name_list 	 = array();
	
	$office_name_list['NSB']	= t('OFFICE OF THE LABOUR COMMISSIONER');
	$office_name_list['JLC']	= t('OFFICE OF THE JOINT LABOUR COMMISSIONER');
	$office_name_list['DLC']	= t('OFFICE OF THE DEPUTY LABOUR COMMISSIONER');
	$office_name_list['KLC']	= t('OFFICE OF THE LABOUR COMMISSIONER EL & MW SECTION');
	$office_name_list['ALC']	= t('OFFICE OF THE ASSISTANT LABOUR COMMISSIONER');
	
	if(!empty($user->roles[7])){	
		$office_name_list['INSPECTOR']	= t(strtoupper($rlo_ofc).', LABOUR WELFARE FACILITAION CENTRE');
    }
	
	return $office_name_list;
	
}


/*** FETCH CERTIFICATE OFFICE NAME ****/

function get_certificate_office_name($office_name_data=''){
	
	if ($office_name_data=='DLC'){
		$office_name = 'OFFICE OF THE DEPUTY LABOUR COMMISSIONER ';
	}elseif($office_name_data=='ALC'){
		$office_name = 'OFFICE OF THE ASSISTANT LABOUR COMMISSIONER ';
	}elseif($office_name_data=='KLC'){
		$office_name = 'OFFICE OF THE LABOUR COMMISSIONER EL & MW SECTION';
	}elseif($office_name_data=='JLC'){
		$office_name = 'OFFICE OF THE JOINT LABOUR COMMISSIONER';
	}
	
	return $office_name;
	
	
}
function get_documents_list($id='' , $act_id='',$user_id=''){
	
	$document	= array();
	
	$get_docs 	= db_select('l_documents_upload', 'ldu');
	$get_docs	->fields('ldu', array());
	$get_docs	->condition('ldu.user_id', $user_id);
	$get_docs	->condition('ldu.application_id', trim($id));
	$get_docs	->condition('ldu.act_id', trim($act_id));
	$docs_result = $get_docs->execute()->fetchAssoc();
	
	return $docs_result;	
}

/*** Function for Listing All POST OFFICE STARTS ****/


function common_custom_postoffice($pincode = '') {
	$default_select = array(""=>"- Select Postoffice -");
	$result = db_query("SELECT id, po_name FROM {all_india_pin_code} where pincode = '".$pincode."' and  state_code = '1' order by po_name asc");
	$list = array();
	foreach ($result as $record) {
		$list[$record->id] = t('@postoffice', array(
			'@postoffice' => $record->po_name,
		));
	}
	return ($default_select+$list);
}

/*** Function for CESS ****/
function common_custom_postoffice_cess($pincode = '') {
	$default_select = array(""=>"- Select Postoffice -");
	$result = db_query("SELECT id, po_name FROM {all_india_pin_code} where pincode = '".$pincode."' and state_code = '1' order by po_name asc");
	$list = array();
	foreach ($result as $record) {
		$list[$record->id] = t('@postoffice', array(
			'@postoffice' => $record->po_name,
		));
	}
	return ($default_select+$list);
}

function common_custom_district_in_pincode_cess($pincode = '') {
	$default_select = array(""=>"- Select District -");
	$result = db_query("SELECT district_code, districtname FROM {all_india_pin_code} where state_code = '1' and pincode = '".$pincode."' order by districtname asc"); // pincode = '".$pincode."' and
	$list = array();
	foreach ($result as $record) {
		$list[$record->district_code] = t('@districtname', array(
			'@districtname' => $record->districtname,
		));
	}
	return ($default_select+$list);
}
	
/*** Function for Listing All POST OFFICE ENDS ****/

/*** Function for Listing All DISTRICT UNDER PIN CODE STARTS ****/

function common_custom_district_in_pincode($pincode = '') {
	$default_select = array(""=>"- Select District -");
	$result = db_query("SELECT district_code, districtname FROM {all_india_pin_code} where state_code = '1' order by districtname asc"); // pincode = '".$pincode."' and
	$list = array();
	foreach ($result as $record) {
		$list[$record->district_code] = t('@districtname', array(
			'@districtname' => $record->districtname,
		));
	}
	return ($default_select+$list);
}
	
/*** Function for Listing All DISTRICT UNDER PIN CODE ENDS ****/

/*** Function for Listing All Districts STARTS ****/


function common_custom_user_district_list_new() {
	$default_select 	= array(""=>"- Select District -");
	$result 			= db_query("SELECT district_code,district_name FROM {district_master} where is_active = 'Y' order by district_name");
	$list 				= array();
	foreach ($result as $record) {
		$list[$record->district_code] = t('@districtname', array(
			'@districtname' => $record->district_name,
		));
	}
	return ($default_select+$list);
}
	
/*** Function for Listing All Districts ENDS ****/


/*** Function for Listing of All Subdivisions according to Districts STARTS****/

function common_custom_user_subdivisionlist_list_new($value_dist=''){ 
	$default_subdvselect 	= array(""=>"- Select Sub-division -");
	$all_subdvs 			= array();
	$query_subdv 			= db_select('sub_division', 'subdv');
	$query_subdv			->fields('subdv',array('sub_div_code','sub_div_name'));
	$query_subdv			->orderBy('subdv.sub_div_name', 'ASC');
	$query_subdv			->condition('subdv.is_active','Y');
	$query_subdv			->condition('subdv.district_code',(int)$value_dist);
	$result_subdv 			= $query_subdv->execute(); 
	if(!empty($result_subdv)) {      
	  	foreach($result_subdv as $rows) {
			$all_subdvs[$rows->sub_div_code] = t('@subdvsname', array('@subdvsname' => $rows->sub_div_name));
	  	}    
	}
 	if (isset($all_subdvs)) {			
		return ($default_subdvselect + $all_subdvs);	
	} else {				
		return $default_subdvselect;
	}
}

/*** Function for Listing of All Subdivisions according to Districts ENDS ****/


/*** Function for Areatype Listing STARTS ****/

function common_custom_user_areatype_list_new($value_loc_e_dist, $value_loc_e_subdivision){
	
	$value_loc_e_subdivision	= (int)$value_loc_e_subdivision;
	$default_areatypeselect 	= array(""=>"- Select AreaType -");
	$all_areatype 				= array();
	$query_areatype 			= db_select('block_mun_master', 'bmm');
	$query_areatype				->fields('bmm',array('type'));
	$query_areatype				->condition('bmm.distict_code', trim($value_loc_e_dist));
	$query_areatype				->condition('bmm.sub_division_code', trim($value_loc_e_subdivision));
	$query_areatype				->groupBy('bmm.type');
	$result_areatype 			= $query_areatype->execute(); 
	if(!empty($result_areatype)) {      
			foreach($result_areatype as $rows) {
				if($rows->type=='B'){
					$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'Block'));
				}if($rows->type=='M'){
					$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'Municipality'));
				}if($rows->type=='C'){
					$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'Corporation'));
				}if($rows->type=='S'){
					$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'SEZ'));
				}if($rows->type=='N'){
					$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'Notified Area'));
				}
				
			}
	}
 	if (isset($all_areatype)) {			
		return ($default_areatypeselect + $all_areatype);	
	} else {				
		return $default_areatypeselect;
	}
}

/*** Function for Areatype Listing ENDS ****/

/*** Function for Areatype Listing ENDS ****/

function common_custom_user_get_areatype_list_new($value_loc_e_dist, $value_loc_e_subdivision){
	
		if(!empty($value_loc_e_dist)&& !empty($value_loc_e_subdivision) ){
			$default_areatypeselect 	= array(""=>"- Select AreaType -");
			$all_areatype 				= array();
			$query_areatype 			= db_select('block_mun_master', 'bmm');
			$query_areatype				->fields('bmm',array('type'));
			$query_areatype				->condition('bmm.distict_code', trim($value_loc_e_dist));
			$query_areatype				->condition('bmm.sub_division_code', trim($value_loc_e_subdivision));
			$query_areatype				->groupBy('bmm.type');
			$result_areatype 			= $query_areatype->execute(); 
			if(!empty($result_areatype)) {      
				foreach($result_areatype as $rows) {
					if($rows->type=='B'){
						$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'Block'));
					}if($rows->type=='M'){
						$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'Municipality'));
					}if($rows->type=='C'){
						$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'Corporation'));
					}if($rows->type=='S'){
						$all_areatype[$rows->type] = t('@areatype', array('@areatype' =>'SEZ'));
					}
					
				}    
			}
			//print_r($all_areatype); //exit;
			if (isset($all_areatype)) {			
				return ($default_areatypeselect + $all_areatype);	
			} else {				
				return $default_areatypeselect;
			}
		}else{
			$default_areatypeselect 	= array(""=>"- Select AreaType -");
			return $default_areatypeselect;
		}
	}


/*** Function of All Block Lists STARTS ***/

/*** Function of All Block Lists STARTS ***/

function common_custom_user_block_list_new($value_subdv, $value_areatype){
	$default_blockselect 	= array(""=>"- Select -");
	$all_blocks = array();
	$query_block = db_select('block_mun_master', 'blm');
	$query_block->fields('blm',array('block_code','block_mun_name'));
	$query_block->orderBy('blm.block_mun_name', 'ASC');
	$query_block->condition('blm.sub_division_code',$value_subdv,'=');
	$query_block->condition('blm.type',$value_areatype,'=');
	$query_block->condition('blm.is_active', 'Y','=');
	$result_block = $query_block->execute(); 
	if(!empty($result_block)) {      
	  	foreach($result_block as $rows) {
			$all_blocks[$rows->block_code] = t('@blockname', array('@blockname' => $rows->block_mun_name));
		}    
	}

	if (isset($all_blocks)) {
		return ($default_blockselect + $all_blocks);
	} else {
		return $default_blockselect;
	}
}

/*** Function of All Block Lists ENDS ***/


/*** Function of All Gram Panchayat / Ward Listings STARTS ****/


function common_custom_user_villward_list_new($value_villwared,$value_villwardtype){
	$default_villwardselect 	= array(""=>"- Select -");
	$all_villwards 				= array();
	$query_villwardkname = db_select('village_ward_master', 'vwm');
	$query_villwardkname->fields('vwm',array('village_code','village_name','is_active'));
	$query_villwardkname->condition('vwm.block_code',trim($value_villwared),'=');
	$query_villwardkname->condition('vwm.category',trim($value_villwardtype),'=');
	$query_villwardkname->condition('vwm.is_active', 'Y');
	
	if($value_villwardtype == 'W' || $value_villwardtype == 'C'){		
		$query_villwardkname->orderBy('vwm.ord', 'ASC');
	}else{
		$query_villwardkname->orderBy('vwm.village_name', 'ASC');
	}
	
	$result_villwardkname = $query_villwardkname->execute();  
	if(!empty($result_villwardkname)) {      
		 foreach($result_villwardkname as $rows) {
			if($value_villwardtype == 'W')
				$all_villwards[$rows->village_code] = t('@villwardkname', array('@villwardkname' => 'Ward-'.$rows->village_name));	
			else				
				$all_villwards[$rows->village_code] = t('@villwardkname', array('@villwardkname' => ucwords($rows->village_name)));
		 }    
	}

	if (isset($all_villwards)) {
		return ($default_villwardselect + $all_villwards);
	} else {
		return $default_villwardselect;
	}
}

/*** Function of All Gram Panchayat / Ward Listings ENDS ****/


/*** Function for All Listings of Corporation STARTS ****/

function common_custom_user_corporation_list_new($code){
	$default_corporationselect 		= array(""=>"- Select -");
	$all_corporation 				= array();
	$query_corporationname 			= db_select('village_ward_master', 'vwm');
	$query_corporationname			->fields('vwm',array('village_code', 'village_name'));
	$query_corporationname			->condition('vwm.block_code', $code, '=');
	$query_corporationname			->condition('vwm.category', 'C', '=');
	$query_corporationname			->orderBy('vwm.ord', 'ASC');
	$result_corporationname 		= $query_corporationname->execute(); 		
	if(!empty($result_corporationname)) {      
		foreach($result_corporationname as $rows) {
			$all_corporation[$rows->village_code] = t('@village_name', array('@village_name' => $rows->village_name));
		}    
	}
 	if (isset($all_corporation)) {
		return ($default_corporationselect + $all_corporation);
	} else {
		return $default_corporationselect;
	}
}

/*** Function for All Listings of Corporation ENDS ****/


/*** Function for All Listings of Police Stations STARTS ****/

function common_custom_user_ps_list_new($value_dist,$all=''){
	$default_pselect 	= array(""=>"- Select -");
	$all_ps 			= array();
	$query_psname 		= db_select('police_station', 'ps');
	$query_psname		->fields('ps',array('police_station_code','name_of_police_station'));
	$query_psname		->orderBy('ps.name_of_police_station', 'ASC');
	if($all==''||empty($all)){
	$query_psname		->condition('ps.dristrict_code',$value_dist,'=');
	}
	$result_psname 		= $query_psname->execute(); 
	if(!empty($result_psname)) {      
		foreach($result_psname as $rows) {
			$default_pselect[$rows->police_station_code] = t('@psname', array('@psname' => $rows->name_of_police_station));
		}    
	}
 	if (isset($all_ps)) {
		return ($default_pselect + $all_ps);
	} else {
		return $default_pselect;
	}
}

/*** Function for All Listings of Police Stations ENDS ****/

//---------------return Establishment address for contractor module----------
function miscellaneous_establishment_address_form($loc_e_areatype='',$serial='',$applicantion_id=''){

	$text_AreaType_loc	= '';
	$establishment_address='';
	$fetch_e_add	= db_select('l_clra_registration_master ', 'lcrm');
		$fetch_e_add->InnerJoin('district_master', 'd', 'd.district_code=lcrm.loc_e_dist');
		$fetch_e_add->InnerJoin('sub_division', 's', 's.sub_div_code=lcrm.loc_e_subdivision');
		$fetch_e_add->InnerJoin('block_mun_master', 'b', 'b.block_code=lcrm.name_areatype');
		
		
		
		
		
		$fetch_e_add->InnerJoin('village_ward_master', 'v', 'v.village_code=lcrm.loc_e_vill_ward');
		$fetch_e_add->fields('v', array('village_name'));
		
		$fetch_e_add->InnerJoin('police_station', 'p', 'p.police_station_code=lcrm.l_e_ps');
		$fetch_e_add->fields('lcrm', array('loc_e_name','loc_e_pin_number','loc_e_dist'));
		$fetch_e_add->fields('d', array('district_name'));
		$fetch_e_add->fields('s', array('sub_div_name'));
		$fetch_e_add->fields('b', array('block_mun_name'));
		$fetch_e_add->fields('lcrm', array('loc_e_areatype','loc_e_name'));
		$fetch_e_add->fields('p', array('name_of_police_station'));
		$fetch_e_add->condition('lcrm.id ',$applicantion_id,'=');
		$fetch_e_add->condition('lcrm.act_id ','1','=');
		
		$fetch_e_add_result = $fetch_e_add->execute()->fetchAssoc();
		
		if(!empty($fetch_e_add_result)){
			
			if($fetch_e_add_result['loc_e_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($fetch_e_add_result['village_name']);
			}elseif($fetch_e_add_result['loc_e_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$fetch_e_add_result['village_name']; 
			}elseif($fetch_e_add_result['loc_e_areatype']=="C"){
				$areatype_loc_name = $fetch_e_add_result['village_name'];
			}elseif($fetch_e_add_result['loc_e_areatype']=="S"){
				$areatype_loc_name = $fetch_e_add_result['village_name'];
			}elseif($fetch_e_add_result['loc_e_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$fetch_e_add_result['village_name'];
			}
	
			
			if($fetch_e_add_result['loc_e_dist'] == 17){
		
					$establishment_details = $fetch_e_add_result['loc_e_name'].',<br/>'.$areatype_loc_name.',&nbsp;PS - '.$fetch_e_add_result['name_of_police_station'].',&nbsp;'.$fetch_e_add_result['district_name'].'- '.$fetch_e_add_result['loc_e_pin_number'];
					
			}else{
					$establishment_details = $fetch_e_add_result['loc_e_name'].',<br/>'.$areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$fetch_e_add_result['block_mun_name'].',&nbsp;'.$fetch_e_add_result['sub_div_name'].' - '.$fetch_e_add_result['loc_e_pin_number'].',&nbsp;PS - '.$fetch_e_add_result['name_of_police_station'].',&nbsp;'.$fetch_e_add_result['district_name'];
			}
			
		}
	
	return $establishment_details;
}
//----------return contractor address for contractor module-------------
function miscellaneous_contractor_address_form($areatype='',$serial=''){
   $contractor_address='';
       $fetch_e_add	= db_select('l_contractor_info_master ', 'lcrm');
$fetch_e_add->InnerJoin('district_master', 'd', 'd.district_code=lcrm.con_loc_e_dist');
$fetch_e_add->InnerJoin('sub_division', 's', 's.sub_div_code=lcrm.con_loc_e_subdivision');
$fetch_e_add->InnerJoin('block_mun_master', 'b', 'b.block_code=lcrm.con_name_areatype');

$fetch_e_add->InnerJoin('village_ward_master', 'v', 'v.village_code=lcrm.con_loc_e_vill_ward');
$fetch_e_add->fields('v', array('village_name'));

$fetch_e_add->InnerJoin('police_station', 'p', 'p.police_station_code=lcrm.con_l_e_ps');
$fetch_e_add->fields('lcrm', array('address_of_contractor','contractor_pin'));
$fetch_e_add->fields('d', array('district_name'));
$fetch_e_add->fields('s', array('sub_div_name'));
$fetch_e_add->fields('b', array('block_mun_name'));
$fetch_e_add->fields('lcrm', array('con_loc_e_areatype'));
$fetch_e_add->fields('p', array('name_of_police_station'));
$fetch_e_add->condition('lcrm.id ',$serial,'=');

$fetch_e_add_result = $fetch_e_add->execute()->fetchAssoc();

if(!empty($fetch_e_add_result)){


		if($fetch_e_add_result['con_loc_e_areatype']=='B'){
		
		$contractor_address	= ucwords($fetch_e_add_result['village_name']).',&nbsp;';
		$contractor_address.= $fetch_e_add_result['block_mun_name'].',&nbsp;';
		}
		if($fetch_e_add_result['con_loc_e_areatype']=='C'){
		$contractor_address .= $fetch_e_add_result['village_name'].',&nbsp;';
		$contractor_address .= $fetch_e_add_result['block_mun_name'].',&nbsp;';
		
		}
		if($fetch_e_add_result['con_loc_e_areatype']=='M'){
		$contractor_address .='Ward-'.$fetch_e_add_result['village_name'].',&nbsp;';
		$contractor_address .=$fetch_e_add_result['block_mun_name'].',&nbsp;';
		
		}
		$contractor_address .=$fetch_e_add_result['sub_div_name'].',<br/>';
		
		
		$contractor_address  .='PS- '.$fetch_e_add_result['name_of_police_station'].'<br/>';
		$contractor_address	.='District- '.$fetch_e_add_result['district_name'].',&nbsp; PIN Code:-'.$fetch_e_add_result['contractor_pin'];
}

return $contractor_address;
}

//----Upadte address by contarctor for contractor module

function miscellaneous_contractor_certificate_address_form($contractor_areatype='',$serial='',$particular_id=''){
		$contractor_address='';
		$fetch_con_add	= db_select('l_particular_of_contract_labour ', 'lpcl');
		$fetch_con_add->InnerJoin('district_master', 'd', 'd.district_code=lpcl.contractor_dist');
		$fetch_con_add->InnerJoin('sub_division', 's', 's.sub_div_code=lpcl.contractor_subdivision');
		$fetch_con_add->InnerJoin('block_mun_master', 'b', 'b.block_code=lpcl.contractor_name_areatype');
		
		
		$fetch_con_add->InnerJoin('village_ward_master', 'v', 'v.village_code=lpcl.contractor_vill_ward');
		$fetch_con_add->fields('v', array('village_name'));
		
		$fetch_con_add->InnerJoin('police_station', 'p', 'p.police_station_code=lpcl.contractor_ps');
		$fetch_con_add->fields('d', array('district_name','district_code'));
		$fetch_con_add->fields('s', array('sub_div_name'));
		$fetch_con_add->fields('b', array('block_mun_name'));
		$fetch_con_add->fields('lpcl', array('contractor_areatype','contractor_pin'));
		$fetch_con_add->fields('p', array('name_of_police_station'));
		$fetch_con_add->condition('lpcl.serial_no_from_v ',$serial,'=');
		$fetch_con_add->condition('lpcl.id ',$particular_id,'=');
		$fetch_con_add->condition('lpcl.act_id ','1','=');
		$fetch_con_add_result = $fetch_con_add->execute();
		
	
		
		$fetch_con_add_result = $fetch_con_add->execute()->fetchAssoc();
		
		if(!empty($fetch_con_add_result)){
			if($fetch_con_add_result['district_code']!='17'){ 
			
			
					if($fetch_con_add_result['contractor_areatype']=='B'){
						
							$contractor_address		=	ucwords($fetch_con_add_result['village_name']).',&nbsp;';
							$contractor_address		.=	'Block- '.$fetch_con_add_result['block_mun_name'].',&nbsp;';
					
					}
					if($fetch_con_add_result['contractor_areatype']=='C'){
						  $contractor_address	.=	$fetch_con_add_result['village_name'].',&nbsp;';
						  $contractor_address	.=	$fetch_con_add_result['block_mun_name'].',&nbsp;';
					
					}
					if($fetch_con_add_result['contractor_areatype']=='M'){
						  $contractor_address		.=	$fetch_con_add_result['block_mun_name'].',&nbsp;';
						  $contractor_address		.=	'Ward- '.$fetch_con_add_result['village_name'].',&nbsp;';
					}
						$contractor_address				.=	$fetch_con_add_result['sub_div_name'].',&nbsp;';
						$contractor_address				.=	'PS - '.$fetch_con_add_result['name_of_police_station'].',&nbsp;';
						$contractor_address				.=	'District - '.$fetch_con_add_result['district_name'].',&nbsp;Pin Code - '.$fetch_con_add_result['contractor_pin'];
				  
			}else{
				$contractor_address .= $fetch_con_add_result['village_name'].',&nbsp;PS - '.$fetch_con_add_result['name_of_police_station'].',&nbsp;'. $fetch_con_add_result['district_name'].',&nbsp; Pin Code - '.$fetch_con_add_result['contractor_pin'];
			}
		}
	return $contractor_address;	
}



function miscellaneous_contractor_update_address_form($contractor_areatype='',$serial='',$contractor_id=''){
	
		$contractor_address				='';
		
		$fetch_con_add					= db_select('l_particular_of_contract_labour ', 'lpcl');
		
		$fetch_con_add->InnerJoin('district_master', 'd', 'd.district_code=lpcl.contractor_dist');
		$fetch_con_add->InnerJoin('sub_division', 's', 's.sub_div_code=lpcl.contractor_subdivision');
		$fetch_con_add->InnerJoin('block_mun_master', 'b', 'b.block_code=lpcl.contractor_name_areatype');
		$fetch_con_add->InnerJoin('village_ward_master', 'v', 'v.village_code=lpcl.contractor_vill_ward');
		$fetch_con_add->InnerJoin('police_station', 'p', 'p.police_station_code=lpcl.contractor_ps');
		$fetch_con_add->fields('v', array('village_name'));
		$fetch_con_add->fields('d', array('district_name'));
		$fetch_con_add->fields('s', array('sub_div_name'));
		$fetch_con_add->fields('b', array('block_mun_name'));
		$fetch_con_add->fields('lpcl', array('contractor_areatype','contractor_pin', 'address_of_contractor', 'contractor_dist'));
		$fetch_con_add->fields('p', array('name_of_police_station'));
		
		$fetch_con_add->condition('lpcl.serial_no_from_v ',$serial,'=');
		$fetch_con_add->condition('lpcl.contractor_user_id ',$contractor_id,'=');
		$fetch_con_add->condition('lpcl.act_id ','1','=');
		
		$fetch_con_add_result 			= $fetch_con_add->execute()->fetchAssoc();
		
		
		if(!empty($fetch_con_add_result)){
			if($fetch_con_add_result['contractor_areatype']=='B'){
				
				$contractor_address		=	ucwords($fetch_con_add_result['village_name']).',&nbsp;';
				$contractor_address		=	$contractor_address.$fetch_con_add_result['block_mun_name'].',&nbsp;';
			
			}
			if($fetch_con_add_result['contractor_areatype']=='C'){
				
				$contractor_address	= $contractor_address.$fetch_con_add_result['village_name'].',&nbsp;';
				if($fetch_con_add_result['contractor_dist'] != 17){
					$contractor_address	= $contractor_address.$fetch_con_add_result['block_mun_name'].',&nbsp;';
				}
			
			}
			if($fetch_con_add_result['contractor_areatype']=='M'){
				$contractor_address		=	$contractor_address.'Ward-'.$fetch_con_add_result['village_name'].',&nbsp;';
				$contractor_address		=   $contractor_address.$fetch_con_add_result['block_mun_name'].',&nbsp;';
			}if($fetch_con_add_result['contractor_areatype']=='N'){
				$contractor_address		=	'Notified Area-'.$fetch_con_add_result['village_name'].',&nbsp;';
				//$contractor_address		=   $contractor_address.$fetch_con_add_result['block_mun_name'].',&nbsp;';
			}if($fetch_con_add_result['contractor_areatype']=='S'){
				$contractor_address		=	$contractor_address.$fetch_con_add_result['village_name'].',&nbsp;';
				//$contractor_address		=   $contractor_address.$fetch_con_add_result['block_mun_name'].',&nbsp;';
			}
			
			$sub_div_name = '';
			
			if($fetch_con_add_result['contractor_dist'] != 17){
				$sub_div_name = $fetch_con_add_result['sub_div_name'];
			}
			
		$contractor_address	= $fetch_con_add_result['address_of_contractor'].'<br>'.$contractor_address.$sub_div_name;
		$contractor_address	= $contractor_address.'PS- '.$fetch_con_add_result['name_of_police_station'].', ';
		$contractor_address	= $contractor_address.$fetch_con_add_result['district_name'].',&nbsp; PIN Code:-'.$fetch_con_add_result['contractor_pin'];
		
		}
		
		
		
	return $contractor_address;	
}

//--------------------------------contractor manager address-------------------------------
	
function miscellaneous_contractor_manager_address_form($contractor_manager_areatype='',$serial='',$contractor_id=''){
	
	$contractor_manager_address			=	'';	
	
	$fetch_con_mang_add					= db_select('l_particular_of_contract_labour ', 'lpcl');
	$fetch_con_mang_add->InnerJoin('district_master', 'd', 'd.district_code=lpcl.contractor_manager_dist');
	$fetch_con_mang_add->InnerJoin('sub_division', 's', 's.sub_div_code=lpcl.contractor_manager_subdivision');
	$fetch_con_mang_add->InnerJoin('block_mun_master', 'bl', 'bl.block_code=lpcl.contractor_manager_name_areatype');
	$fetch_con_mang_add->InnerJoin('village_ward_master', 'v', 'v.village_code=lpcl.contractor_managerr_vill_ward');
	$fetch_con_mang_add->InnerJoin('police_station', 'p', 'p.police_station_code=lpcl.contractor_manager_ps');
	$fetch_con_mang_add->fields('d', array('district_name'));
	$fetch_con_mang_add->fields('s', array('sub_div_name'));
	$fetch_con_mang_add->fields('v', array('village_name'));
	$fetch_con_mang_add->fields('bl', array('block_mun_name'));
	$fetch_con_mang_add->fields('lpcl', array('contractor_manager_areatype','manager_pin'));
	$fetch_con_mang_add->fields('p', array('name_of_police_station'));
	$fetch_con_mang_add->condition('lpcl.serial_no_from_v ',$serial,'=');
	$fetch_con_mang_add->condition('lpcl.contractor_user_id ',$contractor_id,'=');
	$fetch_con_mang_add->condition('lpcl.act_id ','1','=');
	$fetch_con_mang_add_result = $fetch_con_mang_add->execute()->fetchAssoc();
	
	if(!empty($fetch_con_mang_add_result)){
		 
	
		if($fetch_con_mang_add_result['contractor_manager_areatype']=='B'){
			$contractor_manager_address		=	ucwords($fetch_con_mang_add_result['village_name']).',&nbsp;';
			$contractor_manager_address		=	$contractor_manager_address.$fetch_con_mang_add_result['block_mun_name'].',&nbsp;';
		}
		if($fetch_con_mang_add_result['contractor_manager_areatype']=='C'){
			$contractor_manager_address		 =	$contractor_manager_address.$fetch_con_mang_add_result['village_name'].',&nbsp;';
			$contractor_manager_address		 =	$contractor_manager_address.$fetch_con_mang_add_result['block_mun_name'].',&nbsp;';
		
		}
		if($fetch_con_mang_add_result['contractor_manager_areatype']=='M'){
			$contractor_manager_address		=	$contractor_manager_address.'Ward-'.$fetch_con_mang_add_result['village_name'].',&nbsp;';
			$contractor_manager_address		=	$contractor_manager_address.$fetch_con_mang_add_result['block_mun_name'].',&nbsp;';
		}if($fetch_con_mang_add_result['contractor_manager_areatype']=='N'){
				$contractor_manager_address		=	'Notified Area-'.$fetch_con_mang_add_result['village_name'].',&nbsp;';
				//$contractor_address		=   $contractor_address.$fetch_con_add_result['block_mun_name'].',&nbsp;';
		}if($fetch_con_mang_add_result['contractor_manager_areatype']=='S'){
				$contractor_manager_address		=	$contractor_manager_address.$fetch_con_mang_add_result['village_name'].',&nbsp;';
				//$contractor_manager_address		=   $contractor_manager_address.',&nbsp;';
		}
		$contractor_manager_address			=	$contractor_manager_address.$fetch_con_mang_add_result['sub_div_name'].',<br/>';
		$contractor_manager_address			=	$contractor_manager_address.'PS- '.$fetch_con_mang_add_result['name_of_police_station'].'<br/>';
		$contractor_manager_address		    =	$contractor_manager_address.'District- '.$fetch_con_mang_add_result['district_name'].',&nbsp; PIN Code:-'.$fetch_con_mang_add_result['manager_pin'];
	
	}
	return $contractor_manager_address;
}
function encryption_decryption_fun($action, $string) {
    $output 		= false;
    $encrypt_method = "AES-256-CBC";
    
    $secret_key 	= 'labour';
    $secret_iv 		= 'Lc#Nic@2015';
	
    $key = hash('sha512', $secret_key);
	
    $iv = substr(hash('sha512', $secret_iv), 0, 16);

    if( $action == 'encrypt' ) {
        $output = openssl_encrypt($string, $encrypt_method, $key, 0, $iv);
        $output = base64_encode($output);
    }else if( $action == 'decrypt' ){
        $output = openssl_decrypt(base64_decode($string), $encrypt_method, $key, 0, $iv);
    }
    return $output;
}


	function getNatureOfWork($application_id){
		
		$contractor_nat_work_query	=	db_query("select cw.contractor_work_id, cw.cont_work_name from l_clra_reg_nature_of_work lcrnow left join contractor_works cw on cw.contractor_work_id=lcrnow.e_nature_of_work where lcrnow.application_id='".$application_id."'");
		 
		if(!empty($contractor_nat_work_query)){
			foreach ($contractor_nat_work_query as $resultData){ 
				$res[$resultData->contractor_work_id]	=	$resultData->cont_work_name;
			}
		}
		return $res;
	}
	
	//---------------------fetch details of l_clra_master---------------------------------------
	
	function get_details_clra_master($application_id){
		$query = db_select('l_clra_registration_master', 'c_r_m');
 		$query->fields('c_r_m',array())->condition('id',$application_id,'=');
		$query->condition('act_id','1','=');
		$result = $query->execute()->fetchAssoc();
		return $result;
	

	}
	
	//---------Nature of work of contractor-------------------
	
	function get_nature_of_work_contrcator($application_id,$con_info_id){ 
	//echo $con_info_id.'<br>'.$application_id;
	
	$query_work = db_select('l_clra_con_nature_of_work', 'con_nature_work');
  	$query_work->leftJoin('contractor_works', 'con_work','con_work.contractor_work_id =con_nature_work.contractor_nature_of_work');  

  	$query_work->fields('con_nature_work',array('contractor_id','user_id','act_id'));
  	$query_work->fields('con_work',array('contractor_work_id','cont_work_name'));
  	$query_work->condition('con_nature_work.application_id',$application_id,'=');
	$query_work->condition('con_nature_work.contractor_id',$con_info_id,'=');
	$result_work = $query_work->execute(); 
//print_r($result_work);
	return $result_work;
	}
	
	
//------------------------------address of primery applicant--------------------------- 
	
	function miscellaneous_principal_employer($loc_emp_areatype='',$serial='',$applicantion_id=''){

	$text_AreaType_loc='';
	$principal_address='';
	$fetch_emp_add	= db_select('l_clra_registration_master ', 'lcrm');
		$fetch_emp_add->InnerJoin('district_master', 'd', 'd.district_code=lcrm.loc_emp_dist');
		$fetch_emp_add->InnerJoin('sub_division', 's', 's.sub_div_code=lcrm.loc_emp_subdivision');
		$fetch_emp_add->InnerJoin('block_mun_master', 'b', 'b.block_code=lcrm.emp_name_areatype');
		
		$fetch_emp_add->InnerJoin('village_ward_master', 'v', 'v.village_code=lcrm.loc_emp_vill_ward');
		$fetch_emp_add->fields('v', array('village_name'));
		
	
		$fetch_emp_add->InnerJoin('police_station', 'p', 'p.police_station_code=lcrm.l_emp_ps');
		$fetch_emp_add->fields('d', array('district_name'));
		$fetch_emp_add->fields('s', array('sub_div_name'));
		$fetch_emp_add->fields('b', array('block_mun_name'));
		$fetch_emp_add->fields('lcrm', array('loc_emp_areatype','loc_emp_pin_number','loc_emp_dist'));
		$fetch_emp_add->fields('p', array('name_of_police_station'));
		$fetch_emp_add->condition('lcrm.id ',$applicantion_id,'=');
		$fetch_emp_add->condition('lcrm.act_id ','1','=');
		
		$fetch_emp_add_result = $fetch_emp_add->execute()->fetchAssoc();
		
		
		if(!empty($fetch_emp_add_result)){
			

			if($fetch_emp_add_result['loc_emp_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($fetch_emp_add_result['village_name']);
			}elseif($fetch_emp_add_result['loc_emp_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$fetch_emp_add_result['village_name']; 
			}elseif($fetch_emp_add_result['loc_emp_areatype']=="C"){
				$areatype_loc_name = $fetch_emp_add_result['village_name'];
			}elseif($fetch_emp_add_result['loc_emp_areatype']=="S"){
				$areatype_loc_name = $fetch_emp_add_result['village_name'];
			}elseif($fetch_emp_add_result['loc_emp_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$fetch_emp_add_result['village_name'];
			}
	
			
			if($fetch_emp_add_result['loc_emp_dist'] == 17){
		
					$principal_address = $areatype_loc_name.',&nbsp;PS - '.$fetch_emp_add_result['name_of_police_station'].',&nbsp;'.$fetch_emp_add_result['district_name'].'- '.$fetch_emp_add_result['loc_emp_pin_number'];
					
			}else{
					$principal_address = $areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$fetch_emp_add_result['block_mun_name'].',&nbsp;'.$fetch_emp_add_result['sub_div_name'].' - '.$fetch_emp_add_result['loc_emp_pin_number'].',&nbsp;PS - '.$fetch_emp_add_result['name_of_police_station'].',&nbsp;'.$fetch_emp_add_result['district_name'];
			}
			 
		}
	
	return $principal_address;
}


function application_status($serial, $contractor_id){
		$status_query 			= 	db_select('l_contractor_license_application', 'cla');
		$status_query			->	fields('cla',array('status','final_status','contractor_particular_id','created_date','certificates_id','application_id'))->condition('serial_no_from_v',$serial,'=');
		$status_query			->	condition('contractor_user_id',$contractor_id,'=');
		$status_query_result 	= 	$status_query->execute()->fetchAssoc();
		return $status_query_result;
		
}

function fetch_editable_field($serial ,$particulerid){
	$query = db_select('l_remark_license', 'lrl')
						 ->	fields('lrl', array('remark_field_title'))
						 ->	condition('lrl.remark_to', $serial)
						  ->condition('lrl.particular_id', $particulerid)
						   ->condition('lrl.flag', 'L')
						->	orderBy('id', 'DESC')
						 -> extend('PagerDefault')->limit(1);
						 
			$remark_field_text_query = $query->execute();
			$remark_field_text_array = $remark_field_text_query->fetchAssoc();
	return $remark_field_text_array;
}

function get_act_list_misc(){
	$default_pselect 	= array(""=>"- Select -");
	$all_acts 			= array();
			
	$query1	= db_select('l_inspection_master', 'iact');		
	$query1->fields('iact', array('inspection_txt_type', 'inspection_name'));	
	$query1->groupBy('iact.inspection_txt_type');
	$query1->groupBy('iact.inspection_name');
	$query1->orderby('iact.inspection_name');
		
	$query1 = $query1->execute();
	
	if($query1->rowCount()> 0){	
		foreach($query1 as $rows) {
			$default_act[$rows->inspection_txt_type] = t('@psname', array('@psname' => $rows->inspection_name));
		}    
	}
	if (isset($all_acts)) {
		return ($default_act + $all_acts);
	} else {
		return $default_act;
	}
}


function miscellaneous_alc($alc_user_id=''){
	


	$alc_address='';

	
	$fetch_alc_add	= db_select('l_customuser_relation_address ', 'lcra');
	$fetch_alc_add->LeftJoin('district_master', 'd', 'd.district_code=lcra.district_code');
	$fetch_alc_add->LeftJoin('sub_division', 's', 's.sub_div_code=lcra.sub_div_code');
	$fetch_alc_add->LeftJoin('block_mun_master', 'b', 'b.block_code=lcra.block_code');
	$fetch_alc_add->fields('lcra', array('address','pin_number'));
	$fetch_alc_add->fields('d', array('district_name'));
	$fetch_alc_add->fields('s', array('sub_div_name'));
	$fetch_alc_add->condition('lcra.user_id',$alc_user_id);
		
	$fetch_alc_add_result = $fetch_alc_add->execute()->fetchAssoc();
		
	if(!empty($fetch_alc_add_result)){
		
		$alc_address = $fetch_alc_add_result['address'];
		$alc_address = $alc_address.'&nbsp;'.$fetch_alc_add_result['sub_div_name'].',&nbsp;';
		$alc_address = $alc_address. $fetch_alc_add_result['district_name'].',&nbsp;PIN- '.$fetch_alc_add_result['pin_number'];
		
	}
	
	return $alc_address;
}

function convertNumberToWord($number){
   $no = round($number);
   $point = round($number - $no, 2) * 100;
   $hundred = null;
   $digits_1 = strlen($no);
   $i = 0;
   $str = array();
   $words = array('0' => '', '1' => 'one', '2' => 'two',
    '3' => 'three', '4' => 'four', '5' => 'five', '6' => 'six',
    '7' => 'seven', '8' => 'eight', '9' => 'nine',
    '10' => 'ten', '11' => 'eleven', '12' => 'twelve',
    '13' => 'thirteen', '14' => 'fourteen',
    '15' => 'fifteen', '16' => 'sixteen', '17' => 'seventeen',
    '18' => 'eighteen', '19' =>'nineteen', '20' => 'twenty',
    '30' => 'thirty', '40' => 'forty', '50' => 'fifty',
    '60' => 'sixty', '70' => 'seventy',
    '80' => 'eighty', '90' => 'ninety');
   $digits = array('', 'hundred', 'thousand', 'lakh', 'crore');
   while ($i < $digits_1) {
     $divider = ($i == 2) ? 10 : 100;
     $number = floor($no % $divider);
     $no = floor($no / $divider);
     $i += ($divider == 10) ? 1 : 2;
     if ($number) {
        $plural = (($counter = count($str)) && $number > 9) ? 's' : null;
        $hundred = ($counter == 1 && $str[0]) ? ' and ' : null;
        $str [] = ($number < 21) ? $words[$number] .
            " " . $digits[$counter] . $plural . " " . $hundred
            :
            $words[floor($number / 10) * 10]
            . " " . $words[$number % 10] . " "
            . $digits[$counter] . $plural . " " . $hundred;
     } else $str[] = null;
  }
  $str = array_reverse($str);
  $result = implode('', $str);
  $points = ($point) ?
    "." . $words[$point / 10] . " " . 
          $words[$point = $point % 10] : '';
  
  return ucwords($result);
}

///---------------------------------data of  l_contractor_license_apply_renweal-----------------------
function fetch_all_data_contractor_license_apply_renweal($license_id,$contractor_id){
	
	$license_apply_renweal = db_select('l_contractor_license_apply_renweal', 'lclar');
  	$license_apply_renweal->fields('lclar',array());
  	$license_apply_renweal->condition('lclar.lincense_id',$license_id,'=');
	$license_apply_renweal->condition('lclar.created_by',$contractor_id,'=');
	$license_apply_renweal->condition('lclar.action','R','=');
	//$license_apply_renweal->condition('created_date', array($renweal_prev, $license_date), 'BETWEEN');
	$license_apply_renweal->range(0,1);
	

	
	$result_license_apply_renweal = $license_apply_renweal->execute()->fetchAssoc();

	
return $result_license_apply_renweal;
	
}
///------------------------fetch data of l_particular_of_contract_labour table
function fetch_all_data_particular_of_contract_labour($serial,$contractor_id){
	$particular_labour = db_select('l_particular_of_contract_labour', 'l_particular_con_labour');
  	$particular_labour->fields('l_particular_con_labour',array());
  	$particular_labour->condition('l_particular_con_labour.serial_no_from_v',$serial,'=');
	$particular_labour->condition('l_particular_con_labour.contractor_user_id',$contractor_id,'=');
	$particular_labour->condition('l_particular_con_labour.act_id','1','=');
	$result_particular_labour = $particular_labour->execute()->fetchAssoc(); 
	return $result_particular_labour;
}
//---------------------------License Renwal Fess calculation------------------------
function license_renewal_fees_calculation($maxlabour){
	

	if( $maxlabour <= 20 ){
		$fees= $maxlabour*5;
		
	}
	if( $maxlabour > 20 && $maxlabour <= 50 ){
	    $fees= $maxlabour*12.50;
		
	}
	if( $maxlabour > 50 && $maxlabour <= 100 ){
		$fees= $maxlabour*25;
		
	}
	if( $maxlabour > 100 && $maxlabour <= 200 ){
		$fees= $maxlabour*50;
		
	}
	if( $maxlabour > 200 && $maxlabour <= 400 ){
		$fees= $maxlabour*100;
		
	}
	if( $maxlabour > 400 ){
		$fees= $maxlabour*125;
		
		
	}
	return $fees;
}

function licence_actions_dropdown_by_alc($action_value='',$particularid){
	
	$options 			= array();
	
	if ($action_value == 'U'){
		
		$options['P']				= t('Form IV Back For Correction');
		$options['C']				= t('Call Applicant');
		$options['I']				= t('Issue Certificate');
		$options['R']				= t('Reject');
	
		
	}else if ($action_value == 'C'){
		
		$options['C']		= t('Call Applicant');
		$options['I']		= t('Issue Certificate');
		$options['R']		= t('Reject');
		
	}else {
		
		$options['B']		= t('Back For Correction');
		$options['BI']		= t('Back To Inspector');
		$options['A']		= t('Verified & Approval For Fees Submission');
		$options['R']		= t('Reject');
			
	} 
	return $options;	
	
}

function get_registration_code($block_code){
	
	$query						= 	db_select('block_mun_master', 'bmm');
  	$query						->	fields('bmm',array('registrar_code'));
  	$query						->	condition('bmm.block_code',$block_code,'=');
	$get_registration_code 		= 	$query->execute()->fetchObject()->registrar_code; 
	
	return $get_registration_code;
}

function drupal_set_message_custom($custom_message = NULL,$variables=NULL) {
  
 
  if(count($_SESSION['custom_message'][$type])>1){
	   unset($_SESSION['custom_message'][$type]);
	  if ($custom_message) {
    if (!isset($_SESSION['custom_message'][$type])) {
      $_SESSION['custom_message'][$type] = array();
	  $_SESSION['custom_message'][$type] = $custom_message;
    }

 
    // Mark this page as being uncacheable.
    drupal_page_is_cacheable(FALSE);
  }
  }else{
	  if ($custom_message) {
    if (isset($_SESSION['custom_message'][$type])) {//die('hiii');
      $_SESSION['custom_message'][$type] = array();
	  $_SESSION['custom_message'][$type] = $custom_message;

    }else{
		
		 $_SESSION['custom_message'][$type] = array();
	  	$_SESSION['custom_message'][$type] = $custom_message;
	}

 
    // Mark this page as being uncacheable.
    drupal_page_is_cacheable(FALSE);
  }
  }

if($variables == 'status'){
	      $output .= '<h2 class="element-invisible">' . $_SESSION['custom_message'][$type] . "</h2>\n";

}elseif($variables == 'error'){
	      $output .= '<div class=" messages error">' . $_SESSION['custom_message'][$type] . "</div>\n";

}elseif($variables == 'warning'){
	      $output .= '<div class="messages warning">' . $_SESSION['custom_message'][$type] . "</div>\n";

}else{
	 $output .= '<div class="messages status">' . $_SESSION['custom_message'][$type] . "</div>\n";

}

  return $output;
 
}

function contractor_license_apply_renweal($license_renweal_id){
	
	$license_renweal = db_select('l_contractor_license_apply_renweal', 'lclar');
  	$license_renweal->fields('lclar',array());
  	$license_renweal->condition('lclar.id',$license_renweal_id,'=');
	
	$license_renweal_data = $license_renweal->execute()->fetchAssoc();

	
return $license_renweal_data;
	
}
function get_remark_renewal($license_renweal_id){
	
	$remark_details = db_select('l_license_renewal_remark', 'lrm');
	$remark_details->fields('lrm', array('remark_field_title'));
	$remark_details->condition('lrm.remark_to',$license_renweal_id); 
	$remark_details->condition('lrm.remark_type', 'F', '!=');
	$remark_details->orderBy('lrm.id','DESC');
	$remark_details->range(0, 1);
	$remark_details_result = $remark_details->execute()->fetchAssoc();
	return $remark_details_result;
}

/*function get_district_list_new() {
	$default_select 	= array(""=>"- Select District -");
	$result 			= db_query("SELECT district_code,district_name FROM {district_master} where is_active = 'Y' order by district_name");
	$list 				= array();
	foreach ($result as $record) {
		$list[$record->district_code] = t('@districtname', array(
			'@districtname' => $record->district_name,
		));
	}
	return ($default_select+$list);
}

function get_subdivisionlist_list_new($value_dist){
//echo $value_dist;//exit;

	$default_subdvselect 	= array(""=>"- Select Sub-division -");
	$all_subdvs 			= array();
	$query_subdv 			= db_select('sub_division', 'subdv');
	$query_subdv			->fields('subdv',array('sub_div_code','sub_div_name'));
	$query_subdv			->orderBy('subdv.sub_div_name', 'ASC');
	$query_subdv			->condition('subdv.is_active','Y');
	$query_subdv			->condition('subdv.district_code',(int)$value_dist);
	$result_subdv 			= $query_subdv->execute(); 
	if(!empty($result_subdv)) {      
	  	foreach($result_subdv as $rows) {
			$all_subdvs[$rows->sub_div_code] = t('@subdvsname', array('@subdvsname' => $rows->sub_div_name));
	  	}    
	}
	//print_r($all_subdvs);
 	if (isset($all_subdvs)) {			
		return ($default_subdvselect + $all_subdvs);	
	} else {				
		return $default_subdvselect;
	}
}*/

/*function get_areatype_list_new($value_loc_e_dist, $value_loc_e_subdivision){
	$default_areatypeselect 	= array(""=>"- Select AreaType -");
	$all_areatype 				= array();
	$query_areatype 			= db_select('block_mun_master', 'bmm');
	$query_areatype				->fields('bmm',array('type'));
	$query_areatype				->condition('bmm.distict_code', trim($value_loc_e_dist));
	$query_areatype				->condition('bmm.sub_division_code', trim($value_loc_e_subdivision));
	$query_areatype				->groupBy('bmm.type');
	$result_areatype 			= $query_areatype->execute(); 
	if(!empty($result_areatype)) {      
	  	foreach($result_areatype as $rows) {
			$all_areatype[$rows->type] = t('@areatype', array('@areatype' => $rows->type));
	  	}    
	}
	//print_r($all_areatype); //exit;
 	if (isset($all_areatype)) {			
		return ($default_areatypeselect + $all_areatype);	
	} else {				
		return $default_areatypeselect;
	}
}*/

/*function get_block_list_new($value_subdv, $value_areatype){
	$default_blockselect 	= array(""=>"- Select -");
	$all_blocks 			= array();
	$query_block 			= db_select('block_mun_master', 'blm');
	$query_block			->fields('blm',array('block_code','block_mun_name'));
	$query_block			->orderBy('blm.block_mun_name', 'ASC');
	$query_block			->condition('blm.sub_division_code',$value_subdv,'=');
	$query_block			->condition('blm.type',$value_areatype,'=');
	$result_block 			= $query_block->execute(); 
	if(!empty($result_block)) {      
	  	foreach($result_block as $rows) {
			$all_blocks[$rows->block_code] = t('@blockname', array('@blockname' => $rows->block_mun_name));
		}    
	}

	if (isset($all_blocks)) {
		return ($default_blockselect + $all_blocks);
	} else {
		return $default_blockselect;
	}
}*/

/*function get_villward_list_new($value_villwared,$value_villwardtype){
	$default_villwardselect 	= array(""=>"- Select -");
	$all_villwards 				= array();
	$query_villwardkname 		= db_select('village_ward_master', 'vwm');
	$query_villwardkname		->fields('vwm',array('village_code','village_name'));
	$query_villwardkname		->orderBy('vwm.village_name', 'ASC');
	$query_villwardkname		->condition('vwm.block_code',$value_villwared,'=');
	$query_villwardkname		->condition('vwm.category',$value_villwardtype,'=');
	$result_villwardkname 		= $query_villwardkname->execute(); 
	if(!empty($result_villwardkname)) {      
		 foreach($result_villwardkname as $rows) {
			if($value_villwardtype == 'W')
				$all_villwards[$rows->village_code] = t('@villwardkname', array('@villwardkname' => 'Ward.'.$rows->village_name));	
			else				
				$all_villwards[$rows->village_code] = t('@villwardkname', array('@villwardkname' => ucwords($rows->village_name)));
		 }    
	}

	if (isset($all_villwards)) {
		return ($default_villwardselect + $all_villwards);
	} else {
		return $default_villwardselect;
	}
}*/

function get_ps_list_new($value_dist){
	$default_pselect 	= array(""=>"- Select -");
	$all_ps 			= array();
	$query_psname 		= db_select('police_station', 'ps');
	$query_psname		->fields('ps',array('police_station_code','name_of_police_station'));
	$query_psname		->orderBy('ps.name_of_police_station', 'ASC');
	$query_psname		->condition('ps.dristrict_code',$value_dist,'=');
	$result_psname 		= $query_psname->execute(); 
	if(!empty($result_psname)) {      
		foreach($result_psname as $rows) {
			$default_pselect[$rows->police_station_code] = t('@psname', array('@psname' => $rows->name_of_police_station));
		}    
	}
 	if (isset($all_ps)) {
		return ($default_pselect + $all_ps);
	} else {
		return $default_pselect;
	}
}


function get_corporation_list_new($code){
	$default_corporationselect 		= array(""=>"- Select -");
	$all_corporation 				= array();
	$query_corporationname 			= db_select('village_ward_master', 'vwm');
	$query_corporationname			->fields('vwm',array('village_code', 'village_name'));
	$query_corporationname			->condition('vwm.block_code', $code, '=');
	$query_corporationname			->condition('vwm.category', 'C', '=');
	$query_corporationname			->orderBy('vwm.ord', 'ASC');
	$result_corporationname 		= $query_corporationname->execute(); 		
	if(!empty($result_corporationname)) {      
		foreach($result_corporationname as $rows) {
			$all_corporation[$rows->village_code] = t('@village_name', array('@village_name' => $rows->village_name));
		}    
	}
 	if (isset($all_corporation)) {
		return ($default_corporationselect + $all_corporation);
	} else {
		return $default_corporationselect;
	}
}

function get_common_function_for_phone($userid = '',$type=''){
	global $user;
	if(!empty($type) && (!empty($userid) || $userid != '')){
		$fetch_users_phone		= db_select('l_custom_user_detail', 'lcam');
		$fetch_users_phone->fields('lcam', array('mobile'));
		$fetch_users_phone->condition('lcam.usr_id', trim($userid));
		
	}else{
		$fetch_users_phone		= db_select('l_common_application_master', 'lcam');
		$fetch_users_phone->fields('lcam', array('mobile'));
		$fetch_users_phone->condition('lcam.user_id', trim($user->uid));
	}
	
	
	
	$fetch_users_phone_data 	= $fetch_users_phone->execute()->fetchAssoc();
	
	$phone = $fetch_users_phone_data['mobile'];
	return $phone;
}

function license_details($serial_no_form_v='',$contractor_user_id=''){


  $fetch_license_details	 = 	db_select('l_contrcator_previous_license', 'previouslicense');
  $fetch_license_details	 ->	fields('previouslicense', array('perivious_license_no','reg_no_principal_employeer'));
  $fetch_license_details	 ->	condition('previouslicense.created_by',$contractor_user_id);
  $fetch_license_details	 ->	condition('previouslicense.serial_no_form_v',$serial_no_form_v);
  
  $fetch_license_details_data 	= 	$fetch_license_details->execute()->fetchAll();
 
  $pervious_license_detais='';

  if(!empty($fetch_license_details_data)){
		foreach($fetch_license_details_data as $row){
			$perivious_license_no 	 = 	$row->perivious_license_no;
			$reg_no_principal_employeer	 =	$row->reg_no_principal_employeer;
				if(!empty($reg_no_principal_employeer)){ 
					
					 $e_data	 = 	db_select('l_clra_registration_master', 'lcrm');
					  $e_data	 ->	fields('lcrm', array('e_name','registration_number'));
					  $e_data	 ->	condition('lcrm.registration_number',$reg_no_principal_employeer);
					 
					$e_details_res 	 = 	$e_data->execute()->fetchAll();
				
				
				foreach($e_details_res as $data){
				
				$pervious_license_detais	.= $data->e_name.', '.$data->registration_number.'<br/>'; 
				}

		}if(!empty($perivious_license_no)){
				$e_data_license   	 ='';
				$e_license	 ='';
				
				$e_data_license 	 = 	db_select('l_contractor_license_application', 'license');
				$e_data_license	 ->	InnerJoin('l_clra_registration_master', 'clramaster','clramaster.registration_number = license.principal_reg_no');
				$e_data_license	 ->	fields('clramaster',array('e_name','registration_number'));
				$e_data_license	 ->	condition('license.contractor_license_number',$perivious_license_no,'=');
				$e_license 	 = 	$e_data_license->execute()->fetchAll();

		foreach($e_license as $row1){

			$pervious_license_detais	.= $row1->e_name.', '.$row1->registration_number.'<br/>'; 
		}

	}



	
}
}
	if(empty($pervious_license_detais)){
	
			$pervious_license_detais ='NIL';
	}
	
	return 	$pervious_license_detais;
	
	
}

function total_mtw_application($role = '', $sudiv_code = ''){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
		$result	= db_select('l_mtw_registration_master', 'mtw');
		$result	->fields('mtw',array('id'));
		$result->isNotNull('mtw.status');
		$result->isNotNull('mtw.mtw_loc_subdivision');
		$result->isNotNull('mtw.mtw_loc_areatype');
		$result->isNotNull('mtw.mtw_loc_areatype_code');		
		
		$num_of_results = $result->execute()->rowCount();
		
	}else if($role == 'ALC' && $sudiv_code != ''){
		$result	= db_select('l_mtw_registration_master', 'mtw');
		$result	->fields('mtw',array('id'));
		$result->isNotNull('mtw.status');
		$result->isNotNull('mtw.mtw_loc_subdivision');
		$result->isNotNull('mtw.mtw_loc_areatype');
		$result->isNotNull('mtw.mtw_loc_areatype_code');
		$result->condition('mtw.mtw_loc_subdivision', $sudiv_code,'=');
				
		$num_of_results = $result->execute()->rowCount();
	}
	
	return $num_of_results;
}


function total_clra_appliaction($role, $sudiv_code = ''){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
		$result	= db_select('l_clra_registration_master', 'clra_master');
		$result	->fields('clra_master',array('id'));
		$result->isNotNull('clra_master.status');
		$result->isNotNull('clra_master.user_id');
		$result->isNotNull('clra_master.loc_e_subdivision');
		$result->isNotNull('clra_master.name_areatype');
		$result->isNotNull('clra_master.final_submit_status');	
		$result->condition('clra_master.status', array('0', 'B', 'BI', 'F', 'V', 'VA', 'T', 'S', 'U', 'I', 'R'), 'IN');
		// $result->isNull('clra_master.amendment_parent_id');		
		$num_of_results = $result->execute()->rowCount();
	}else if($role == 'ALC' && $sudiv_code != ''){
		$result	= db_select('l_clra_registration_master', 'clra_master');
		$result	->fields('clra_master',array('id'));
		$result->isNotNull('clra_master.status');		
		$result->isNotNull('clra_master.final_submit_status');	
		// $result->isNull('clra_master.amendment_parent_id');	
		$result->condition('clra_master.loc_e_subdivision', $sudiv_code,'=');	
		$num_of_results = $result->execute()->rowCount();
		
	}
	return $num_of_results;
	
	
}
function total_bocwa_appliaction($role, $sudiv_code = ''){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
		$result	= db_select('l_bocwa_registration_master', 'bocwa');
		$result->fields('bocwa',array('id'));
		$result->isNotNull('bocwa.status');
		$result->isNotNull('bocwa.final_submit_status');
		
		$num_of_results = $result->execute()->rowCount();
	}else if($role == 'ALC' && $sudiv_code != ''){
		$result	= db_select('l_bocwa_registration_master', 'bocwa');
		$result->fields('bocwa',array('id'));
		$result->isNotNull('bocwa.status');
		$result->isNotNull('bocwa.final_submit_status');
		$result->condition('bocwa.loc_e_subdivision', $sudiv_code,'=');	
		
		$num_of_results = $result->execute()->rowCount();
	}
	return $num_of_results;
	
	
}



function bowca_postal_add($application_id){
	
		$bocwa_postal_address_res	=	'';
		
		$bocwa_postal_address		= 	db_select('l_bocwa_registration_master ', 'lbrm');
		$bocwa_postal_address		->	InnerJoin('district_master', 'd', 'd.district_code=lbrm.e_postal_dist');
		$bocwa_postal_address		->	InnerJoin('sub_division', 's', 's.sub_div_code=lbrm.e_postal_subdivision');
		$bocwa_postal_address		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lbrm.e_postal_areatype_code');
		$bocwa_postal_address		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lbrm.e_postal_vill_ward');
		$bocwa_postal_address		->	InnerJoin('police_station', 'p', 'p.police_station_code=lbrm.e_postal_ps');
		$bocwa_postal_address		->	fields('d', array('district_name'));
		$bocwa_postal_address		->	fields('v', array('village_name'));
		$bocwa_postal_address		->	fields('s', array('sub_div_name'));
		$bocwa_postal_address		->	fields('b', array('block_mun_name'));
		$bocwa_postal_address		->	fields('lbrm', array('e_postal_areatype','e_postal_pin_number','e_postal_dist'));
		$bocwa_postal_address		->	fields('p', array('name_of_police_station'));
		$bocwa_postal_address		->	condition('lbrm.id ',$application_id,'=');
		$bocwa_postal_address		->	condition('lbrm.act_id ','2','=');
		
		$bocwa_postal_address_data 	= $bocwa_postal_address->execute()->fetchAssoc();
		
		if(!empty($bocwa_postal_address)){
			
			if($bocwa_postal_address_data['e_postal_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($bocwa_postal_address_data['village_name']);
			}elseif($bocwa_postal_address_data['e_postal_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$bocwa_postal_address_data['village_name']; 
			}elseif($bocwa_postal_address_data['e_postal_areatype']=="C"){
				$areatype_loc_name = $bocwa_postal_address_data['village_name'];
			}elseif($bocwa_postal_address_data['e_postal_areatype']=="S"){
				$areatype_loc_name = $bocwa_postal_address_data['village_name'];
			}elseif($bocwa_postal_address_data['e_postal_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$bocwa_postal_address_data['village_name'];
			}
	
			
			if($bocwa_postal_address_data['e_postal_dist'] == 17){
		
					$bocwa_postal_address_res = $areatype_loc_name.',&nbsp;PS - '.$bocwa_postal_address_data['name_of_police_station'].',&nbsp;'.$bocwa_postal_address_data['district_name'].'- '.$bocwa_postal_address_data['e_postal_pin_number'];
					
			}else{
					$bocwa_postal_address_res = $areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$bocwa_postal_address_data['block_mun_name'].',<br/>'.$bocwa_postal_address_data['sub_div_name'].',&nbsp;PS - '.$bocwa_postal_address_data['name_of_police_station'].',<br/>'.$bocwa_postal_address_data['district_name'].'&nbsp;, PIN- '.$bocwa_postal_address_data['e_postal_pin_number'];
			}
			 
		
		
		}
	
	return $bocwa_postal_address_res;
}


function bowca_location_add($application_id){
	


		$bocwa_location_address_res	=	'';
		
		$bocwa_location_address		= 	db_select('l_bocwa_registration_master ', 'lbrm');
		$bocwa_location_address		->	InnerJoin('district_master', 'd', 'd.district_code=lbrm.loc_e_dist');
		$bocwa_location_address		->	InnerJoin('sub_division', 's', 's.sub_div_code=lbrm.loc_e_subdivision');
		$bocwa_location_address		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lbrm.loc_e_areatype_code');
		$bocwa_location_address		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lbrm.loc_e_vill_ward');
		$bocwa_location_address		->	InnerJoin('police_station', 'p', 'p.police_station_code=lbrm.loc_e_ps');
		$bocwa_location_address		->	fields('d', array('district_name'));
		$bocwa_location_address		->	fields('v', array('village_name'));
		$bocwa_location_address		->	fields('s', array('sub_div_name'));
		$bocwa_location_address		->	fields('b', array('block_mun_name'));
		$bocwa_location_address		->	fields('lbrm', array('loc_e_areatype','loc_e_pin_number','loc_e_dist'));
		$bocwa_location_address		->	fields('p', array('name_of_police_station'));
		$bocwa_location_address		->	condition('lbrm.id ',$application_id,'=');
		$bocwa_location_address		->	condition('lbrm.act_id ','2','=');
		
		$bocwa_location_result = $bocwa_location_address->execute()->fetchAssoc();
		
		if(!empty($bocwa_location_result)){
			
			if($bocwa_location_result['loc_e_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($bocwa_location_result['village_name']);
			}elseif($bocwa_location_result['loc_e_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$bocwa_location_result['village_name']; 
			}elseif($bocwa_location_result['loc_e_areatype']=="C"){
				$areatype_loc_name = $bocwa_location_result['village_name'];
			}elseif($bocwa_location_result['loc_e_areatype']=="S"){
				$areatype_loc_name = $bocwa_location_result['village_name'];
			}elseif($bocwa_location_result['loc_e_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$bocwa_location_result['village_name'];
			}
	
			
			if($bocwa_location_result['loc_e_dist'] == 17){
		
					$bocwa_location_address_res = $areatype_loc_name.',&nbsp;PS - '.$bocwa_location_result['name_of_police_station'].',&nbsp;'.$bocwa_location_result['district_name'].'- '.$bocwa_location_result['loc_e_pin_number'];
					
			}else{
					$bocwa_location_address_res = $areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$bocwa_location_result['block_mun_name'].',<br/>'.$bocwa_location_result['sub_div_name'].',&nbsp;PS - '.$bocwa_location_result['name_of_police_station'].',<br/>'.$bocwa_location_result['district_name'].'&nbsp;, PIN- '.$bocwa_location_result['loc_e_pin_number'];
			}
			 
		
		
		}
	
	return $bocwa_location_address_res;
}

function bowca_permanent_add($application_id){
	
		$bocwa_per_address_res	=	'';
		
		$bocwa_emp_address		= 	db_select('l_bocwa_registration_master ', 'lbrm');
		$bocwa_emp_address		->	InnerJoin('district_master', 'd', 'd.district_code=lbrm.e_permanent_add_dist');
		$bocwa_emp_address		->	InnerJoin('sub_division', 's', 's.sub_div_code=lbrm.e_permanent_add_subdivision');
		$bocwa_emp_address		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lbrm.e_permanent_add_areatype_code');
		$bocwa_emp_address		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lbrm.e_permanent_add_vill_ward');
		$bocwa_emp_address		->	InnerJoin('police_station', 'p', 'p.police_station_code=lbrm.e_permanent_add_ps');
		$bocwa_emp_address		->	fields('d', array('district_name'));
		$bocwa_emp_address		->	fields('v', array('village_name'));
		$bocwa_emp_address		->	fields('s', array('sub_div_name'));
		$bocwa_emp_address		->	fields('b', array('block_mun_name'));
		$bocwa_emp_address		->	fields('lbrm', array('e_permanent_add_areatype','e_permanent_add_pin_number','e_permanent_add_dist'));
		$bocwa_emp_address		->	fields('p', array('name_of_police_station'));
		$bocwa_emp_address		->	condition('lbrm.id ',$application_id,'=');
		$bocwa_emp_address		->	condition('lbrm.act_id ','2','=');
		
		$bocwa_emp_address_data	= $bocwa_emp_address->execute()->fetchAssoc();
		
		if(!empty($bocwa_emp_address_data)){
			
			if($bocwa_emp_address_data['e_permanent_add_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($bocwa_emp_address_data['village_name']);
			}elseif($bocwa_emp_address_data['e_permanent_add_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$bocwa_emp_address_data['village_name']; 
			}elseif($bocwa_emp_address_data['e_permanent_add_areatype']=="C"){
				$areatype_loc_name = $bocwa_emp_address_data['village_name'];
			}elseif($bocwa_emp_address_data['e_permanent_add_areatype']=="S"){
				$areatype_loc_name = $bocwa_emp_address_data['village_name'];
			}elseif($bocwa_emp_address_data['e_permanent_add_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$bocwa_emp_address_data['village_name'];
			}
	
			
			if($bocwa_emp_address_data['e_permanent_add_dist'] == 17){
		
					$bocwa_per_address_res = $areatype_loc_name.',&nbsp;PS - '.$bocwa_emp_address_data['name_of_police_station'].',&nbsp;'.$bocwa_emp_address_data['district_name'].'- '.$bocwa_emp_address_data['emp_pin_number'];
					
			}else{
					$bocwa_per_address_res = $areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$bocwa_emp_address_data['block_mun_name'].',<br/>'.$bocwa_emp_address_data['sub_div_name'].',&nbsp;PS - '.$bocwa_emp_address_data['name_of_police_station'].',<br/>'.$bocwa_emp_address_data['district_name'].'&nbsp;, PIN- '.$bocwa_emp_address_data['e_permanent_add_pin_number'];
			}
			 
		
		
		}
	
	return $bocwa_per_address_res;
}

function bowca_emp_add($application_id){
	

		$bocwa_emp_address_res	=	'';
		
		$bocwa_emp_address		= 	db_select('l_bocwa_registration_master ', 'lbrm');
		$bocwa_emp_address		->	InnerJoin('district_master', 'd', 'd.district_code=lbrm.emp_dist');
		$bocwa_emp_address		->	InnerJoin('sub_division', 's', 's.sub_div_code=lbrm.emp_subdivision');
		$bocwa_emp_address		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lbrm.emp_areatype_code');
		$bocwa_emp_address		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lbrm.emp_vill_ward');
		$bocwa_emp_address		->	InnerJoin('police_station', 'p', 'p.police_station_code=lbrm.emp_ps');
		$bocwa_emp_address		->	fields('d', array('district_name'));
		$bocwa_emp_address		->	fields('v', array('village_name'));
		$bocwa_emp_address		->	fields('s', array('sub_div_name'));
		$bocwa_emp_address		->	fields('b', array('block_mun_name'));
		$bocwa_emp_address		->	fields('lbrm', array('emp_areatype','emp_pin_number','emp_dist'));
		$bocwa_emp_address		->	fields('p', array('name_of_police_station'));
		$bocwa_emp_address		->	condition('lbrm.id ',$application_id,'=');
		$bocwa_emp_address		->	condition('lbrm.act_id ','2','=');
		
		$bocwa_emp_address_data	= $bocwa_emp_address->execute()->fetchAssoc();
		
		if(!empty($bocwa_emp_address_data)){
			
			if($bocwa_emp_address_data['emp_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($bocwa_emp_address_data['village_name']);
			}elseif($bocwa_emp_address_data['emp_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$bocwa_emp_address_data['village_name']; 
			}elseif($bocwa_emp_address_data['emp_areatype']=="C"){
				$areatype_loc_name = $bocwa_emp_address_data['village_name'];
			}elseif($bocwa_emp_address_data['emp_areatype']=="S"){
				$areatype_loc_name = $bocwa_emp_address_data['village_name'];
			}elseif($bocwa_emp_address_data['emp_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$bocwa_emp_address_data['village_name'];
			}
			
			if($bocwa_emp_address_data['emp_dist'] == 17){
		
					$bocwa_emp_address_res = $areatype_loc_name.',&nbsp;PS - '.$bocwa_emp_address_data['name_of_police_station'].',&nbsp;'.$bocwa_emp_address_data['district_name'].'- '.$bocwa_emp_address_data['emp_pin_number'];
					
			}else{
					$bocwa_emp_address_res = $areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$bocwa_emp_address_data['block_mun_name'].',<br/>'.$bocwa_emp_address_data['sub_div_name'].',&nbsp;PS - '.$bocwa_emp_address_data['name_of_police_station'].',<br/>'.$bocwa_emp_address_data['district_name'].'&nbsp;, PIN- '.$bocwa_emp_address_data['emp_pin_number'];
			}
			 
		
		
		}
	
	return $bocwa_emp_address_res;
}

function bowca_manager_add($application_id){
	

		$bocwa_manager_address_res	=	'';
		
		$bocwa_man_address		= 	db_select('l_bocwa_registration_master ', 'lbrm');
		$bocwa_man_address		->	InnerJoin('district_master', 'd', 'd.district_code=lbrm.address_manager_dist');
		$bocwa_man_address		->	InnerJoin('sub_division', 's', 's.sub_div_code=lbrm.address_manager_subdivision');
		$bocwa_man_address		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lbrm.address_manager_areatype_code');
		$bocwa_man_address		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lbrm.address_manager_vill_ward');
		$bocwa_man_address		->	InnerJoin('police_station', 'p', 'p.police_station_code=lbrm.address_manager_ps');
		$bocwa_man_address		->	fields('d', array('district_name'));
		$bocwa_man_address		->	fields('v', array('village_name'));
		$bocwa_man_address		->	fields('s', array('sub_div_name'));
		$bocwa_man_address		->	fields('b', array('block_mun_name'));
		$bocwa_man_address		->	fields('lbrm', array('address_manager_areatype','address_manager_pin_number','address_manager_dist'));
		$bocwa_man_address		->	fields('p', array('name_of_police_station'));
		$bocwa_man_address		->	condition('lbrm.id ',$application_id,'=');
		$bocwa_man_address		->	condition('lbrm.act_id ','2','=');
		
		$bocwa_man_address_data	= $bocwa_man_address->execute()->fetchAssoc();
		
		if(!empty($bocwa_man_address_data)){
			
			if($bocwa_man_address_data['address_manager_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($bocwa_man_address_data['village_name']);
			}elseif($bocwa_man_address_data['address_manager_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$bocwa_man_address_data['village_name']; 
			}elseif($bocwa_man_address_data['address_manager_areatype']=="C"){
				$areatype_loc_name = $bocwa_man_address_data['village_name'];
			}elseif($bocwa_man_address_data['address_manager_areatype']=="S"){
				$areatype_loc_name = $bocwa_man_address_data['village_name'];
			}elseif($bocwa_man_address_data['address_manager_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$bocwa_man_address_data['village_name'];
			}
	
			
			if($bocwa_per_address_data['address_manager_dist'] == 17){
		
					$bocwa_manager_address_res = $areatype_loc_name.',&nbsp;PS - '.$bocwa_man_address_data['name_of_police_station'].',&nbsp;'.$bocwa_man_address_data['district_name'].'- '.$bocwa_man_address_data['address_manager_pin_number'];
					
			}else{
					$bocwa_manager_address_res = $areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$bocwa_man_address_data['block_mun_name'].',<br/>'.$bocwa_man_address_data['sub_div_name'].',&nbsp;PS - '.$bocwa_man_address_data['name_of_police_station'].',<br/>'.$bocwa_man_address_data['district_name'].'&nbsp;, PIN- '.$bocwa_man_address_data['address_manager_pin_number'];
			}
			 
		
		
		}
	
	return $bocwa_manager_address_res;
}

function get_bocwa_details($applicantion_id){
	
	
		$bocwa_details		= 	db_select('l_bocwa_registration_master ', 'bowca');
		$bocwa_details		->	fields('bowca', array('e_name','e_full_name','emp_name','full_name_manager','address_manager','emp_address','e_permanent_address','e_postal_address','nature_of_build_const','max_no_of_building_workers_employed','est_date_of_commencement_building','est_date_of_completion_building','registration_number','loc_e_name','bocwa_registration_certificate','loc_e_name','act_id','user_id'));
		$bocwa_details		->	condition('bowca.id ',$applicantion_id,'=');
		$bocwa_data_details 	= $bocwa_details->execute()->fetchAssoc();
	
	
	return $bocwa_data_details;
}

function total_clra_oldappliaction($role){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
	
			 $result	 = 	 db_select('l_clra_principle_emp_backlog_data', 'clra_old');
			 $result	->	fields('clra_old',array('id'));
			 $result	->	orderBy('clra_old.id','DESC');
			
						
			$num_of_results = $result->execute()->rowCount();
	}
	return $num_of_results;
	
	
}

function total_tradeunion($role){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
	
			 $result	 = 	 db_select('tradeunion_master', 'trad');
			 $result	->	fields('trad',array('id'));
			 $result	->	condition('trad.is_active', 1);
			 $result	->	orderBy('trad.id','DESC');
			
						
			$num_of_results = $result->execute()->rowCount();
	}
	return $num_of_results;
	
	
}

function trad_union_list($role,$dis_code){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
				$query 			= 	db_select('tradeunion_master', 'tum');
									$query->InnerJoin('district_master', 'd_master','d_master.district_code = tum.dist_code');  
									$query->fields('tum', array());
									$query->fields('d_master', array('district_name'));
									$query->condition('tum.is_active', 1);
									$query->condition('tum.dist_code', $dis_code);
									$query->orderBy('tum.e_trade_union_regn_no', 'ASC');
									
				$result 		= 	$query->execute();
				
	}
	return $result;
}

function total_license($role, $sudiv_code = ''){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
		$db_license_report = db_select('l_contractor_license_application','lcla');
		$db_license_report	->fields('lcla', array('id'));
		$db_license_report->isNotNull('lcla.status');
		$db_license_report->isNotNull('lcla.final_status');
		$db_license_report->isNull('lcla.is_backlog_license');
		$total_license_application = $db_license_report->execute()->rowCount();
		
		$db_license_renewal_report = db_select('l_contractor_license_apply_renweal','lclar');
		$db_license_renewal_report->fields('lclar', array('id'));
		$db_license_renewal_report->isNotNull('lclar.renewal_application_final_status');
		$db_license_renewal_report->isNotNull('lclar.renewal_appliaction_status');
		$total_license_renewal_application = $db_license_renewal_report->execute()->rowCount();
		
		$num_of_results = $total_license_application+$total_license_renewal_application;
	}else if($role == 'ALC' && $sudiv_code != ''){
		$db_license_report = db_select('l_contractor_license_application','lcla');
		$db_license_report->leftJoin('l_particular_of_contract_labour', 'con_prt','con_prt.id = lcla.contractor_particular_id');
		$db_license_report	->fields('lcla', array('id'));
		$db_license_report	->fields('con_prt', array('worksite_subdivision'));
		$db_license_report->isNotNull('lcla.status');
		$db_license_report->isNotNull('lcla.final_status');
		$db_license_report->isNull('lcla.is_backlog_license');
		$db_license_report->condition('con_prt.worksite_subdivision', $sudiv_code,'=');
		$total_license_application = $db_license_report->execute()->rowCount();
		
		$db_license_renewal_report = db_select('l_contractor_license_apply_renweal','lclar');
		$db_license_renewal_report	->fields('lclar', array('id'));
		$db_license_renewal_report->isNotNull('lclar.renewal_application_final_status');
		$db_license_renewal_report->isNotNull('lclar.renewal_appliaction_status');
		$total_license_renewal_application = $db_license_renewal_report->execute()->rowCount();
		
		// $num_of_results = $total_license_application+$total_license_renewal_application;
		
		$num_of_results = $total_license_application;
	}
	return $num_of_results;
	
	
}


function total_oldbocwa($role){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
	
			 $query	 	= 	 db_select('l_bocwa_principle_emp_backlog_data', 'bowca');
			 $query		->	fields('bowca',array('id'));
			 $query		->	orderBy('bowca.id','DESC');
			
						
			$num_of_results = $query->execute()->rowCount();
	}
	return $num_of_results;
	
	
}

function total_oldlicense($role){
	if($role == 'SUPER ADMIN' || $role == 'DLC'){
	
			 $query	 	= 	 db_select('l_backlog_license', 'back_license');
			 $query		->	fields('back_license',array('id'));
			 $query		->	orderBy('back_license.id','DESC');
			
						
			$num_of_results = $query->execute()->rowCount();
	}
	return $num_of_results;
	
	
}


function fetch_second_remarkrow($application_id){

	
	$fetch_remark		 = 	db_select('l_remarks_master', 'remark');
  	$fetch_remark		->	fields('remark',array('remark_type','remark_id'));
	$fetch_remark		->	condition('remark.application_id',$application_id,'=');
	$fetch_remark		->	condition('remark.is_active',1,'=');
	$fetch_remark		->	orderBy('remark.remark_id','DESC');
	$fetch_remark		->	range(1,1);
	$remark_type 		= 	$fetch_remark->execute()->fetchObject()->remark_type;
	
	
return $remark_type;
	
}

/*** Fetch District Jurisdiction Area of Office Authority ****/

function get_district_jurisdiction($user_id){ 
	
	$default_district_listing 	= array(""		=>	"- Select District -");
	$district_array				= array();
	$get_districts		 		= db_select('l_custom_user_detail', 'lcud');
	$get_districts 				->leftJoin('l_customuser_relation_address', 'lcra', 'lcra.user_id = lcud.usr_id');	
	$get_districts		 		->leftJoin('district_master', 'dm','dm.district_code = lcra.district_code');
	$get_districts		 		->fields('dm', array('district_code','district_name'));
	$get_districts		 		->condition('lcud.created_by', $user_id);	
	$get_districts				->groupBy('dm.district_code');
	$get_districts				->groupBy('dm.district_name');
	$get_districts_results      = $get_districts->execute()->fetchAll();
	
	foreach ($get_districts_results as $district_val){
		$district_array[$district_val->district_code] = $district_val->district_name;
	}
	
	return ($default_district_listing + $district_array );

}



function miscellaneous_clra_pe_location_address($application_id){
	
		$clra_pe_location_address	=	'';
		
		$clra_pe_location		= 	db_select('l_clra_registration_master ', 'lcrm');
		$clra_pe_location		->	InnerJoin('district_master', 'd', 'd.district_code=lcrm.loc_e_dist');
		$clra_pe_location		->	InnerJoin('sub_division', 's', 's.sub_div_code=lcrm.loc_e_subdivision');
		$clra_pe_location		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lcrm.name_areatype');
		$clra_pe_location		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lcrm.loc_e_vill_ward');
		$clra_pe_location		->	InnerJoin('police_station', 'p', 'p.police_station_code=lcrm.l_e_ps');
		$clra_pe_location		->	fields('d', array('district_name'));
		$clra_pe_location		->	fields('v', array('village_name'));
		$clra_pe_location		->	fields('s', array('sub_div_name'));
		$clra_pe_location		->	fields('b', array('block_mun_name'));
		$clra_pe_location		->	fields('lcrm', array('loc_e_areatype','loc_e_pin_number','loc_e_dist'));
		$clra_pe_location		->	fields('p', array('name_of_police_station'));
		$clra_pe_location		->	condition('lcrm.id ',$application_id,'=');
		$clra_pe_location		->	condition('lcrm.act_id ','1','=');
		
		$clra_pe_location_result = $clra_pe_location->execute()->fetchAssoc();
		
		if(!empty($clra_pe_location_result)){
			
			if($clra_pe_location_result['loc_e_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($clra_pe_location_result['village_name']).',&nbsp;';
			}elseif($clra_pe_location_result['loc_e_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$clra_pe_location_result['village_name'].',&nbsp;'; 
			}elseif($clra_pe_location_result['loc_e_areatype']=="C"){
				$areatype_loc_name = $clra_pe_location_result['village_name'].',&nbsp;';
			}elseif($clra_pe_location_result['loc_e_areatype']=="S"){
				$areatype_loc_name = $clra_pe_location_result['village_name'].',&nbsp;';
			}elseif($clra_pe_location_result['loc_e_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$clra_pe_location_result['village_name'].',&nbsp;';
			}
	
			
			if($clra_pe_location_result['loc_e_dist'] == 17){
		
					$clra_pe_location_address = $areatype_loc_name.',&nbsp;PS - '.$clra_pe_location_result['name_of_police_station'].',&nbsp;'.$clra_pe_location_result['district_name'].'- '.$clra_pe_location_result['loc_e_pin_number'];
					
			}else if($clra_pe_location_result['loc_e_dist'] == ''){
				$clra_pe_location_address = 'other';
			}else{
					$clra_pe_location_address = $areatype_loc_name.$text_AreaType_loc.$clra_pe_location_result['block_mun_name'].',<br/>'.$clra_pe_location_result['sub_div_name'].',&nbsp;PS - '.$clra_pe_location_result['name_of_police_station'].',<br/>'.$clra_pe_location_result['district_name'].'&nbsp;, PIN- '.$clra_pe_location_result['loc_e_pin_number'];
			}
			 
		
		
		}
	
	return $clra_pe_location_address;
	
}

function miscellaneous_postal_add_pe($applicantion_id){
	


		$postal_address='';
		$fetch_postal_add		= 	db_select('l_clra_registration_master ', 'lcrm');
		$fetch_postal_add		->	InnerJoin('district_master', 'd', 'd.district_code=lcrm.e_postal_dist');
		$fetch_postal_add		->	InnerJoin('sub_division', 's', 's.sub_div_code=lcrm.e_postal_subdivision');
		$fetch_postal_add		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lcrm.e_postal_name_areatype');
		
		$fetch_postal_add		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lcrm.e_postal_vill_ward');
		$fetch_postal_add		->	fields('v', array('village_name'));
		
	
		$fetch_postal_add		->	InnerJoin('police_station', 'p', 'p.police_station_code=lcrm.e_postal_ps');
		$fetch_postal_add		->	fields('d', array('district_name'));
		$fetch_postal_add		->	fields('s', array('sub_div_name'));
		$fetch_postal_add		->	fields('b', array('block_mun_name'));
		$fetch_postal_add		->	fields('lcrm', array('e_postal_areatype','e_postal_pin_number','e_postal_dist'));
		$fetch_postal_add		->	fields('p', array('name_of_police_station'));
		$fetch_postal_add		->	condition('lcrm.id ',$applicantion_id,'=');
		$fetch_postal_add		->	condition('lcrm.act_id ','1','=');
		
		$fetch_postal_add_result = $fetch_postal_add->execute()->fetchAssoc();
		
		if(!empty($fetch_postal_add_result)){
			

			if($fetch_postal_add_result['e_postal_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($fetch_postal_add_result['village_name']).',&nbsp;';
			}elseif($fetch_postal_add_result['e_postal_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$fetch_postal_add_result['village_name'].',&nbsp;'; 
			}elseif($fetch_postal_add_result['e_postal_areatype']=="C"){
				$areatype_loc_name = $fetch_postal_add_result['village_name'].',&nbsp;';
			}elseif($fetch_postal_add_result['e_postal_areatype']=="S"){
				$areatype_loc_name = $fetch_postal_add_result['village_name'].',&nbsp;';
			}elseif($fetch_postal_add_result['e_postal_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$fetch_postal_add_result['village_name'].',&nbsp;';
			}
	
			
			if($fetch_postal_add_result['e_postal_dist'] == 17){
		
					$postal_address = $areatype_loc_name.',&nbsp;PS - '.$fetch_postal_add_result['name_of_police_station'].',&nbsp;'.$fetch_postal_add_result['district_name'].'- '.$fetch_postal_add_result['e_postal_pin_number'];
					
			}else if($clra_pe_location_result['e_postal_dist'] != ''){
				$clra_pe_location_address = 'other';
			}else{
					$postal_address = $areatype_loc_name.$text_AreaType_loc.$fetch_postal_add_result['block_mun_name'].',<br/>'.$fetch_postal_add_result['sub_div_name'].',&nbsp;PS - '.$fetch_postal_add_result['name_of_police_station'].',<br/>'.$fetch_postal_add_result['district_name'].',&nbsp;PIN- '.$fetch_postal_add_result['e_postal_pin_number'];
			}
			 
		
		}
	
	return $postal_address;
}

function miscellaneous_clra_pe_address($application_id){	
		$clra_pe_address	=	'';		
		$clra_pe_add		= 	db_select('l_clra_registration_master ', 'lcrm');
		$clra_pe_add		->	InnerJoin('district_master', 'd', 'd.district_code = lcrm.loc_emp_dist');
		$clra_pe_add		->	InnerJoin('sub_division', 's', 's.sub_div_code = lcrm.loc_emp_subdivision');
		$clra_pe_add		->	InnerJoin('block_mun_master', 'b', 'b.block_code = lcrm.emp_name_areatype');
		$clra_pe_add		->	InnerJoin('village_ward_master', 'v', 'v.village_code = lcrm.loc_emp_vill_ward');
		$clra_pe_add		->	InnerJoin('police_station', 'p', 'p.police_station_code = lcrm.l_emp_ps');
		$clra_pe_add		->	fields('d', array('district_name'));
		$clra_pe_add		->	fields('v', array('village_name'));
		$clra_pe_add		->	fields('s', array('sub_div_name'));
		$clra_pe_add		->	fields('b', array('block_mun_name'));
		$clra_pe_add		->	fields('lcrm', array('loc_emp_areatype','loc_emp_pin_number','loc_emp_dist'));
		$clra_pe_add		->	fields('p', array('name_of_police_station'));
		$clra_pe_add		->	condition('lcrm.id ',$application_id,'=');
		$clra_pe_add		->	condition('lcrm.act_id ','1','=');
		
		$clra_pe_address_result = $clra_pe_add->execute()->fetchAssoc(); 		
		if(!empty($clra_pe_address_result)){			
			if($clra_pe_address_result['loc_emp_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($clra_pe_address_result['village_name']);
			}elseif($clra_pe_address_result['loc_emp_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$clra_pe_address_result['village_name']; 
			}elseif($clra_pe_address_result['loc_emp_areatype']=="C"){
				$areatype_loc_name = $clra_pe_address_result['village_name'];
			}elseif($clra_pe_address_result['loc_emp_areatype']=="S"){
				$areatype_loc_name = $clra_pe_address_result['village_name'];
			}elseif($clra_pe_address_result['loc_emp_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$clra_pe_address_result['village_name'];
			}
	
			if($clra_pe_address_result['loc_emp_dist'] == 17){
		
					$clra_pe_address = $areatype_loc_name.', PS - '.$clra_pe_address_result['name_of_police_station'].', '.$clra_pe_address_result['district_name'].'- '.$clra_pe_address_result['loc_emp_pin_number'];
					
			}else{
					$clra_pe_address = $areatype_loc_name.$text_AreaType_loc.$clra_pe_address_result['block_mun_name'].',<br/>'.$clra_pe_address_result['sub_div_name'].', PS - '.$clra_pe_address_result['name_of_police_station'].',<br/>'.$clra_pe_address_result['district_name'].', PIN- '.$clra_pe_address_result['loc_emp_pin_number'];
			}
		}
		
		$clra_pe_add_state		= 	db_select('l_clra_registration_master ', 'lcrm');
		$clra_pe_add_state		->	InnerJoin('state_master','sm','sm.id = lcrm.loc_emp_state');
		$clra_pe_add_state		->	fields('lcrm',array('loc_emp_country'));
		$clra_pe_add_state		->	fields('sm', array('statename'));
		$clra_pe_add_state		->	condition('lcrm.id ',$application_id,'=');
		$clra_pe_add_state		->	condition('lcrm.act_id ','1','=');
		$clra_pe_add_state_rest	=	$clra_pe_add_state->execute()->fetchAssoc();
		if(!empty($clra_pe_add_state_rest)){
			$clra_pe_address .= $clra_pe_add_state_rest['statename'].', ';
		}
		if($clra_pe_add_state_rest['loc_emp_country']==1){
			$clra_pe_address .=	'India';
		}
		
	return $clra_pe_address;	
	
}

function miscellaneous_manager_pe($applicantion_id){
		$manager_address		='';
		$fetch_manger_add		= 	db_select('l_clra_registration_master ', 'lcrm');
		$fetch_manger_add		->	InnerJoin('district_master', 'd', 'd.district_code=lcrm.loc_manager_dist');
		$fetch_manger_add		->	InnerJoin('sub_division', 's', 's.sub_div_code=lcrm.loc_manager_subdivision');
		$fetch_manger_add		->	InnerJoin('block_mun_master', 'b', 'b.block_code=lcrm.manager_name_areatype');
		
		$fetch_manger_add		->	InnerJoin('village_ward_master', 'v', 'v.village_code=lcrm.loc_manager_vill_ward');
		$fetch_manger_add		->	fields('v', array('village_name'));
		
	
		$fetch_manger_add		->	InnerJoin('police_station', 'p', 'p.police_station_code=lcrm.l_manager_ps');
		$fetch_manger_add		->	fields('d', array('district_name'));
		$fetch_manger_add		->	fields('s', array('sub_div_name'));
		$fetch_manger_add		->	fields('b', array('block_mun_name'));
		$fetch_manger_add		->	fields('lcrm', array('loc_manager_areatype','loc_manager_pin_number','loc_manager_dist'));
		$fetch_manger_add		->	fields('p', array('name_of_police_station'));
		$fetch_manger_add		->	condition('lcrm.id ',$applicantion_id,'=');
		$fetch_manger_add		->	condition('lcrm.act_id ','1','=');
		
		$fetch_manger_add_result = $fetch_manger_add->execute()->fetchAssoc();
		
		if(!empty($fetch_manger_add_result)){
			
			if($fetch_manger_add_result['loc_manager_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($fetch_manger_add_result['village_name']).',&nbsp;';
			}elseif($fetch_manger_add_result['loc_manager_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$fetch_manger_add_result['village_name'].',&nbsp;'; 
			}elseif($fetch_manger_add_result['loc_manager_areatype']=="C"){
				$areatype_loc_name = $fetch_manger_add_result['village_name'].',&nbsp;';
			}elseif($fetch_manger_add_result['loc_manager_areatype']=="S"){
				$areatype_loc_name = $fetch_manger_add_result['village_name'].',&nbsp;';
			}elseif($fetch_manger_add_result['loc_manager_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$fetch_manger_add_result['village_name'].',&nbsp;';
			}			
			if($fetch_manger_add_result['loc_manager_dist'] == 17){
		
					$manager_address = $areatype_loc_name.',&nbsp;PS - '.$fetch_manger_add_result['name_of_police_station'].',&nbsp;'.$fetch_manger_add_result['district_name'].'- '.$fetch_manger_add_result['loc_manager_pin_number'];
					
			}else{
					$manager_address = $areatype_loc_name.$text_AreaType_loc.$fetch_manger_add_result['block_mun_name'].',<br/>'.$fetch_manger_add_result['sub_div_name'].',&nbsp;PS - '.$fetch_manger_add_result['name_of_police_station'].',<br/>'.$fetch_manger_add_result['district_name'].',&nbsp;PIN- '.$fetch_manger_add_result['loc_manager_pin_number'];
			}
		}
		
		
		$clra_manager_state		= 	db_select('l_clra_registration_master ', 'lcrm');
		$clra_manager_state		->	InnerJoin('state_master','sm','sm.id = lcrm.loc_manager_state');
		$clra_manager_state		->	fields('lcrm',array('loc_manager_country','loc_manager_state'));
		$clra_manager_state		->	fields('sm', array('statename'));
		$clra_manager_state		->	condition('lcrm.id ',$applicantion_id,'=');
		$clra_manager_state		->	condition('lcrm.act_id ','1','=');
		
		$clra_manager_state_rest =	$clra_manager_state->execute()->fetchAssoc();
		
		if(!empty($clra_manager_state_rest)){
			$manager_address .= $clra_manager_state_rest['statename'].', ';
		}
		if($clra_manager_state_rest['loc_emp_country']==1){
			$manager_address .=	'India';
		}

	return $manager_address;
}

function miscellaneous_contractor_info_address( $application_id='',$serial=''){
	
	$contractor_address			=	'';	
	
	$fetch_e_add				= db_select('l_contractor_info_master ', 'lcrm');
	
	$fetch_e_add				->InnerJoin('district_master', 'd', 'd.district_code=lcrm.con_loc_e_dist');
	$fetch_e_add				->InnerJoin('sub_division', 's', 's.sub_div_code=lcrm.con_loc_e_subdivision');
	$fetch_e_add				->InnerJoin('block_mun_master', 'b', 'b.block_code=lcrm.con_name_areatype');
	$fetch_e_add				->InnerJoin('village_ward_master', 'v', 'v.village_code=lcrm.con_loc_e_vill_ward');
	$fetch_e_add				->InnerJoin('police_station', 'p', 'p.police_station_code=lcrm.con_l_e_ps');
	
	$fetch_e_add				->fields('lcrm', array('contractor_pin','con_loc_e_areatype','con_loc_e_dist','address_of_contractor'));
	$fetch_e_add				->fields('v', array('village_name'));
	$fetch_e_add				->fields('d', array('district_name'));
	$fetch_e_add				->fields('s', array('sub_div_name'));
	$fetch_e_add				->fields('b', array('block_mun_name'));
	$fetch_e_add				->fields('p', array('name_of_police_station'));
	
	$fetch_e_add				->condition('lcrm.id ',$serial);
	$fetch_e_add				->condition('lcrm.status', 1);
	$fetch_e_add				->condition('lcrm.application_id ',$application_id); 
		
	$fetch_e_add_result 		= $fetch_e_add->execute()->fetchAssoc(); 
	
		if(!empty($fetch_e_add_result)){
			
			if($fetch_e_add_result['con_loc_e_areatype']=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($fetch_e_add_result['village_name']).', ';
			}elseif($fetch_e_add_result['con_loc_e_areatype']=="M"){
				$areatype_loc_name = 'Ward-'.$fetch_e_add_result['village_name'].', '; 
			}elseif($fetch_e_add_result['con_loc_e_areatype']=="C"){
				$areatype_loc_name = $fetch_e_add_result['village_name'].', ';
			}elseif($fetch_e_add_result['con_loc_e_areatype']=="S"){
				$areatype_loc_name = $fetch_e_add_result['village_name'].', ';
			}elseif($fetch_e_add_result['con_loc_e_areatype']=="N"){
				$areatype_loc_name = 'Notified Area- '.$fetch_e_add_result['village_name'].', ';
			}
	
			
			if($fetch_e_add_result['con_loc_e_dist'] == 17){
		
					$contractor_address = $fetch_e_add_result['address_of_contractor'].',<br/>'.$areatype_loc_name.',&nbsp;PS - '.$fetch_e_add_result['name_of_police_station'].',&nbsp;'.$fetch_e_add_result['district_name'].'- '.$fetch_e_add_result['contractor_pin'];
					
			}else if($fetch_e_add_result['con_loc_e_dist'] == ''){
					$contractor_address = 'other';
			}else{
					$contractor_address = $fetch_e_add_result['address_of_contractor'].',<br/>'.$areatype_loc_name.$text_AreaType_loc.$fetch_e_add_result['block_mun_name'].',<br/>'.$fetch_e_add_result['sub_div_name'].',&nbsp;PS - '.$fetch_e_add_result['name_of_police_station'].',<br/>'.$fetch_e_add_result['district_name'].',&nbsp;PIN- '.$fetch_e_add_result['contractor_pin'];
			}
			 
		}
	
	return $contractor_address;
	
}

function fetch_editable_field_renewal($serial,$particulerid){
	$get_remark = db_select('l_remark_license', 'remark_license');
	$get_remark->fields('remark_license', array('remark_field_title'));
	$get_remark->condition('remark_license.remark_to', $serial);
	$get_remark->condition('remark_license.particular_id', $particulerid);
	$get_remark->where('((remark_license.remark_by_role = 4) OR (remark_license.remark_by_role = 7))');
	$get_remark->orderBy('remark_license.id','DESC');
	$get_remark->range(0, 1);
	$get_remark_result = $get_remark->execute();
	

	$editable_data = $get_remark_result->fetchAssoc();
	return $editable_data;
}

function fetch_second_row($license_id,$contractor_id){

	echo $license_renewal_id;
	$fetch_renweal_data		 = 	db_select('l_contractor_license_apply_renweal', 'xyz');
  	$fetch_renweal_data		->	fields('xyz',array());
	$fetch_renweal_data		->	condition('xyz.lincense_id',$license_id,'=');
	$fetch_renweal_data		->	condition('xyz.created_by',$contractor_id,'=');
	//$fetch_renweal_data		->	condition('xyz.id',$license_renewal_id,'=');

	
	$fetch_renweal_data		-> condition('xyz.action','R','=');
	$fetch_renweal_data		->	orderBy('xyz.id','DESC');
	$fetch_renweal_data		->	range(1,1);

	
	$renweal_data 			= 	$fetch_renweal_data->execute()->fetchAssoc();
	//print_r($renweal_data);die();
	
return $renweal_data;
	
}

function renewal_actions_dropdown_by_alc($action_value=''){
	
	$options 			= array();
	
	if ($action_value == 'U'){
		
		$options['P']				= t('Form VII Back For Correction');
		$options['C']				= t('Call Applicant');
		$options['I']				= t('Issue Certificate');
		$options['R']				= t('Reject');
	
	}elseif ($action_value == 'I'){
		
	
		$options['I']				= t('Issue Certificate');
		
	
	}else if ($action_value == 'C'){
		
		$options['C']		= t('Call Applicant');
		$options['I']		= t('Issue Certificate');
		$options['R']		= t('Reject');
		
	}else {
		
		$options['B']		= t('Back For Correction');
		$options['BI']		= t('Back To Inspector');
		$options['A']		= t('Verified & Approval For Fees Submission');
		$options['R']		= t('Reject');
			
	} 
	return $options;	
	
}

function miscellaneous_worksite_address($serial='',$particular_id=''){
		$worksite_address='';
		$fetch_worksite_add	= db_select('l_particular_of_contract_labour ', 'lpcl');
		$fetch_worksite_add->InnerJoin('district_master', 'd', 'd.district_code=lpcl.worksite_dist');
		$fetch_worksite_add->InnerJoin('sub_division', 's', 's.sub_div_code=lpcl.worksite_subdivision');
		$fetch_worksite_add->InnerJoin('block_mun_master', 'b', 'b.block_code=lpcl.name_work_site_areatype');
		
		
		$fetch_worksite_add->InnerJoin('village_ward_master', 'v', 'v.village_code=lpcl.work_site_vill_ward');
		$fetch_worksite_add->fields('v', array('village_name'));
		
		$fetch_worksite_add->InnerJoin('police_station', 'p', 'p.police_station_code=lpcl.worksite_ps');
		$fetch_worksite_add->fields('d', array('district_name','district_code'));
		$fetch_worksite_add->fields('s', array('sub_div_name'));
		$fetch_worksite_add->fields('b', array('block_mun_name'));
		$fetch_worksite_add->fields('lpcl', array('work_site_areatype','worksite_pin'));
		$fetch_worksite_add->fields('p', array('name_of_police_station'));
		$fetch_worksite_add->condition('lpcl.serial_no_from_v ',$serial,'=');
		$fetch_worksite_add->condition('lpcl.id ',$particular_id,'=');
		$fetch_worksite_add->condition('lpcl.act_id ','1','=');
		$fetch_worksite_add_result = $fetch_worksite_add->execute()->fetchAssoc();
		
	
		
	
		
		if(!empty($fetch_worksite_add_result)){
			if($fetch_worksite_add_result['district_code']!='17'){ 
			
			
					if($fetch_worksite_add_result['work_site_areatype']=='B'){
						
							$worksite_address		=	ucwords($fetch_worksite_add_result['village_name']).',&nbsp;';
							$worksite_address		.=	'Block- '.$fetch_worksite_add_result['block_mun_name'].',&nbsp;';
					
					}
					if($fetch_worksite_add_result['work_site_areatype']=='C'){
						  $worksite_address	.=	$fetch_worksite_add_result['village_name'].',&nbsp;';
						  $worksite_address	.=	$fetch_worksite_add_result['block_mun_name'].',&nbsp;';
					
					}
					if($fetch_worksite_add_result['work_site_areatype']=='M'){
						  $worksite_address		.=	$fetch_worksite_add_result['block_mun_name'].',&nbsp;';
						  $worksite_address		.=	'Ward- '.$fetch_worksite_add_result['village_name'].',&nbsp;';
					}if($fetch_worksite_add_result['work_site_areatype']=='N'){
							$worksite_address		.=	'Notified Area-'.$fetch_worksite_add_result['village_name'].',&nbsp;';
						//$contractor_address		=   $contractor_address.$fetch_con_add_result['block_mun_name'].',&nbsp;';
					}if($fetch_worksite_add_result['work_site_areatype']=='S'){
							$worksite_address		.=	$fetch_worksite_add_result['village_name'].',&nbsp;';
							//$contractor_manager_address		=   $contractor_manager_address.',&nbsp;';
					}
						$worksite_address				.=	$fetch_worksite_add_result['sub_div_name'].'<br>';
						$worksite_address				.=	'PS - '.$fetch_worksite_add_result['name_of_police_station'].',&nbsp;';
						$worksite_address				.=	'District - '.$fetch_worksite_add_result['district_name'].',&nbsp;Pin Code - '.$fetch_worksite_add_result['worksite_pin'];
				  
			}else{
				$worksite_address .= $fetch_worksite_add_result['village_name'].',&nbsp;PS - '.$fetch_worksite_add_result['name_of_police_station'].',&nbsp;'. $fetch_worksite_add_result['district_name'].',&nbsp; Pin Code - '.$fetch_worksite_add_result['worksite_pin'];
			}
		}
	return $worksite_address;	
}

function get_full_address($table='', $type='', $id='', $fieldArr='', $keyField =''){
		//echo $table.'<br/>'.$type.'<br/>'.$id.'<br/>'; print_r($fieldArr);exit;
		if(($fieldArr=='')|| empty($fieldArr)){
			$fieldArr =	array();
		}
		$location_address_result =	'';
		$alias = $table.'ali';
		
		$query_location_address	= db_select($table, $alias);
		if(isset($fieldArr[0]) && ($fieldArr[0]!='' || $fieldArr[0]!=0)){
			$query_location_address->LeftJoin('district_master', 'd', 'd.district_code='.$alias.'.'.$fieldArr[0]);
			$query_location_address->fields('d', array('district_name'));
			if(isset($fieldArr[1]) && ($fieldArr[1]!='' || $fieldArr[1]!=0)){
				$query_location_address->LeftJoin('sub_division', 's', 's.sub_div_code='.$alias.'.'.$fieldArr[1]);
				$query_location_address->fields('v', array('village_name'));
				if(isset($fieldArr[3]) && ($fieldArr[3]!='' || $fieldArr[3]!=0)){
					$query_location_address->LeftJoin('block_mun_master', 'b', 'b.block_code='.$alias.'.'.$fieldArr[3]);
					$query_location_address->fields('s', array('sub_div_name'));
					if(isset($fieldArr[4]) && ($fieldArr[4]!='' || $fieldArr[4]!=0)){
						$query_location_address->LeftJoin('village_ward_master', 'v', 'v.village_code='.$alias.'.'.$fieldArr[4]);
						$query_location_address->fields('b', array('block_mun_name'));
						if(isset($fieldArr[5]) && ($fieldArr[5]!='' || $fieldArr[5]!=0)){
							$query_location_address->LeftJoin('police_station', 'p', 'p.police_station_code='.$alias.'.'.$fieldArr[5]);
							$query_location_address->fields('p', array('name_of_police_station'));
							if(isset($fieldArr[7]) && ($fieldArr[7]!='' || $fieldArr[7]!=0)){
								$query_location_address->LeftJoin('state_master', 'state', 'state.id='.$alias.'.'.$fieldArr[7]);
								$query_location_address->fields('state', array('statename'));
							}
						}
					}
				}
			}		
		}
		
		
		
		if($type=="mtw"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.id',$id,'=');		
			$query_location_address		->	condition($alias.'.act_id','3','=');
			
		}elseif($type=="ismw"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.id',$id,'=');		
			$query_location_address		->	condition($alias.'.act_id','4','=');
			
		}elseif($type=="sub-table"){
			//echo $alias.'--'.$fieldArr;die;
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.id',$id,'=');		
			
		}elseif($type=="custom"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.user_id',$id,'=');
								
		}elseif($type=="ismw-license"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.form_six',$id,'=');
								
		}elseif($type=="inspection"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.ins_file_number',$id,'=');					
		}else{
			if($keyField != ''){
				$query_location_address		->	fields($alias, array());
				$query_location_address		->	condition($alias.'.'.$keyField,$id,'=');
			}else{
				$query_location_address		->	fields($alias, array());
				$query_location_address		->	condition($alias.'.id ',$id,'=');
				$query_location_address		->	condition($alias.'.designation',$type,'=');
			}
		}
		

		$location_result = $query_location_address->execute()->fetchAssoc();
		
		
		if(!empty($location_result)){
			
			if($location_result[$fieldArr[2]]=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($location_result['village_name']);
			}elseif($location_result[$fieldArr[2]]=="M"){
				$areatype_loc_name = 'Ward-'.$location_result['village_name']; 
			}elseif($location_result[$fieldArr[2]]=="C"){
				$areatype_loc_name = $location_result['village_name'];
			}elseif($location_result[$fieldArr[2]]=="N"){
				$areatype_loc_name = 'Notified Area - '.$location_result['village_name'];
			}
			
			
			if($location_result[$fieldArr[0]] == 17){  //If the area is Kolkata ***/ 			 
				if(!empty($location_result['village_name'])){
					$location_address_result .= $areatype_loc_name;
				}
				if(!empty($location_result['name_of_police_station'])){
					$location_address_result .= ',&nbsp;PS - '.$location_result['name_of_police_station'];
				}
				if(!empty($location_result['district_name'])){
					$location_address_result 	.= ',&nbsp;'.$location_result['district_name'].', PIN- '.$location_result[$fieldArr[6]];
				} 
			}else{
				//If the state is West Bengal ***/
				if($location_result[$fieldArr[7]] == 1 || empty($fieldArr[7])){
					if(!empty($location_result['village_name'])){
						$location_address_result .= $areatype_loc_name;
					}
					if(!empty($location_result[$fieldArr[2]]) && !empty($location_result['block_mun_name']) ){
						$location_address_result 	.= ',&nbsp;'.$text_AreaType_loc.$location_result['block_mun_name'].',<br/>';
					}
					if(!empty($location_result['sub_div_name'])){
						$location_address_result 	.= $location_result['sub_div_name'];
					}
					if(!empty($location_result['name_of_police_station'])){
						$location_address_result 	.= ',&nbsp;PS - '.$location_result['name_of_police_station'];
					}
					if(!empty($location_result['district_name'])){
						$location_address_result 	.= ',<br/>'.$location_result['district_name'];
					}
					if(!empty($location_result[$fieldArr[6]])){
						$location_address_result 	.= '&nbsp;, PIN- '.$location_result[$fieldArr[6]];
					}
					if(!empty($location_result[$fieldArr[7]])){
						$location_address_result 	.= ',&nbsp;'.$location_result['statename'];
					}else{
						$location_address_result 	.= '';
					}
				}else{ 
					//If the state is Others ***/
					if(!empty($location_result['village_name'])){
						$location_address_result .= $location_result['village_name'];
					}else{
						$location_address_result .= '';
					}
					if(!empty($location_result['block_mun_name'])){
						$location_address_result .= ', '.$location_result['block_mun_name'];
					}else{
						$location_address_result 		.= '';
					}
					if(!empty($location_result['sub_div_name'])){
						$location_address_result .= ', '.$location_result['sub_div_name'];
					}else{
						$location_address_result .= '';
					}
					
					if( (!empty($location_result['district_name'])) && !empty($location_result['sub_div_name'])) {
						$location_address_result 	.= ',<br/>'.$location_result['district_name'];
					}else if( (!empty($location_result['district_name'])) && empty($location_result['sub_div_name']) ){
						$location_address_result 	.= $location_result['district_name'];
					}else{
						$location_address_result 	.= '';
					}
					if ( (!empty($location_result[$fieldArr[7]])) && !empty($location_result['district_name'])){
						$location_address_result 	.= ',&nbsp;'.$location_result['statename'];
					}else if( (!empty($location_result[$fieldArr[7]])) && empty($location_result['district_name']) ){
						$location_address_result 	.= $location_result['statename'];
					}else{
						$location_address_result 	.= '';
					}
					if(!empty($location_result['police_station'])){
						$location_address_result .= ', PS:-'.$location_result['police_station'];
					}else{
						$location_address_result 		.= '';
					}
				}
			}
		}
	return $location_address_result;
}


function get_full_address_certificateform($table='', $type='', $id='', $fieldArr='', $keyField =''){
        //echo $table.'<br/>'.$type.'<br/>'.$id.'<br/>'; print_r($fieldArr);
		//exit;
		if(($fieldArr=='')|| empty($fieldArr)){
			$fieldArr =	array();
		}
		$location_address_result =	'';
		$alias = $table.'ali';
		
		$query_location_address	= db_select($table, $alias);
		if(isset($fieldArr[0]) && ($fieldArr[0]!='' || $fieldArr[0]!=0)){
			$query_location_address->LeftJoin('district_master', 'd', 'd.district_code='.$alias.'.'.$fieldArr[0]);
			$query_location_address->fields('d', array('district_name'));
			if(isset($fieldArr[1]) && ($fieldArr[1]!='' || $fieldArr[1]!=0)){
				$query_location_address->LeftJoin('sub_division', 's', 's.sub_div_code='.$alias.'.'.$fieldArr[1]);
				$query_location_address->fields('v', array('village_name'));
				if(isset($fieldArr[3]) && ($fieldArr[3]!='' || $fieldArr[3]!=0)){
					$query_location_address->LeftJoin('block_mun_master', 'b', 'b.block_code='.$alias.'.'.$fieldArr[3]);
					$query_location_address->fields('s', array('sub_div_name'));
					if(isset($fieldArr[4]) && ($fieldArr[4]!='' || $fieldArr[4]!=0)){
						$query_location_address->LeftJoin('village_ward_master', 'v', 'v.village_code='.$alias.'.'.$fieldArr[4]);
						$query_location_address->fields('b', array('block_mun_name'));
						if(isset($fieldArr[5]) && ($fieldArr[5]!='' || $fieldArr[5]!=0)){
							$query_location_address->LeftJoin('police_station', 'p', 'p.police_station_code='.$alias.'.'.$fieldArr[5]);
							$query_location_address->fields('p', array('name_of_police_station'));
							if(isset($fieldArr[7]) && ($fieldArr[7]!='' || $fieldArr[7]!=0)){
								$query_location_address->LeftJoin('state_master', 'state', 'state.id='.$alias.'.'.$fieldArr[7]);
								$query_location_address->fields('state', array('statename'));
							}
						}
					}
				}
			}		
		}
		
		
		
		if($type=="mtw"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.id',$id,'=');		
			$query_location_address		->	condition($alias.'.act_id','3','=');
			
		}elseif($type=="ismw"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.id',$id,'=');		
			$query_location_address		->	condition($alias.'.act_id','4','=');
			
		}elseif($type=="sub-table"){ 
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.id',$id,'=');		
			
		}elseif($type=="custom"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.user_id',$id,'=');
								
		}elseif($type=="ismw-license"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.form_six',$id,'=');
								
		}elseif($type=="inspection"){
			$query_location_address		->	fields($alias, $fieldArr);
			$query_location_address		->	condition($alias.'.ins_file_number',$id,'=');					
		}else{
			if($keyField != ''){
				$query_location_address		->	fields($alias, array());
				$query_location_address		->	condition($alias.'.'.$keyField,$id,'=');
			}else{
				$query_location_address		->	fields($alias, array());
				$query_location_address		->	condition($alias.'.id ',$id,'=');
				$query_location_address		->	condition($alias.'.designation',$type,'=');
			}
		}
		

		$location_result = $query_location_address->execute()->fetchAssoc(); print_r($location_result);
		
		
		if(!empty($location_result)){
			
			if($location_result[$fieldArr[2]]=="B"){
				$text_AreaType_loc = "Block - ";
				$areatype_loc_name = ucwords($location_result['village_name']);
			}elseif($location_result[$fieldArr[2]]=="M"){
				$areatype_loc_name = 'Ward-'.$location_result['village_name']; 
			}elseif($location_result[$fieldArr[2]]=="C"){
				$areatype_loc_name = $location_result['village_name'];
			}elseif($location_result[$fieldArr[2]]=="N"){
				$areatype_loc_name = 'Notified Area - '.$location_result['village_name'];
			}
			
			
			if($location_result[$fieldArr[0]] == 17){  //If the area is Kolkata ***/
				if(!empty($location_result['village_name']) && $location_result['name_of_police_station'] && $location_result['district_name']){
					$location_address_result 	.= $areatype_loc_name.',&nbsp;PS - '.$location_result['name_of_police_station'].',&nbsp;'.$location_result['district_name'].'- '.$location_result[$fieldArr[6]];
				}
				/*if(!empty($location_result['name_of_police_station'])){
					$location_address_result 	.=;
				}
				if(!empty($location_result['district_name'])){
					$location_address_result 	.= ;
				}*/	
			}else{
				//If the state is West Bengal ***/
				if($location_result[$fieldArr[7]] == 1 || empty($fieldArr[7])){ 
				/*&& ( !empty($location_result[$fieldArr[2]]) && !empty($location_result['block_mun_name'])) && !empty($location_result['sub_div_name']) && !empty($location_result['name_of_police_station']) && !empty($location_result['district_name']) && !empty($location_result[$fieldArr[6]]) && !empty($location_result[$fieldArr[7]])*/
					if(!empty($location_result['village_name']) && ( !empty($location_result[$fieldArr[2]]) && !empty($location_result['block_mun_name'])) && !empty($location_result['sub_div_name'])&& !empty($location_result['name_of_police_station']) && !empty($location_result['district_name']) && !empty($location_result[$fieldArr[6]]) ){
						
						$location_address_result 	.= $areatype_loc_name.',&nbsp;'.$text_AreaType_loc.$location_result['block_mun_name'].',<br/>'.$location_result['sub_div_name'].',&nbsp;PS - '.$location_result['name_of_police_station'].',<br/>'.$location_result['district_name'].'&nbsp;, PIN- '.$location_result[$fieldArr[6]].',&nbsp;'.$location_result['statename'];
					}
					/*if(!empty($location_result[$fieldArr[2]]) && !empty($location_result['block_mun_name']) ){
						$location_address_result 	.= ',&nbsp;'.$text_AreaType_loc.$location_result['block_mun_name'].',<br/>';
					}
					if(!empty($location_result['sub_div_name'])){
						$location_address_result 	.= $location_result['sub_div_name'];
					}
					if(!empty($location_result['name_of_police_station'])){
						$location_address_result 	.= ',&nbsp;PS - '.$location_result['name_of_police_station'];
					}
					if(!empty($location_result['district_name'])){
						$location_address_result 	.= ',<br/>'.$location_result['district_name'];
					}
					if(!empty($location_result[$fieldArr[6]])){
						$location_address_result 	.= '&nbsp;, PIN- '.$location_result[$fieldArr[6]];
					}
					if(!empty($location_result[$fieldArr[7]])){
						$location_address_result 	.= ',&nbsp;'.$location_result['statename'];
					}else{
						$location_address_result 	.= '';
					}*/
				}else{
					//If the state is Others ***/
					
					if(!empty($location_result['sub_div_name'])){
						$location_address_result 		.= $location_result['sub_div_name'];
					}else{
						$location_address_result 		.= '';
					}
					if( (!empty($location_result['district_name'])) && !empty($location_result['sub_div_name'])) {
						$location_address_result 	.= ',<br/>'.$location_result['district_name'];
					}else if( (!empty($location_result['district_name'])) && empty($location_result['sub_div_name']) ){
						$location_address_result 	.= $location_result['district_name'];
					}else{
						$location_address_result 	.= '';
					}
					if ( (!empty($location_result[$fieldArr[7]])) && !empty($location_result['district_name'])){
						$location_address_result 	.= ',&nbsp;'.$location_result['statename'];
					}else if( (!empty($location_result[$fieldArr[7]])) && empty($location_result['district_name']) ){
						$location_address_result 	.= $location_result['statename'];
					}else{
						$location_address_result 	.= '';
					}
				}
			}
		}
		//echo $location_address_result;
	return $location_address_result;
}


//---------------Rowcount of renewal table -----------
function rowcount_renewal($license_id,$contractor_id){
	
	$license_apply_renweal = db_select('l_contractor_license_apply_renweal', 'lclar');
  	$license_apply_renweal->fields('lclar',array());
  	$license_apply_renweal->condition('lclar.lincense_id',$license_id,'=');
	$license_apply_renweal->condition('lclar.created_by',$contractor_id,'=');
	$license_apply_renweal->condition('lclar.action','R','=');
	//$license_apply_renweal->condition('created_date', array($renweal_prev, $license_date), 'BETWEEN');
	
	

	
	$result_rowcount_renewal = $license_apply_renweal->execute()->rowCount();

	
return $result_rowcount_renewal;
	
}

function send_sms_for_user_alert($dest='', $msg='', $template_id = ''){
	//echo $uid."--".$pass."--".$send."--".$dest."--".$msg; exit;
	$uid	=	'elabour.sms'; 
	$pass	=	'Kj5%23DGJ!3';
	
	// $send	=	'NICSMS';
	
	$send	=	"WBLABR";	//WBLABR	
	
	//echo $uid."--".$pass."--".$send."--".$dest."--".$msg; exit;
	$url	=	"https://smsgw.sms.gov.in/failsafe/HttpLink?";
	$data 	= 	"username=$uid&pin=$pass&message=$msg&mnumber=$dest&signature=$send&dlt_entity_id=1101757270000028157&dlt_template_id=$template_id";
	$ch 	= 	curl_init();
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_HEADER, 0);
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,false);
	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,1);
	curl_setopt($ch, CURLOPT_CAINFO,'/etc/pki/tls/certs/ca-bundle.crt');
	if (curl_errno($ch)) echo 'Curl error: ' . curl_error($ch);
	else $curl_output =curl_exec($ch);
	curl_close($ch);
	if($curl_output){
		//echo "Sms sent to ".$dest;
	}else{
		//echo "There is some technical problem.Please try again later.";
	}
}

function send_otp_sms_for_login($dest='', $msg='', $template_id = ''){
	//$uid = 'elabour.otp';
	//$pass = 'A%24H%262nDh';
	
	$uid	=	'elabour.sms'; 
	$pass	=	'Kj5%23DGJ!3';
	
	$send = 'WBLABR';
	$url = "https://smsgw.sms.gov.in/failsafe/HttpLink?";
	$data = "username=$uid&pin=$pass&message=$msg&mnumber=$dest&signature=$send&dlt_entity_id=1101757270000028157&dlt_template_id=$template_id";
	
	$ch 	= 	curl_init();
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_HEADER, 0);
	curl_setopt($ch, CURLOPT_POST, 1);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER,false);
	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST,1);
	curl_setopt($ch, CURLOPT_CAINFO,'/etc/pki/tls/certs/ca-bundle.crt');
	if (curl_errno($ch)) echo 'Curl error: ' . curl_error($ch);
	else $curl_output =curl_exec($ch);
	curl_close($ch); // echo $curl_output; echo 'aa'; die;
	if($curl_output){
		// echo "sent";
	}else{
		// echo "not sent";
	}
}

function send_mail_for_user_alert($mailto = '', $subject = '', $message = '', $name = ''){
	
	$message .= '<br><br><br>NOTE- YOU ARE RECEIVING THIS EMAIL BECAUSE YOU ARE A USER OF LABOUR COMMISSIONERATE, GOVT. OF WEST BENGAL. PLEASE DO NOT REPLY TO THIS MAIL. THIS IS AN AUTO GENERATED MAIL AND REPLIES TO THIS EMAIL ID ARE NOT ATTENDED TO.';
	
	if(empty($name)) $name = 'Name Not Available';
	
	require_once('email_dir/PHPMailerAutoload.php');

	$mail = new PHPMailer(true);

	$mail->isSMTP();
	$mail->Host = '164.100.14.95';
	$mail->SMTPAuth = false;
	$mail->Username = '';
	$mail->Password = '';
	$mail->SMTPSecure = '';
	$mail->Port = 25;
	
	// $mail->From('dlctu.lc-wb@gov.in');
	// $mail->setFrom('dlctu.lc-wb@gov.in', 'WBLC');
	
	$mail->From = 'no-reply.lc-wb@gov.in';
	$mail->FromName = 'wblc.gov.in';
	// $mail->addAddress('arnabcse2013@gmail.com', 'Labour');
	$mail->addAddress($mailto, $name);
	$mail->isHTML(true);

	$mail->Subject = $subject;
	$mail->Body = $message;
	// $mail->SMTPDebug = 3;
	if(!$mail->send()) {
		return false;
    	 //echo 'Message could not be sent.';
    	// echo 'Mailer Error: ' . $mail->ErrorInfo;
	}else{
    	 //echo 'Message has been sent';
		return true;
	}
}

/*function send_mail_for_user_alert($mailto = '', $subject = '', $message = '', $filename = ''){
	
	if($filename != ''){
		$filename = 'banner.jpg';
		$path = 'https://wblc.gov.in/images';
		$file = $path . "/" . $filename;
	}
	
	$message .= '<br><br><br>NOTE- YOU ARE RECEIVING THIS EMAIL BECAUSE YOU ARE A USER OF LABOUR COMMISSIONERATE, GOVT. OF WEST BENGAL. PLEASE DO NOT REPLY TO THIS MAIL. THIS IS AN AUTO GENERATED MAIL AND REPLIES TO THIS EMAIL ID ARE NOT ATTENDED TO.';	
	
	
	$content = file_get_contents($file);
	$content = chunk_split(base64_encode($content));

	// a random hash will be necessary to send mixed content
	$separator = md5(time());

	// carriage return type (RFC)
	$eol = "\r\n";

	// main header (multipart mandatory)
	$headers = "From: WBLC <wblc@gov.in>" . $eol;
	$headers .= "MIME-Version: 1.0" . $eol;
	$headers .= "Content-Type: multipart/mixed; boundary=\"" . $separator . "\"" . $eol;
	$headers .= "Content-Transfer-Encoding: 7bit" . $eol;
	$headers .= "This is a MIME encoded message." . $eol;
	
	// message
	$body = "--" . $separator . $eol;
	$body .= "Content-Type: text/html; charset=\"iso-8859-1\"" . $eol;
	$body .= "Content-Transfer-Encoding: 8bit" . $eol;
	$body .= $message . $eol;
	
	// attachment
	
	if($filename != ''){
		$body .= "--" . $separator . $eol;
		$body .= "Content-Type: application/octet-stream; name=\"" . $filename . "\"" . $eol;
		$body .= "Content-Transfer-Encoding: base64" . $eol;
		$body .= "Content-Disposition: attachment" . $eol;
		$body .= $content . $eol;
		$body .= "--" . $separator . "--";
	}
	
	//SEND Mail
	if (mail($mailto, $subject, $body, $headers)) {
		// echo "mail send ... OK"; // or use booleans here
	} else {
		// echo "mail send ... ERROR!";
		// print_r( error_get_last() );
	}
}*/

function fetch_documents_with_respect_to_last_updated($user_id='' , $fieldArr=''){
	
	if($user_id!=''){
		
		if(($fieldArr=='')|| empty($fieldArr)){
			$fieldArr				=	array();
		}
					
		$documents_location			= array();
			
		foreach($fieldArr as $val){
	
			$fetch_docs 			= 	db_select('l_documents_upload', 'ldu');			
			$fetch_docs				->	fields('ldu', array($val, 'documents_id','act_id'));
			$fetch_docs				->	condition('ldu.user_id', $user_id);
			$fetch_docs				->	condition('ldu.act_id', 2 ,'!=');
			$fetch_docs				->	orderBy('ldu.documents_id','DESC');
			$fetch_docs				->	isNotNull('ldu.'.$val);
			$fetch_docs				->	range(0, 1);
			$fetch_docs_result 	 	= 	$fetch_docs->execute()->fetchAssoc();
			
			if($val == 'factory_license_file'){
				
					$documents_location[$val] 					  = $fetch_docs_result['factory_license_file'];
					$documents_location['factory_license_folder'] = 'FactoryLicense/';	
					
			}else if($val == 'article_of_assoc_file'){
				
				if($fetch_docs_result['act_id']==2){
				
					$documents_location[$val] 					   = $fetch_docs_result['article_of_assoc_file'];
					$documents_location['article_of_assoc_folder'] = 'bocwa_article_of_assoc/';
				}else{
					$documents_location[$val] 						= $fetch_docs_result['article_of_assoc_file'];
					$documents_location['article_of_assoc_folder']  = 'article_of_assoc/';
				}
				
			}else if($val == 'trade_license_file'){
				
				if($fetch_docs_result['act_id']==2){
				
					$documents_location[$val] 						= $fetch_docs_result['trade_license_file'];
					$documents_location['trade_license_folder'] 	= 'bocwa_trade_license/';	
					
				}else{
					$documents_location[$val] 						= $fetch_docs_result['trade_license_file'];
					$documents_location['trade_license_folder'] 	= 'trade_license/';	
				}
				
			}else if($val == 'address_proof_file'){
				
				if($fetch_docs_result['act_id']==2){
					$documents_location[$val] 					  = $fetch_docs_result['address_proof_file'];
					$documents_location['address_proof_folder']   = 'bocwa_address_proof/';	
				}else{
					$documents_location[$val] 					  = $fetch_docs_result['address_proof_file'];
					$documents_location['address_proof_folder']   = 'address_proof/';
				}
			}else if($val == 'form_six_file'){
				
				$documents_location[$val] 					  	  = $fetch_docs_result['form_six_file'];
				$documents_location['form_six_file_folder']   	  = 'FORM-VI/';	
					
			}else if($val == 'other_doc_file'){
				
				$documents_location[$val] 					  	  = $fetch_docs_result['other_doc_file'];
				$documents_location['other_doc_folder']   		  = 'OtherRelatedDocuments/';		
			}
			
		}
		
	}
	
	return $documents_location;
}

function get_mobile_number($uid){
	$r_query = db_select('users_roles', 'ur');			
	$r_query->fields('ur', array('rid'));
	$r_query->condition('ur.uid', $uid);
		
	$r_query_result = $r_query->execute()->fetchAssoc();	
	
	if($r_query_result['rid'] != 8){
		$user_query = 	db_select('l_custom_user_detail', 'lcud');			
		$user_query->fields('lcud', array('mobile'));
		$user_query->condition('lcud.usr_id', $uid);
			
		$user_query_result = $user_query->execute()->fetchAssoc();
		
		$mobile_no = $user_query_result['mobile'];
	}else{
		$user_query = 	db_select('l_common_application_master', 'lcam');			
		$user_query->fields('lcam', array('mobile'));
		$user_query->condition('lcam.user_id', $uid);
			
		$user_query_result = $user_query->execute()->fetchAssoc();
		
		$mobile_no = $user_query_result['mobile'];
	}
	
	return $mobile_no;	
}

function get_email($uid){
	$r_query = db_select('users_roles', 'ur');			
	$r_query->fields('ur', array('rid'));
	$r_query->condition('ur.uid', $uid);		
	$r_query_result = $r_query->execute()->fetchAssoc();	
	
	
	$user_query = 	db_select('users', 'lcam');			
	$user_query->fields('lcam', array('mail'));
	$user_query->condition('lcam.uid', $uid);		
	$user_query_result = $user_query->execute()->fetchAssoc();
	
	$mobile_no = $user_query_result['mail'];
	
	
	return $mobile_no;	
}

function number_validation($element,&$form_state){
	$fieldVal	=	trim($element['#value']);
	$match_preg =	'/^[0-9]+$/i';
	if(!empty($fieldVal)){
		if(!preg_match($match_preg, $fieldVal)) {
			form_error($element, t($element['#title'].' should be number only'));
		}
	}
}
function point_validation($element,&$form_state){
	$fieldVal	=	trim($element['#value']);
	$match_preg =	'/^\d*\.\d+$/';
	if(!empty($fieldVal)){
		if(!preg_match($match_preg, $fieldVal)) {
			form_error($element, t($element['#title'].' should be number or decimal only'));
		}
	}
}

function get_user_application_status($status='',$act_id=''){
	
	if(empty($status)){
		$application_status 	= '<span class="incomplete" title="Incomplete Application"></span>';
	}
	if( $status == "0"){
		$application_status 	= '<span class="applied" title="Applied"></span>';	
	}
	if( $status == "B"){
		$application_status 	= '<span class="backed" title="Back to Applicant by Officer"></span>';	
	}
	if( $status == "F"){
		$application_status 	= '<span class="forward" title="Forwarded to ALC"></span>';				
	}
	if( ( $status == "VA") || ( ($act_id == 6|| $act_id == 61)&& $status == 'F')){
		$application_status 	= '<span class="approved" title="Approved"></span>';				
	}
	if( $status == "V" ){
		$application_status 	= '<span class="feespending" title="Fees Pending"></span>';				
	}
	if( $status == "BI" ){
		$application_status 	= '<span class="backtoins" title="Back to Inspector"></span>';				
	}
	if( $status == "C"){
		$application_status 	= '<span class="call_applicant" title="Call Applicant"></span>';				
	}
	if( $status == "I" ){
		$application_status 	= '<span class="issued" title="Certificate Issued"></span>';				
	}
	if( $status == "R" ){
		$application_status 	= '<span class="reject" title="Reject Application"></span>';
	}
	if( $status == "T" ){
		$application_status 	= '<span class="feespaid" title="Transaction Successful"></span>';
	}
	if( $status == "RN" ){
		$application_status 	= '<span class="pending" title="Pending">Pending For Renewal</span>';
  	}
	if( $status == "S" ){
		$application_status 	= '<span class="finalsubmit" title="Final Submit"></span>';
	}
	if( $status == "U" ){
		if($act_id == 42 ||  $act_id== 43){
			$application_status 	= '<span class="rectify-signed-form" title="Rectify FORM-V"></span>';	
		}else{
			$application_status 	= '<span class="rectify-signed-form" title="Rectify FORM-I"></span>';
		}
	}
	if( $status == "D" ){
		$application_status 	= '<span class="amendment-accepted" title="Amendment Accepted"></span>';
	}
	
	return $application_status;
		
}

function get_identification_type(){
	$cardTypeOptions 					= 	array(
		''	=>	'Select Card Type', 
		1	=>	'AADHAR', 
		2	=>	'PAN', 
		3	=>	'EPIC',
		4	=>	'Driving Licence',
		5	=>	'ESI Number',
		6	=>	'PF Number',
		7	=>	'Employee ID'
	);
	return $cardTypeOptions;
}

function get_year_range($start=0,$end=0,$range=''){
	
	$operation_rang['0'] = '-Select-';
	if($start !=0 && $end !=0 && $range == "middle"){
		$mid = (int)((int)$start + ((int)$end - (int)$start) / 2);
		
		for($i=$mid; $i>=$start; $i--){
			$operation_rang[date('Y',strtotime('-'.$i.' years'))]	= date('Y',strtotime('-'.$i.' years'));
		}
		$operation_rang[date('Y')]	= date('Y');
		for($j=1; $j<=$mid; $j++){
			$operation_rang[date('Y',strtotime('+'.$j.' years'))]	= date('Y',strtotime('+'.$j.' years'));
		}
	}else if($start !=0 && $end !=0 && $range == "start"){
		
		for($k=$start; $k<$end; $k++){
			$operation_rang[date('Y',strtotime('+'.$k.' years'))]	= date('Y',strtotime('+'.$k.' years'));
		}
	}
	return $operation_rang;
}

function get_fawloi_application_status($status=''){
	
	switch ($status){                   
        case "":
            $application_status 	= '<span class="incomplete" title="Incomplete Application"></span>';
            break;                       
        case "P":
            $application_status 	= '<span class="pending" title="Pending Application"></span>';	 
            break;
		case "F":
            $application_status 	= '<span class="forward" title="Forwarded to ALC"></span>';		 
            break;	 
		case "S":
            $application_status 	= '<span class="finalsubmit" title="Final Submit"></span>';	 
            break;
		case "V":
            $application_status 	= '<span class="approved" title="Approved By ALC"></span>';	 
            break;	 
		case "R":
            $application_status 	= '<span class="reject" title="Reject Application"></span>';	 
            break;
		case "D":
			$application_status 	= '<span class="approved" title="Approved By DLC"></span>';	 
            break;
		case "J":
			$application_status 	= '<span class="approved" title="Approved By JLC"></span>';	 
            break;
		case "C":
			$application_status 	= '<span class="approved" title="Approved By FAWLOI Cell"></span>';	 
            break;	
		case "H":
			$application_status 	= '<span class="hearing" title="Call for Physical Verification"></span>';	 
            break;	
		default :
			 $application_status 	= '';                     
                
    }
	return $application_status;
}

function action_dropdown_fawloi($rid = 0){
	
	$options = array();
	if($rid == 7){
		$options['A']		= t('Forward to ALC');
		$options['D']		= t('Forward to DLC');
		$options['J']		= t('Forward to JLC');
		$options['A']		= t('Forward to Super Admin');
		$options['C']		= t('Forward to FAWLOI Cell');
	}else if($rid == 4){
		$options['D']		= t('Forward to DLC');
		$options['J']		= t('Forward to JLC');
		$options['A']		= t('Forward to Super Admin');
		$options['C']		= t('Forward to FAWLOI Cell');
	}else if($rid == 5){
		$options['J']		= t('Forward to JLC');
		$options['A']		= t('Forward to Super Admin');
		$options['C']		= t('Forward to FAWLOI Cell');
	}else if($rid == 6){
		$options['A']		= t('Forward to Super Admin');
		$options['C']		= t('Forward to FAWLOI Cell');
	}else{
		$options['V']		= t('Verified by FAWLOI Cell');
	}
	
	$options['R']		= t('Rejected');
	return $options;

}

function action_dropdown_fawloi_scheme($status = '',$user_role = ''){
	$options = array();
	
	if($status == 'S'){
		//$options['B'] = 'Back for Correction';
		$options['R'] = 'Reject';
		$options['V'] = 'Verified';
		$options['H'] = 'Verified and Set Hearing Date';
		$options['D'] = 'Verified and Forward to DLC';
	}else if($status == 'F'){
		//$options['B'] = 'Back for Correction';
		$options['R'] = 'Reject';
		$options['V'] = 'Verified';
		$options['H'] = 'Verified and Set Hearing Date';
		$options['D'] = 'Verified and Forward to DLC';
	}else if($status == 'H'){
		//$options['B'] = 'Back for Correction';
		$options['R'] = 'Reject';
		$options['V'] = 'Verified';
		$options['H'] = 'Verified and Set Hearing Date';
		$options['D'] = 'Verified and Forward to DLC';
		$options['A'] = 'All Verified';
	}else{
		//$options['B'] = 'Back for Correction';
		$options['R'] = 'Reject';
		$options['V'] = 'Verified';
		
		if($user_role == 7){
			$options['F'] = 'Verified and Forward to ALC';
		}
		$options['H'] = 'Verified and Set Hearing Date';
		$options['D'] = 'Verified and Forward to DLC';
		$options['A'] = 'All Verified';
	}
	
	
	
	return $options;	
}


function get_clra_pe_total_paid_amount($applicant_user_id, $application_id = ''){
	$pquery_result = db_query("select SUM(CAST(r.challanamount as DOUBLE PRECISION)) as total_amount from l_principle_epayments_receive_data as r left join l_principle_epayments_data as p on p.identification_no = r.transaction_id where r.banktransactionstatus='Success' and p.act_id = 1 and p.deposited_by = '".$applicant_user_id."'")->fetchObject();
	
	$bk_query = db_select('l_clra_registration_master', 'lcrm');
	$bk_query->fields('lcrm', array('id', 'backlog_id'));
	$bk_query->leftJoin('l_clra_principle_emp_backlog_data', 'lcpbd', 'lcpbd.id=lcrm.backlog_id');	
	$bk_query->fields('lcpbd', array('fees'));
	$bk_query->condition('lcrm.user_id', $applicant_user_id);
	$bk_query->condition('lcrm.id', $application_id); 
	// $bk_query->condition('lcrm.id', 5746);	
	$bk_result = $bk_query->execute()->fetchAssoc();
	
	$total_amount = $pquery_result->total_amount;
		
	if(!empty($bk_result['fees'])){
		$total_amount = $total_amount + $bk_result['fees'];
	}	
	
	if(!empty($total_amount)){
		return $total_amount;
	}else{
		return 0;
	}
	
}

function get_clra_pe_total_paid_amount_details($applicant_user_id, $application_id = ''){
	$pquery_result = db_query("select SUM(CAST(r.challanamount as INT)) as total_amount from l_principle_epayments_receive_data as r left join l_principle_epayments_data as p on p.identification_no = r.transaction_id where r.banktransactionstatus='Success' and p.act_id = 1 and p.deposited_by = '".$applicant_user_id."'")->fetchObject();
	
	$bk_query = db_select('l_clra_registration_master', 'lcrm');
	$bk_query->fields('lcrm', array('id', 'backlog_id', 'finalfees'));
	$bk_query->leftJoin('l_clra_principle_emp_backlog_data', 'lcpbd', 'lcpbd.id=lcrm.backlog_id');	
	$bk_query->fields('lcpbd', array('fees', 'old_fees_chat'));
	$bk_query->condition('lcrm.user_id', $applicant_user_id);
	$bk_query->condition('lcrm.id', $application_id); 
	// $bk_query->condition('lcrm.id', 5746);	
	$bk_result = $bk_query->execute()->fetchAssoc();
	
	$total_amount = $pquery_result->total_amount;
		
	if(!empty($bk_result['fees'])){
		$total_amount = $total_amount + $bk_result['fees'];		
	}
	
	if($bk_result['old_fees_chat'] == 1){
		if($bk_result['fees'] == 20 || $bk_result['fees'] == 50 || $bk_result['fees'] == 100 || $bk_result['fees'] == 200 || $bk_result['fees'] == 400 || $bk_result['fees'] == 500){
			$act_paid_amount = $pquery_result->total_amount + ($total_amount*10);
		}
		
		if($bk_result['finalfees'] > $act_paid_amount){
			$payable_status = 'Y';
		}else{
			$payable_status = 'N';
		}
	}else{
		if($bk_result['finalfees'] > $total_amount){
			$payable_status = 'Y';
		}else{
			$payable_status = 'N';
		}
	}
	
	$fsDtsArr = array('total_amount' => $total_amount, 'amount_payable_status' => $payable_status);	
	
	if(!empty($fsDtsArr)){
		return $fsDtsArr;
	}else{
		return 0;
	}
	
}

function actions_amendment_dropdown_by_alc($applicant_status,$amount_payable){ // Inspector Not given
	
	if ( trim( $applicant_status ) == 'S' ){		
		$options['U']		= t('Back For Correction (FORM - I )');
		$options['I']		= t('Issue Certificate');		
	}else{		
		$options['B']		= t('Back For Correction');
		if(trim($amount_payable) == 'Y'){
			$options['V']	= t('Verified & Approval For Fees Submission');
		}elseif(trim($amount_payable) == 'N'){
			$options['VA']	= t('Verified & Approval without Fees Submission');
		}elseif(trim($amount_payable) == 'YN'){
			$options['V']	= t('Verified & Approval For Fees Submission');
			$options['VA']	= t('Verified & Approval without Fees Submission');
		}
					
	}
	return $options;
}

function actions_dropdown_by_alc_act($applicant_status,$amount_payable,$act_id){
	
	if($act_id == 12 || $act_id == 13) { $optionValue = 'U'; }else{$optionValue = '';}
	
	if ( trim( $applicant_status ) == 'S' || $applicant_status  ==  $optionValue ){
		
		if($act_id == 42){
			
			$options['U']	= t('Back For Correction( FORM - V )');
			
		}elseif($act_id == 13){
			
			$options['P']	= t('Back For Correction( FORM - VII )');
			
		}elseif($act_id == 12){
			
			$options['P']	= t('Back For Correction( FORM - IV )');
			
		}else{
			
			$options['U']	= t('Back For Correction ( FORM - I )');
		}
		
		$options['I']		= t('Issue Certificate');
		//$options['R']		= t('Reject');
		
	}else {
		
		$options['B']		= t('Back For Correction');
		
		if($act_id != 13){
			$options['BI']		= t('Back To Inspector');
		}
		
		if(trim($amount_payable) == 'Y'){
			
			if($act_id == 12 || $act_id == 13){
			
				$options['A']	= t('Verified & Approval For Fees Submission');
			}else{
				$options['V']	= t('Verified & Approval For Fees Submission');
			}
		}else{
			
			$options['VA']	= t('Verified & Approval without Fees Submission');
		}
		$options['R']		= t('Reject');
			
	}
	return $options;
}

function pe_natureOfWrk($application_id='', $pe_user_id='', $act_id=''){
	$tableName = '';
	
	if($act_id == 1 ){
		$tableName = 'l_clra_reg_nature_of_work';	
	}elseif($act_id == 42 || $act_id == 4 ){
		$tableName = 'l_interstate_nature_of_work';	
	}
	
	/**** NATURE OF WORK CODE STARTS*****/
			
	$query_get_each_nature_work  = 	db_query("select a.id,b.contractor_work_id, b.cont_work_name from ".$tableName." a left join contractor_works as b on a.e_nature_of_work = b.contractor_work_id where a.application_id =:application_id and a.user_id=:user_id and b.is_default =:is_default ", array( ':user_id' => $pe_user_id , ':application_id' => $application_id , ':is_default' => '1')); 

	$prefix				= '';	
	$natureOfWrkString 	= '';
	$lastsuffix 		= '';
	
	if(!empty($query_get_each_nature_work)){
	
		$total = $query_get_each_nature_work->rowCount();
		
		if($total > 1 ) $lastsuffix 	= ', '; else $lastsuffix 	= '';
		
		foreach($query_get_each_nature_work as $listData){ 
		
				
				if($listData->contractor_work_id == 28){
						
					/** FOR FIELD FOR OTHER OPTION OF NATURE WORK ****/
	
					$get_other_nature_work 		= db_select($tableName, 'lcnw');
					$get_other_nature_work		->leftJoin('contractor_works', 'cw', 'lcnw.e_nature_of_work=cw.contractor_work_id');
					$get_other_nature_work		->fields('cw',array('cont_work_name','contractor_work_id'));
					$get_other_nature_work		->condition('cw.is_default',0);
					$get_other_nature_work		->condition('lcnw.user_id',$pe_user_id);
					$get_other_nature_work		->condition('cw.act_id',$act_id);
					$get_other_nature_work		->condition('lcnw.application_id',$application_id);
					$other_nature_work_data 	= $get_other_nature_work->execute(); 
					
					if( $other_nature_work_data->rowCount() > 0 ){ 
						
						$obj3 = $other_nature_work_data->fetchAssoc(); 
						
						$other_nature_wrk_id 	= $obj3['contractor_work_id'];
						$other_nature_wrk 		= $obj3['cont_work_name'];
						
						$natureOfWrkString 		.= $lastsuffix.$other_nature_wrk;
						
					}
					
				}else{
					
					$natureOfWrkString 			.= $prefix.$listData->cont_work_name;
					$prefix  	 				 = ', ';
				}
					
		}
	}
	
	return $natureOfWrkString;	
}

function getConNatureOfWrk($contractor_id='', $peApplication_id = '',$act_id=''){ 
	
	if($contractor_id!='' && $peApplication_id!=''){
		
		if($act_id ==  1){
			
			$con_nature_work_data 		= '';
			$prefix 					= '';
			
			$contractor_wrk_name 		= db_select('l_clra_con_nature_of_work', 'lccnw');
			$contractor_wrk_name		->leftJoin('contractor_works', 'cw', 'cw.contractor_work_id=lccnw.contractor_nature_of_work');
			$contractor_wrk_name		->leftJoin('l_contractor_info_master', 'cinfo', 'cinfo.id=lccnw.contractor_id');
			$contractor_wrk_name		->fields('cinfo', array('other_nature_work'));
			$contractor_wrk_name		->fields('lccnw', array('contractor_nature_of_work'));
			$contractor_wrk_name		->fields('cw', array('cont_work_name'));
			$contractor_wrk_name		->condition('lccnw.act_id',1);
			$contractor_wrk_name		->condition('lccnw.contractor_id', $contractor_id);
			$contractor_wrk_name		->condition('lccnw.application_id', $peApplication_id);
			$result_2 					= $contractor_wrk_name->execute()->fetchAll(); 
			
			foreach ($result_2 as  $con_nature_of_wrk){
				
				if($con_nature_of_wrk->contractor_nature_of_work == 28){
					if($con_nature_of_wrk->other_nature_work!=''){
						$con_nature_work_data  	.= $con_nature_of_wrk->other_nature_work;
					}else{
						$con_nature_work_data  	.= 'Others';
					}
				}else{
					$con_nature_work_data  	.= $prefix.$con_nature_of_wrk->cont_work_name;
					$prefix  	 = ', ';
				}
				
			}
			
			
		}elseif($act_id ==  4){
			
			$con_nature_work_data		= array();
			
			$con_nature_work 			= db_select('l_interstate_con_nature_of_work', 'lcnw');
			$con_nature_work			->leftJoin('contractor_works', 'cw', 'lcnw.contractor_nature_of_work = cw.contractor_work_id');
			$con_nature_work			->fields('cw',array('cont_work_name','contractor_work_id'));
			$con_nature_work			->condition('lcnw.contractor_id',$contractor_id);
			$con_nature_work			->condition('lcnw.act_id',4);
			$con_nature_work			->condition('lcnw.application_id',$peApplication_id);
			$con_nature_work_data 		= $con_nature_work->execute()->fetchAssoc();
		}
		
		
		return $con_nature_work_data;
	}
	
}

function get_user_license_status($status=''){
	
	if(empty($status)){
		$application_status 	= '<span class="incomplete" title="Incomplete Application"></span>';
	}
	if( $status == "F"){
		$application_status 	= '<span class="pending" title="Pending Application"></span>';	
	}
	if( $status == "B"){
		$application_status 	= '<span class="backed" title="Back to Applicant by Officer"></span>';	
	}
	if( $status == "FW"){
		$application_status 	= '<span class="forward" title="Forwarded to ALC"></span>';				
	}
	if( $status == "A" ){
		$application_status 	= '<span class="feespending" title="Fees Pending"></span>';				
	}
	if( $status == "BI" ){
		$application_status 	= '<span class="backtoins" title="Back to Inspector"></span>';				
	}
	/*if( $status == "C"){
		$application_status 	= '<span class="call_applicant" title="Call Applicant"></span>';				
	}*/
	if( $status == "I" ){
		$application_status 	= '<span class="issued" title="Certificate Issued"></span>';				
	}
	if( $status == "R" ){
		$application_status 	= '<span class="reject" title="Reject Application"></span>';
	}
	if( $status == "P" ){
		$application_status 	= '<span class="feespaid" title="Transaction Successful"></span>';
	}
	if( $status == "U" ){
		$application_status 	= '<span class="finalsubmit" title="Final Submit"></span>';
	}
	
	return $application_status;
		
}

/*** LABANI MODULES ***/


function contractor_regmaster_details($serial_no=''){
	global $base_root, $base_path, $user;
	
	$contractor_id 		= 	$user->uid;
	if(in_array('Applicant', $user->roles))
		$roles_data	=	8;
	if(in_array('ALC', $user->roles))
		$roles_data	=	4;
	if(in_array('Inspector', $user->roles))
		$roles_data	=	7;
			
	if($serial_no!=''){
		
		$query_work = db_select('l_clra_registration_master', 'reg_master');
		$query_work->InnerJoin('contractor_registrationmaster_details','reg_details', 'reg_master.id = reg_details.id');  
		$query_work->fields('reg_master',array('id','status'));
		$query_work->condition('reg_details.serial_no_from_v',$serial_no,'=');
		$status = 	$query_work->execute()->fetchObject()->status;
		$id = 	$query_work->execute()->fetchObject()->id;
		
		if($status == 'I'){
			$record = db_query("select * FROM contractor_registrationmaster_details where serial_no_from_v ='".$serial_no."'")->fetchAssoc();
		}
		if($status != 'I'){
			$max_serial_no = db_query("select max(serial_no_from_v) as max_serial_no FROM contractor_registrationmaster_details where contractor_parent_id  ='".$serial_no."'")->fetchObject()->max_serial_no;
			/*if(empty($max_serial_no)){
				$check_parent_id = db_query("select frm_v, contractor_user_id  FROM l_tag_no_parent_id_frm_v where frm_v  ='".$serial_no."' and contractor_user_id ='".$contractor_id."' ")->fetchAssoc();
				if(empty($check_parent_id['frm_v'])){
					$no_parent_id = array( 
									'frm_v'	=>	$serial_no,
									'contractor_user_id' => $contractor_id,
									'user_role'  => $roles_data
									
									
							);
							
							
					db_insert('l_tag_no_parent_id_frm_v')->fields($no_parent_id)->execute();
					
					$sms = 'Form-v No/Ref:-'.$serial_no.'Viewer id'.$contractor_id.' and Viewer Role'.$roles_data.' Applicant can not open his/her License/ renewal/ Amend list';
					send_sms_for_user_alert('7603091500',$sms);
					send_sms_for_user_alert('7278989577',$sms);
				}
			}*/
			if(!empty($max_serial_no)){
				$record = db_query("select * FROM contractor_registrationmaster_details where serial_no_from_v ='".$max_serial_no."'")->fetchAssoc();
				//$deltag		= db_delete('l_tag_no_parent_id_frm_v')->condition('frm_v', $serial_no)->condition('contractor_user_id', $contractor_id)->execute();
			}
		}
		return  $record;
	}
}

function renewal_data($license_renewal_id){
	$license_renweal = db_select('l_contractor_license_apply_renweal', 'renewal_apply');
  	$license_renweal->fields('renewal_apply',array())->condition('renewal_apply.action', 'R', '=');
  	$license_renweal->condition('renewal_apply.id', $license_renewal_id,'=');

	$license_renweal_details = $license_renweal->execute()->fetchAssoc();
	return $license_renweal_details;
}

function particular_data($serial,$contractorid=''){
		global $base_root, $base_path, $user;
		if(empty($contractorid))
		 	$contractor_id 		= 	$user->uid;
		else
		    $contractor_id 		=	$contractorid;	
	$query 								= 	db_select('l_particular_of_contract_labour', 'lpcl');
 	$query								->	fields('lpcl',array())->condition('serial_no_from_v',$serial,'=')->condition('contractor_user_id',$contractor_id,'=')->condition('act_id','1','=');
	$result 							= 	$query->execute()->fetchAssoc();
	
	return  $result;
}

 
function ammendment_address($license_id = '', $name = '', $reference_no = ''){
	
	$ammendment_address_details='';
	if($reference_no != ''){
		$refsearch = ' and referenceno = '.$reference_no.'';
	}else{
		$refsearch = '';
	}
	
	$query = db_query("SELECT  policestation, villagename, subdivname, districtname, blockname,pin, license_id, areatype, districtcode, address_line1 FROM ".$name."  where license_id =".$license_id.$refsearch."");	
	$ammendment_address = $query->fetchAssoc(); 
	 if(!empty($ammendment_address)){
		 $ammendment_address_details .= $ammendment_address['address_line1'].', ';
			if($ammendment_address['districtcode']!='17'){ 
					if($ammendment_address['areatype']=='B'){
							$ammendment_address_details		.=	ucwords($ammendment_address['villagename']).',&nbsp;';
							$ammendment_address_details		.=	'Block- '.$ammendment_address['blockname'].',&nbsp;';
					}
					if($ammendment_address['areatype']=='C'){
						  $ammendment_address_details	.=	$ammendment_address['villagename'].',&nbsp;';
						  $ammendment_address_details	.=	$ammendment_address['blockname'].',&nbsp;';
					}
					if($ammendment_address['areatype']=='M'){
						  $ammendment_address_details		.=	$ammendment_address['blockname'].',&nbsp;';
						  $ammendment_address_details		.=	'Ward- '.$ammendment_address['villagename'].',&nbsp;';
					}if($ammendment_address['areatype']=='N'){
						
						  $ammendment_address_details		.=	'Notified Area- '.$ammendment_address['villagename'].',&nbsp;';
					}
					
						$ammendment_address_details				.=	$ammendment_address['subdivname'].', ';
						$ammendment_address_details				.=	'PS - '.$ammendment_address['policestation'].',&nbsp;';
						$ammendment_address_details				.=	'District - '.$ammendment_address['districtname'].',&nbsp;PIN - '.$ammendment_address['pin'];
				  
			}else{
				$ammendment_address_details .= $ammendment_address['villagename'].',&nbsp;PS - '.$ammendment_address['policestation'].',&nbsp;'. $ammendment_address['districtname'].',&nbsp; PIN - '.$ammendment_address['pin'];
			}
		}
	return $ammendment_address_details;
}

function fetch_uplaoded_file_details($file_id=''){
	$query			=	db_select('file_managed','fm');
	$query 			->	fields('fm',array());
	$query			->	condition('fm.fid',$file_id,'=');
	$file_details	=	$query -> execute()->fetchAssoc();
	
	return $file_details;
}

function check_ammendment_table($license_renewal_ammendment_id){ 
	
	$fetchTagTable  =  db_select('l_contractor_activity_tag', 'tag');
	$fetchTagTable	-> fields('tag',array());
	$fetchTagTable	-> condition('tag.renewal_license_ammendment_id',$license_renewal_ammendment_id,'=');
	$fetchTagTable	->	range(0,1);
	$fetchTagTable	->	orderBy('id', 'DESC');
	$resultTag		= 	$fetchTagTable->execute()->fetchAssoc();
	
	$lastAppliedFlag = $resultTag['flag'];
	
	if($lastAppliedFlag == 'A'){
		$query	=	db_query('select  * from l_amendment_of_contract_labour_license where  id=:license_renewal_ammendment_id', array(':license_renewal_ammendment_id' =>$license_renewal_ammendment_id));
	}else{
	
	
	//if ($license_renewal_ammendment_id== 21){
		//$query	=	db_query('select  * from l_amendment_of_contract_labour_license where id=:license_renewal_ammendmentid', array(':license_renewal_ammendmentid' =>$license_renewal_ammendment_id));
		
		//$query	=	db_query('select  * from l_amendment_of_contract_labour_license where  license_renewal_ammendment_id=:license_renewal_ammendmentid or id=:license_renewal_ammendmentid or license_id=:license_renewal_ammendmentid or reference_no =:license_renewal_ammendmentid', array(':license_renewal_ammendmentid' =>$license_renewal_ammendment_id));
		
	//}else{
		$query	=	db_query('select  * from l_amendment_of_contract_labour_license where  license_renewal_ammendment_id=:license_renewal_ammendmentid or id=:license_renewal_ammendmentid or license_id=:license_renewal_ammendmentid or reference_no =:license_renewal_ammendmentid', array(':license_renewal_ammendmentid' =>$license_renewal_ammendment_id));
		
	}
	return  $query;
}



function ammendment_address_certificates($license_id='',$name=''){
	$ammendment_address_details='';
	$query = db_query("SELECT  policestation, villagename, subdivname, districtname, blockname,pin, license_id, areatype, districtcode,address_line1 FROM ".$name."  where license_id =".$license_id."");	
	//print_r($query);die();
	$ammendment_address = $query->fetchAssoc(); 
	
	
	 if(!empty($ammendment_address)){
		 $ammendment_address_details .= $ammendment_address['address_line1'].', ';
			if($ammendment_address['districtcode']!='17'){ 
					if($ammendment_address['areatype']=='B'){
							$ammendment_address_details		=	ucwords($ammendment_address['villagename']).', ';
							$ammendment_address_details		.=	'Block- '.$ammendment_address['blockname'].', ';
					}
					if($ammendment_address['areatype']=='C'){
						  $ammendment_address_details	.=	$ammendment_address['villagename'].', ';
						  $ammendment_address_details	.=	$ammendment_address['blockname'].', ';
					}
					if($ammendment_address['areatype']=='M'){
						  $ammendment_address_details		.=	$ammendment_address['blockname'].', ';
						  $ammendment_address_details		.=	'1Ward- '.$ammendment_address['villagename'].', ';
					}if($ammendment_address['areatype']=='N'){
						
						  $ammendment_address_details		.=	'Notified Area- '.$ammendment_address['villagename'].', ';
					}
					
						$ammendment_address_details				.=	$ammendment_address['subdivname'].', ';
						$ammendment_address_details				.=	'PS - '.$ammendment_address['policestation'].', ';
						$ammendment_address_details				.=	'District - '.$ammendment_address['districtname'].', Pin Code - '.$ammendment_address['pin'].' ';
				  
			}else{
				$ammendment_address_details .= $ammendment_address['villagename'].',&nbsp;PS - '.$ammendment_address['policestation'].',&nbsp;'. $ammendment_address['districtname'].', Pin Code - '.$ammendment_address['pin'];
			}
		}
	return $ammendment_address_details;
}

function service_list(){
	$service_list = array('1'=>'Registration of Principal Employer under The Contract Labour Act 1970.',
						  '2'=>'Registration of Principal Employers under The ISMW Act, 1979.',
						  '3'=>'Registration of Motor Transport undertaking under MTW Act, 1961.',
						  '4'=>'Registration of Establishments under BOCW Act, 1996.',
						  '5'=>'Licence of Contractors under The CLRA Act, 1970.',
						  '6'=>'Licence of Contractors under The ISMW Act, 1979.'
					);
	return $service_list;
				
}


function theme_progress_bar1($variables) {
  $output = '<div id="progress" class="progress">';
  $output .= '<div class="bar"><div class="new_filled" style="color:#FFF;text-align:center;width: ' . $variables . '%">' . $variables . '%</div></div>';
  $output .= '<div class="percentage">' . $variables . '%</div>';
  
  $output .= '</div>';
  return $output;
}

function theme_progress_bar11($variables) {
  $output = '<div id="progress" class="progress">';
  $output .= '<div class="bar"><div class="new_filled2" style="color:#4f4f4f;text-align:center;width: ' . $variables . '%">' . $variables . '%</div></div>';
  $output .= '<div class="percentage">' . $variables . '%</div>';
  
  $output .= '</div>';
  return $output;
}

function theme_progress_bar12($variables) {
  $output = '<div id="progress" class="progress">';
  $output .= '<div class="bar"><div class="new_filled3" style="color:#FFF;text-align:center;width: ' . $variables . '%">' . $variables . '%</div></div>';
  $output .= '<div class="percentage">' . $variables . '%</div>';
  
  $output .= '</div>';
  return $output;
}

function get_tu_sub_table_value($table_name,$field_id,$assets_liabilities){
	global $user; 
	$trade_union_details = db_select('l_trade_union_application_master','t')->fields('t',array('id','tu_existence_date'))->condition('user_id',$user->uid)->execute()->fetchAssoc(); 
	$application_id	= $trade_union_details['id'];
	
	$tu_s_t_l_v_11 = db_select($table_name,'lt');
	$tu_s_t_l_v_11->fields('lt', array());
	$tu_s_t_l_v_11->condition('lt.user_id', $user->uid);
	$tu_s_t_l_v_11->condition('lt.application_id', $application_id);
	$tu_s_t_l_v_11->condition('lt.assets_or_liabilities', $assets_liabilities);
	$tu_s_t_l_v_11->condition('lt.application_type', 'REG');
	$tu_s_t_l_v_11->condition('lt.status', 'Y');
	$tu_s_t_l_v_11->orderBy('lt.id', 'ASC');
	$tu_s_t_l_v_11-> condition('lt.field_id', $field_id);
	$tu_s_t_l_v_11_r = $tu_s_t_l_v_11 ->execute();	 
						$content.=	'<table>';
	if($tu_s_t_l_v_11_r->rowCount() > 0){
		foreach($tu_s_t_l_v_11_r as $data){				
						$content.= '<tr><td>'.$data->details.'</td> <td>'.$data->amount.'</td></tr>';
		}
	}
	return $content;
}

function number_to_word($number) {    
    $hyphen      = '-';
    $conjunction = ' and ';
    $separator   = ', ';
    $negative    = 'negative ';
    $decimal     = ' point ';
    $dictionary  = array(
        0 => 'zero', 1 => 'one', 2 => 'two', 3 => 'three', 4 => 'four', 5 => 'five', 6 => 'six', 7 => 'seven', 8 => 'eight', 9 => 'nine', 10 => 'ten', 11 => 'eleven', 12 => 'twelve', 13 => 'thirteen', 14 => 'fourteen', 15 => 'fifteen', 16 => 'sixteen', 17 => 'seventeen', 18 => 'eighteen', 19 => 'nineteen', 20 => 'twenty', 30 => 'thirty', 40 => 'fourty', 50                  => 'fifty',
        60                  => 'sixty',
        70                  => 'seventy',
        80                  => 'eighty',
        90                  => 'ninety',
        100                 => 'hundred',
        1000                => 'thousand',
        1000000             => 'million',
        1000000000          => 'billion',
        1000000000000       => 'trillion',
        1000000000000000    => 'quadrillion',
        1000000000000000000 => 'quintillion'
    );
    
    if (!is_numeric($number)) {
        return false;
    }
    
    if (($number >= 0 && (int) $number < 0) || (int) $number < 0 - PHP_INT_MAX) {
        // overflow
        trigger_error(
            'convert_number_to_words only accepts numbers between -' . PHP_INT_MAX . ' and ' . PHP_INT_MAX,
            E_USER_WARNING
        );
        return false;
    }

    if ($number < 0) {
        return $negative . number_to_words(abs($number));
    }
    
    $string = $fraction = null;
    
    if (strpos($number, '.') !== false) {
        list($number, $fraction) = explode('.', $number);
    }
    
    switch (true) {
        case $number < 21:
            $string = $dictionary[$number];
            break;
        case $number < 100:
            $tens   = ((int) ($number / 10)) * 10;
            $units  = $number % 10;
            $string = $dictionary[$tens];
            if ($units) {
                $string .= $hyphen . $dictionary[$units];
				
            }
            break;
        case $number < 1000:
            $hundreds  = $number / 100;
            $remainder = $number % 100;
            $string = $dictionary[$hundreds] . ' ' . $dictionary[100];
            if ($remainder) {
                $string .= $conjunction . number_to_word($remainder);
            }
            break;
        default:
            $baseUnit = pow(1000, floor(log($number, 1000)));
            $numBaseUnits = (int) ($number / $baseUnit);
            $remainder = $number % $baseUnit;
            $string = number_to_word($numBaseUnits) . ' ' . $dictionary[$baseUnit];
            if ($remainder) {
                $string .= $remainder < 100 ? $conjunction : $separator;
                $string .= number_to_word($remainder);
            }
            break;
    }
    
    if (null !== $fraction && is_numeric($fraction)) {
        $string .= $decimal;
        $words = array();
        foreach (str_split((string) $fraction) as $number) {
            $words[] = $dictionary[$number];
        }
        $string .= implode(' ', $words);
		
    }
	$string_word=ucwords($string);
    return $string_word;
}

function services_report($table_name,$subdivision_code,$loc_subdiv){
	global $user;
	$table_name = htmlspecialchars_decode($table_name);
	$subdivision_code = htmlspecialchars_decode($subdivision_code);
	
	if($user->uid == 1094){
		$clra_ap_details = db_query("select mw.sub_div_code, mw.sub_div_name , pentotal ,vpaytotal , vnotptotal , issuetotal , backtotal , rejtotal , inctotal , clrsubtotal from(                
SELECT sub_div_code, sub_div_name FROM sub_division where sub_div_code ='".$subdivision_code."') mw

LEFT JOIN(select sum(inctotal) inctotal, sub_div_code from (select count(*) inctotal, sub_div_code from $table_name a, sub_division c 
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status ='P' and status ='VA' and a.user_id in (64, 70, 11181, 32778, 23247) group by  sub_div_code  ) v  group by sub_div_code) AS insinc ON mw.sub_div_code = insinc.sub_div_code

LEFT JOIN(select sum(pentotal) pentotal, sub_div_code from (select count(*) pentotal, sub_div_code from $table_name a, sub_division c 
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status in ('0', 'S', 'F') and a.user_id in (64, 70, 11181, 32778, 23247) group by  sub_div_code) v group by sub_div_code) AS inspen ON mw.sub_div_code = inspen.sub_div_code

 LEFT JOIN (select sum(vpaytotal) vpaytotal, sub_div_code from (select count(*) vpaytotal, sub_div_code from $table_name a, sub_division c
 where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'T' and a.user_id in (64, 70, 11181, 32778, 23247) group by sub_div_code) v  group by sub_div_code) AS insvt ON mw.sub_div_code = insvt.sub_div_code 

 LEFT JOIN (select sum(vnotptotal) vnotptotal, sub_div_code from (select count(*) vnotptotal, sub_div_code from $table_name a, sub_division c
 where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'V' and a.user_id in (64, 70, 11181, 32778, 23247) group by sub_div_code) v group by sub_div_code) AS insvnotp ON mw.sub_div_code = insvnotp.sub_div_code  

LEFT JOIN(select sum(issuetotal) issuetotal,sub_div_code from (select count(*) issuetotal, sub_div_code from $table_name a, sub_division c
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'I' and a.user_id in (64, 70, 11181, 32778, 23247) group by sub_div_code) v  group by sub_div_code) AS insissu ON mw.sub_div_code = insissu.sub_div_code   

 LEFT JOIN (select sum(backtotal) backtotal, sub_div_code from (select count(*) backtotal, sub_div_code from $table_name a, sub_division c
 where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'B' and a.user_id in (64, 70, 11181, 32778, 23247) group by sub_div_code) v  group by sub_div_code  ) AS insback ON mw.sub_div_code = insback.sub_div_code

LEFT JOIN (select sum(rejtotal) rejtotal, sub_div_code from (select count(*) rejtotal, sub_div_code from $table_name a, sub_division c
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'R' and a.user_id in (64, 70, 11181, 32778, 23247) group by sub_div_code) v  group by sub_div_code  ) AS insrej ON mw.sub_div_code = insrej.sub_div_code 

LEFT JOIN(select sum(clrsubtotal) clrsubtotal, sub_div_code from (select count(*) clrsubtotal, sub_div_code from $table_name a, sub_division c
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status is not null and status is not null and a.user_id in (64, 70, 11181, 32778, 23247) group by sub_div_code) v group by sub_div_code) AS clrasub ON mw.sub_div_code = clrasub.sub_div_code")->fetchAssoc();

	}else{
		
    	$clra_ap_details = db_query("select mw.sub_div_code, mw.sub_div_name , pentotal ,vpaytotal , vnotptotal , issuetotal , backtotal , rejtotal , inctotal , clrsubtotal from(                
SELECT sub_div_code, sub_div_name FROM sub_division where sub_div_code ='".$subdivision_code."') mw

LEFT JOIN(select sum(inctotal) inctotal, sub_div_code from (select count(*) inctotal, sub_div_code from $table_name a, sub_division c 
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status ='P' and status ='VA' group by  sub_div_code  ) v  group by sub_div_code) AS insinc ON mw.sub_div_code = insinc.sub_div_code

LEFT JOIN(select sum(pentotal) pentotal, sub_div_code from (select count(*) pentotal, sub_div_code from $table_name a, sub_division c 
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status in ('0', 'S') group by  sub_div_code) v group by sub_div_code) AS inspen ON mw.sub_div_code = inspen.sub_div_code

 LEFT JOIN (select sum(vpaytotal) vpaytotal, sub_div_code from (select count(*) vpaytotal, sub_div_code from $table_name a, sub_division c
 where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'T' group by sub_div_code) v  group by sub_div_code) AS insvt ON mw.sub_div_code = insvt.sub_div_code 

 LEFT JOIN (select sum(vnotptotal) vnotptotal, sub_div_code from (select count(*) vnotptotal, sub_div_code from $table_name a, sub_division c
 where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'V' group by sub_div_code) v group by sub_div_code) AS insvnotp ON mw.sub_div_code = insvnotp.sub_div_code  

LEFT JOIN(select sum(issuetotal) issuetotal,sub_div_code from (select count(*) issuetotal, sub_div_code from $table_name a, sub_division c
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'I' group by sub_div_code) v  group by sub_div_code) AS insissu ON mw.sub_div_code = insissu.sub_div_code   

 LEFT JOIN (select sum(backtotal) backtotal, sub_div_code from (select count(*) backtotal, sub_div_code from $table_name a, sub_division c
 where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'B' group by sub_div_code) v  group by sub_div_code  ) AS insback ON mw.sub_div_code = insback.sub_div_code

LEFT JOIN (select sum(rejtotal) rejtotal, sub_div_code from (select count(*) rejtotal, sub_div_code from $table_name a, sub_division c
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status='P' and status = 'R' group by sub_div_code) v  group by sub_div_code  ) AS insrej ON mw.sub_div_code = insrej.sub_div_code 

LEFT JOIN(select sum(clrsubtotal) clrsubtotal, sub_div_code from (select count(*) clrsubtotal, sub_div_code from $table_name a, sub_division c
where a.$loc_subdiv = '".$subdivision_code."' and final_submit_status is not null and status is not null  group by sub_div_code) v group by sub_div_code) AS clrasub ON mw.sub_div_code = clrasub.sub_div_code")->fetchAssoc();
	}

	return $clra_ap_details;
}

function services_report_license_renual($table_name,$subdivision_code,$loc_subdiv){
	$table_name=htmlspecialchars_decode($table_name);
	$subdivision_code=htmlspecialchars_decode($subdivision_code);
$clra_ap_details = db_query("select mw.sub_div_code , sub_div_name, inctotal_rn , lc_submit_total_rn , fee_appv_total_rn , back_corr_total_rn , back_to_ins_rn , call_to_appl_rn , fwd_to_alc_rn , fee_pay_rn , fee_issue_rn , reject_rn ,upload_iv_rn , pen_office_rn from (

SELECT district_master.district_code, sub_div_code, sub_div_name
                   FROM district_master , sub_division
                   where district_master.district_code=sub_division.district_code and sub_division.sub_div_code='".$subdivision_code."'
                   GROUP BY district_master.district_code , sub_div_code, sub_div_name
                   ORDER BY sub_div_name  )  mw



				   
LEFT JOIN (  
select count(*) inctotal_rn, sub_div_code 


from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d  , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 


and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."' 

 and renewal_application_final_status is null and renewal_appliaction_status is null 

 group by sub_div_code )  AS insinc ON mw.sub_div_code = insinc.sub_div_code


         LEFT JOIN (  
select count(*) lc_submit_total_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status <> 'C'
	
	 
         group by sub_div_code  )  AS lcsub ON mw.sub_div_code = lcsub.sub_div_code


LEFT JOIN (  
select count(*) fee_appv_total_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='A'
	
	 
         group by sub_div_code  )  AS feeapp ON mw.sub_div_code = feeapp.sub_div_code

LEFT JOIN (  
select count(*) back_corr_total_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='B'
	
	 
         group by sub_div_code  ) AS backcorr ON mw.sub_div_code = backcorr.sub_div_code


LEFT JOIN (  
select count(*) back_to_ins_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 
and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='BI'
	
	 
         group by sub_div_code  )  AS backtoins ON mw.sub_div_code = backtoins.sub_div_code
         

LEFT JOIN (  
select count(*) call_to_appl_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='C'
	
	 
         group by sub_div_code  )  AS calltoappl ON mw.sub_div_code = calltoappl.sub_div_code



LEFT JOIN (  
 select count(*) fwd_to_alc_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 
and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='FW'
	
	 
         group by sub_div_code  )  AS fwalc ON mw.sub_div_code = fwalc.sub_div_code


         LEFT JOIN (  
select count(*) fee_pay_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code  

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='P'
	
	 
         group by sub_div_code  )  AS feepay ON mw.sub_div_code = feepay.sub_div_code



          LEFT JOIN (  
select count(*) fee_issue_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 

       and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='I'
	
	 
         group by sub_div_code  ) AS feeissue ON mw.sub_div_code = feeissue.sub_div_code


         LEFT JOIN (  
select count(*) reject_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 


         and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and renewal_application_final_status ='F' and renewal_appliaction_status ='R'
	
	 
         group by sub_div_code  )  AS rejectappl ON mw.sub_div_code = rejectappl.sub_div_code


         LEFT JOIN (  
select count(*) upload_iv_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 

            and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	     and renewal_application_final_status ='F' and renewal_appliaction_status ='U'
	
	 
         group by sub_div_code  )  AS uploadiv ON mw.sub_div_code = uploadiv.sub_div_code
		 
		 
		 
	LEFT JOIN (  
select count(*) pen_office_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , l_contractor_license_apply_renweal c , district_master d , sub_division e


where a.contractor_particular_id=b.id and a.id=c.lincense_id and  b.worksite_dist=d.district_code 

            and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	     and renewal_application_final_status ='F' and renewal_appliaction_status in ('U','F','FW')
	
	 
         group by sub_div_code  )  AS pendoffice ON mw.sub_div_code = pendoffice.sub_div_code order by sub_div_name")->fetchAssoc();

return $clra_ap_details;
}

function services_report_license($table_name,$subdivision_code,$loc_subdiv){
	$table_name=htmlspecialchars_decode($table_name);
	$subdivision_code=htmlspecialchars_decode($subdivision_code);
$clra_ap_details = db_query("select mw.sub_div_code , sub_div_name, inctotal_rn , lc_submit_total_rn , fee_appv_total_rn , back_corr_total_rn , back_to_ins_rn , call_to_appl_rn , fwd_to_alc_rn , fee_pay_rn , fee_issue_rn , reject_rn ,upload_iv_rn , pen_office_rn from (

SELECT district_master.district_code, sub_div_code, sub_div_name
                   FROM district_master , sub_division
                   where district_master.district_code=sub_division.district_code and sub_division.sub_div_code='".$subdivision_code."'
                   GROUP BY district_master.district_code , sub_div_code, sub_div_name
                   ORDER BY sub_div_name  )  mw



				   
LEFT JOIN (  
select count(*) inctotal_rn, sub_div_code 


from l_contractor_license_application a , l_particular_of_contract_labour b , district_master d  , sub_division e


where a.contractor_particular_id=b.id and  b.worksite_dist=d.district_code 


and d.district_code=e.district_code and b.worksite_subdivision='".$subdivision_code."' 

 and final_status is null and status is null 

 group by sub_div_code )  AS insinc ON mw.sub_div_code = insinc.sub_div_code


         LEFT JOIN (  
select count(*) lc_submit_total_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , district_master d , sub_division e


where a.contractor_particular_id=b.id  and  b.worksite_dist=d.district_code 

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status <> 'C'
	
	 
         group by sub_div_code  )  AS lcsub ON mw.sub_div_code = lcsub.sub_div_code


LEFT JOIN (  
select count(*) fee_appv_total_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , district_master d , sub_division e


where a.contractor_particular_id=b.id  and  b.worksite_dist=d.district_code 

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='A'
	
	 
         group by sub_div_code  )  AS feeapp ON mw.sub_div_code = feeapp.sub_div_code

LEFT JOIN (  
select count(*) back_corr_total_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , district_master d , sub_division e


where a.contractor_particular_id=b.id and b.worksite_dist=d.district_code 

and d.district_code=e.district_code and b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='B'
	
	 
         group by sub_div_code  ) AS backcorr ON mw.sub_div_code = backcorr.sub_div_code


LEFT JOIN (  
select count(*) back_to_ins_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , district_master d , sub_division e


where a.contractor_particular_id=b.id and  b.worksite_dist=d.district_code 
and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='BI'
	
	 
         group by sub_div_code  )  AS backtoins ON mw.sub_div_code = backtoins.sub_div_code
         

LEFT JOIN (  
select count(*) call_to_appl_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b  , district_master d , sub_division e


where a.contractor_particular_id=b.id  and  b.worksite_dist=d.district_code 

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='C'
	
	 
         group by sub_div_code  )  AS calltoappl ON mw.sub_div_code = calltoappl.sub_div_code



LEFT JOIN (  
 select count(*) fwd_to_alc_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b  , district_master d , sub_division e


where a.contractor_particular_id=b.id and  b.worksite_dist=d.district_code 
and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='FW'
	
	 
         group by sub_div_code  )  AS fwalc ON mw.sub_div_code = fwalc.sub_div_code


         LEFT JOIN (  
select count(*) fee_pay_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b  , district_master d , sub_division e


where a.contractor_particular_id=b.id and b.worksite_dist=d.district_code  

and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='P'
	
	 
         group by sub_div_code  )  AS feepay ON mw.sub_div_code = feepay.sub_div_code



          LEFT JOIN (  
select count(*) fee_issue_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b  , district_master d , sub_division e


where a.contractor_particular_id=b.id  and  b.worksite_dist=d.district_code 

       and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='I'
	
	 
         group by sub_div_code  ) AS feeissue ON mw.sub_div_code = feeissue.sub_div_code


         LEFT JOIN (  
select count(*) reject_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , district_master d , sub_division e


where a.contractor_particular_id=b.id  and  b.worksite_dist=d.district_code 


         and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	 and final_status ='F' and status ='R'
	
	 
         group by sub_div_code  )  AS rejectappl ON mw.sub_div_code = rejectappl.sub_div_code


         LEFT JOIN (  
select count(*) upload_iv_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b  , district_master d , sub_division e


where a.contractor_particular_id=b.id and  b.worksite_dist=d.district_code 

            and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	     and final_status ='F' and status ='U'
	
	 
         group by sub_div_code  )  AS uploadiv ON mw.sub_div_code = uploadiv.sub_div_code
		 
		 
		 
	LEFT JOIN (  
select count(*) pen_office_rn, sub_div_code 

from l_contractor_license_application a , l_particular_of_contract_labour b , district_master d , sub_division e


where a.contractor_particular_id=b.id and  b.worksite_dist=d.district_code 

            and d.district_code=e.district_code and   b.worksite_subdivision='".$subdivision_code."'
	 
	     and final_status ='F' and status in ('U','F','FW') and is_backlog_license is null and a.contractor_user_id is not null
	
	 
         group by sub_div_code  )  AS pendoffice ON mw.sub_div_code = pendoffice.sub_div_code order by sub_div_name")->fetchAssoc();

return $clra_ap_details;
}
function get_tu_sub_table_value_return($table_name,$field_id,$assets_liabilities,$application_id,$current_yr){
	global $user; 
	/*$trade_union_details = db_select('l_trade_union_application_master','t')->fields('t',array('id','tu_existence_date'))->condition('user_id',$user->uid)->execute()->fetchAssoc();*/ 
	//$application_id	= $trade_union_details['id'];
	
	$tu_s_t_l_v_11 = db_select($table_name,'lt');
	$tu_s_t_l_v_11->fields('lt', array());
	$tu_s_t_l_v_11->condition('lt.user_id', $user->uid);
	$tu_s_t_l_v_11->condition('lt.application_id', $application_id);
	$tu_s_t_l_v_11->condition('lt.assets_or_liabilities', $assets_liabilities);
	$tu_s_t_l_v_11->condition('lt.application_type', 'ANRN');
	$tu_s_t_l_v_11->condition('lt.status', 'Y');
	$tu_s_t_l_v_11->condition('lt.current_yr', $current_yr);
	$tu_s_t_l_v_11->orderBy('lt.id', 'ASC');
	$tu_s_t_l_v_11-> condition('lt.field_id', $field_id);
	$tu_s_t_l_v_11_r = $tu_s_t_l_v_11 ->execute();	 
						$content.=	'<table>';
	if($tu_s_t_l_v_11_r->rowCount() > 0){
		foreach($tu_s_t_l_v_11_r as $data){				
						$content.= '<tr><td>'.$data->details.'</td> <td>'.$data->amount.'</td></tr>';
		}
	}
	return $content;
}

function get_tu_profit_loss_sub_table_value($table_name,$title_id,$reg_id,$wizard_id){
	global $user; 
	
	$tu_s_t_l_v_11 = db_select($table_name,'t');
	$tu_s_t_l_v_11->fields('t', array());
	$tu_s_t_l_v_11->condition('t.user_id', $user->uid);
	$tu_s_t_l_v_11->condition('t.reg_id', $reg_id);
	$tu_s_t_l_v_11->condition('t.wizard_id', $wizard_id);
	$tu_s_t_l_v_11->condition('t.status', 1);
	$tu_s_t_l_v_11->orderBy('t.id', 'ASC');
	$tu_s_t_l_v_11-> condition('t.title_id', $title_id);
	$tu_s_t_l_v_11_r = $tu_s_t_l_v_11 ->execute();	 
						$content.=	'<table>';
	if($tu_s_t_l_v_11_r->rowCount() > 0){
		foreach($tu_s_t_l_v_11_r as $data){				
						$content.= '<tr><td>'.$data->decs.'</td> <td>'.$data->amount.'</td></tr>';
		}
	}
	$content .= '</table>';
	return $content;
}
function escapefile_url($url){
  $parts = parse_url($url);
  $path_parts = array_map('rawurldecode', explode('/', $parts['path']));

  return
    $parts['scheme'] . '://' .
    $parts['host'] .
    implode('/', array_map('rawurlencode', $path_parts))
  ;
}

function encrypt_swold($text){
	$salt = 'gbRicNlJN7r50WVb';  // encryption key
	$iv   = 'gbRicNlJN7r50WVb';  // encryption key
		
	$text = serialize($text);
	
	return base64_encode($text);
}

function decrypt_swold($text){
	$salt = 'gbRicNlJN7r50WVb';  // encryption key
  	$iv   = 'gbRicNlJN7r50WVb';  // encryption key

  	return unserialize(base64_decode($text)); 
}

function convertString($string = ''){
	$string = strtolower(trim($string));
	$string = str_replace(' ', '', $string);
	$string = str_replace(' ', '', $string);
	$string = str_replace(' ', '', $string);
	return $string;
}
function fetch_documents_status_or_url($user_id='', $act_id='', $application_id='', $doc_type='',$fid=''){ 
	$uploaded_file = db_select('l_encrypted_uploaded_documents','l');
	$uploaded_file->fields('l',array('filecontent','filename'));
	$uploaded_file->condition('user_id',$user_id);
	$uploaded_file->condition('application_id',$application_id);
	$uploaded_file->condition('act_id',$act_id);
	$uploaded_file->condition('document_type_code',$doc_type);
	$uploaded_file->condition('status','1');
	$uploaded_file = $uploaded_file->execute()->fetchAssoc(); 
	if(!empty($uploaded_file)){
		return 1; 
	}else{
		$uploaded_file = db_select('file_managed','fm');
		$uploaded_file -> fields('fm',array());
		$uploaded_file -> condition('fm.fid',$fid,'=');
		$uploaded_file = $uploaded_file -> execute()->fetchAssoc();
		
		if(!empty($uploaded_file)){ 
				$url = explode('//',$uploaded_file['uri']);
				$file_url = $url[1];
				return $file_url;
		}else{
				return 0;
		}
		
	}

}

function common_custom_affiliation_name() {
	$default_select = array(""=>"- Select Affiliation Name -");
	$result = db_query("SELECT name FROM {l_ctu_master} where  is_active = 'Y' and (type='WT'OR type='AT') and is_canceled=0 order by name asc");
	$list = array();
	foreach ($result as $record) {
		$list[$record->name] = t('@name', array(
			'@name' => $record->name,
		));
	}
	//$other_select = array("Others"=>"Others");
	//$no_affiliation_select = array("no_affiliation"=>"No Affiliation");
	
	return ($default_select+$list);
}

function common_deemed_update_status($act_id_en = '', $application_id_en = '', $application_userid_en = ''){ 
	
	global $user, $base_path, $base_root;
	
	$applicant_user_id  = encryption_decryption_fun('decrypt', $application_userid_en); 
	$act_id				= encryption_decryption_fun('decrypt', $act_id_en); 
	$application_id		= encryption_decryption_fun('decrypt', $application_id_en); 
	
	// RLO code added on 19/03/2024

	if($act_id == 1){ 
	
		$getLatestRemark  = check_final_submit_data(encryption_decryption_fun('encrypt', 1), encryption_decryption_fun('encrypt', $application_id));//miscellaneous.module	
		
		
		if(!empty($getLatestRemark) && $getLatestRemark['remark_type']=='S'){
			
			$final_submit_date 	= $getLatestRemark['remark_date']; //echo date('Y-m-d h:i:s',$getLatestRemark['remark_date']).'<br/>';
			$today 				= time();
			$thirtydays 		= strtotime('+30 days',$final_submit_date);
			$dateThirtydays 	= date('Y-m-d h:i:s',$thirtydays); //echo date('Y-m-d h:i:s',$thirtydays).'<br/>';
			$datethirtyonethDay = date('Y-m-d',$thirtydays);
			
			
			$get_clra_application	=	db_select('l_clra_registration_master', 'clra');
			$get_clra_application	->  leftJoin('l_customuser_relation_address', 'lcra','lcra.sub_div_code=clra.loc_e_subdivision ');
			$get_clra_application	->	fields('clra',array('loc_e_subdivision','name_areatype','registration_number','clra_qr_code','amendment_parent_id','identification_number'));
			$get_clra_application	->	fields('lcra',array('sub_div_code'));
			$get_clra_application	->	condition('clra.id',$application_id);
			$get_clra_application	->	condition('clra.user_id',$applicant_user_id);

			$get_clra_application_result = 	$get_clra_application->execute();  

			if($get_clra_application_result-> rowCount() > 0 ){	
				$applicant_data_clra 		= 	$get_clra_application_result->fetchAssoc();
				$subdivision_code			=   $applicant_data_clra['loc_e_subdivision']; 
				$area_code					=   $applicant_data_clra['name_areatype'];
				$clra_registration_number	=   $applicant_data_clra['registration_number'];
				$clra_qr_code				=   $applicant_data_clra['clra_qr_code']; 
				$alc_subdiv_code			=   $applicant_data_clra['sub_div_code']; 
				$cafId						= 	$applicant_data_clra['identification_number'];

			}
			
			if($applicant_data_clra['amendment_parent_id']!=''){  //FOR AMENDMENT PE CLRA REGISTRATION STATUS UPDATION FOR DEEMED
				
				 $get_amended_fields = db_select('l_clra_amendment', 'lca');
				 $get_amended_fields ->fields('lca', array('amendment_fields','not_amended_fields','flag'));
				 $get_amended_fields ->condition('lca.application_id', $applicant_data_clra['amendment_parent_id']);
				 $get_amended_fields ->condition('lca.status', 1);
				 $get_amended_fields ->orderBy('lca.id','DESC');
				 $get_amended_fields ->range(0, 1);
				 $amended_fields_result  = $get_amended_fields->execute()->fetchAssoc();
				 
				 if(!empty($amended_fields_result)){
		 
					$amendedFields 		= $amended_fields_result['amendment_fields'];
					$notAmendedFields 	= $amended_fields_result['not_amended_fields'];
					
					$chkSubdivision		= db_query('select loc_e_subdivision from l_clra_registration_master where id ='.$applicant_data_clra['amendment_parent_id'])->fetchAssoc();
					$previousSubdv		= $chkSubdivision['loc_e_subdivision'];
					
					$currentApplicationDetails = db_query("select id, status, amendment_parent_id,full_name_principal_emp, loc_e_name, loc_e_dist,loc_e_subdivision,loc_e_areatype,name_areatype,loc_e_vill_ward,l_e_ps, loc_e_pin_number FROM l_clra_registration_master WHERE user_id ='".$applicant_user_id."' and id=".$application_id)->fetchAssoc();
					
					$currentsubdivision_code	=   $currentApplicationDetails['loc_e_subdivision'];
					$currentarea_code			=   $currentApplicationDetails['name_areatype'];
					
					if(!empty($currentApplicationDetails)){
					
							if(trim($previousSubdv)!= trim($currentsubdivision_code)){
						 
								$amendedFieldArray 	= explode(",",$amendedFields); 
								if( (in_array('e_location',$amendedFieldArray)) &&  $amended_fields_result['flag'] == 'D'){
						
								/*** GENERATION OF CLRA REGISTRATION NUMBER ***/
							
								$getShortNameSubdivision 	= custom_user_short_name_fun($currentsubdivision_code);  
								$getRegistrarCode			= get_registration_code($currentarea_code);             
								$registrarCode 				= substr($getRegistrarCode, -2);
								
								$reg_query	=	db_query("select max (NULLIF(substr(registration_number,11,6), '') :: integer) as serial_num  from l_clra_registration_master where loc_e_subdivision='".$currentsubdivision_code."'");
								$reg_query_result			= $reg_query->fetchAssoc();
								$reg_code					= (int)$reg_query_result['serial_num'];	
								$reg_code_next				= $reg_code+1;
								$reg_first					= $getShortNameSubdivision.$registrarCode.'/'.'CLR'.'/';
								$reg_second					= str_pad($reg_code_next, 6, "0", STR_PAD_LEFT);
								$registration_number		= $reg_first.$reg_second;
								
								}
							}else{ 
								$previousRegistrationDetails = db_query("select id, status, registration_number FROM l_clra_registration_master WHERE user_id = '".$applicant_user_id."' and status= 'I' order by id desc limit 1")->fetchAssoc();
								$registration_number		= $previousRegistrationDetails['registration_number'];	
							}
					}
				}				
						
				 $generated_qr_code		   = 'CLRA-AMEND'.$application_id.'A1U'.$applicant_user_id.'T'.time();  /*** GENERATION OF QR CODE ****/
				 				 
				 $amendment_reference_no   = 'AMEND-'.$application_id.'-00'.$applicant_data_clra['amendment_parent_id'].'-'.$applicant_user_id;  /*** GENERATION OF AMENDMENT REFERENCE NUMBER *****/
				 
				/*** Update Status of CLRA Master Table ***/

				
				
				$update_status  =  db_update('l_clra_registration_master');
				$update_status->fields(array('amendment_reference_no' => $amendment_reference_no,'amendment_date' => $datethirtyonethDay,'registration_number' =>$registration_number,'clra_qr_code' =>$generated_qr_code,'status' =>'I','deemed'=>'Y'));
				$update_status->condition('id',$application_id);
				$update_status->condition('user_id',$applicant_user_id);
				$update_status->execute();
				
				$frm_v_gen 					=  	db_update('l_contractor_info_master');
				$frm_v_gen					->	fields(array('is_from_v'  => 1));
				$frm_v_gen					->	condition('application_id',$application_id);
				$frm_v_gen					->	condition('user_id',$applicant_user_id);
				$frm_v_gen					->	execute();
				
				$total_fieldname 			= $notAmendedFields;
				$msg = 'Congratulations! Your CLRA Amendment certificate is issued by ALC(Govt. of WB). Login to download the certificate from dashboard (wblc.gov.in). Labour Commissionerate, WB';
				
				
			}else{  
				
				//FOR PE CLRA REGISTRATION STATUS UPDATION FOR DEEMED
	
				if (empty($clra_registration_number) && empty($clra_qr_code)){
					
					$clra_qr_code = 'CLRA-REG'.$application_id.'A1U'.$applicant_user_id.'T'.time();
					
					/***** Registration number create *****/	
					$reg_date = date('m/d/Y h:i:s a', time());			
	
					$query_Is_reg_code 		 		= 	db_select('l_clra_registration_master', 'lcrm');
					$query_Is_reg_code				->	fields('lcrm',array('registration_number'));
					$query_Is_reg_code				->	condition('lcrm.registration_number','NULL','!=')
													->	orderBy('lcrm.id', 'DESC')
													->	range(0,1);
					$query_Is_reg_code_result 		= 	$query_Is_reg_code->execute()->fetchObject()->registration_number;	
	
					$getShortName 				    =   custom_user_short_name_fun($subdivision_code);  // ---------come from custom_user module  
					$getRloShortCode 				=  	get_rlo_short_code($area_code); // added on 27/03/2024
					$reg_code						=	get_registration_code($area_code);//-------------miscellaneous module
					$getBlockCodeRes 				=   substr($reg_code, -2);
	
					if(empty($query_Is_reg_code_result)){
						$reg		=	$getRloShortCode.$getBlockCodeRes.'/'.'CLR'.'/'.'000001';
					}else{		
	
						$reg_query		=	db_query("select  max (NULLIF(substr(registration_number,11,6),'') :: integer) as serial_num from l_clra_registration_master where loc_e_subdivision=".$subdivision_code."");
						$x				=	$reg_query->fetchAssoc();
	
						if(empty($reg_code)){
							// $reg		=	$getShortName.$getBlockCodeRes.'/'.'CLR'.'/'.'000001';
							$reg		=	$getRloShortCode.$getBlockCodeRes.'/'.'CLR'.'/'.'000001';
						}else{
							$reg_code_next			= 	$reg_code+1;
							// $reg_firts				=	$getShortName.$getBlockCodeRes.'/'.'CLR'.'/';
							$reg_firts				=	$getRloShortCode.$getBlockCodeRes.'/'.'CLR'.'/'; // added on 27/03/2024
							$reg_second				=	str_pad($reg_code_next, 6, "0", STR_PAD_LEFT);
							$registrationNo			=	$reg_firts.$reg_second;
						}
					}


					$checkRegistrationNoclra	=	db_query("select id,registration_number from l_clra_registration_master where registration_number='".$registrationNo."'")->fetchAssoc();

			 		if(empty($checkRegistrationNoclra)){
						$frm_v_gen = db_update('l_contractor_info_master');
						$frm_v_gen->fields(array('is_from_v'  => 1));
						$frm_v_gen->condition('application_id',$application_id);
						$frm_v_gen->condition('user_id',$applicant_user_id);
						$frm_v_gen->execute();
		
						$reg = array('registration_number'=>$registrationNo,'registration_date'=>$dateThirtydays,'clra_qr_code' =>$clra_qr_code,'status'=>'I','deemed'=>'Y');
						$reg_update =  db_update('l_clra_registration_master');
						$reg_update->fields($reg);
						$reg_update->condition('user_id',$applicant_user_id);
						$reg_update->condition('id',$application_id);
						$reg_update->execute();
						
						$msg = 'Congratulations! Your CLRA Registration certificate is issued by ALC(Govt. of WB). Login to download the certificate from dashboard (wblc.gov.in). Labour Commissionerate, WB';
					}else{
						send_mail_for_user_alert('wblc.nic@gmail.com', 'Duplicate Reg No Generated on Deemed CLRA', 'Application_id :'.$application_id.'Generated Registration Number :'.$registration_number.'Mobile :'.$applicant_mobile_no);
					}
				}else{
					
					$frm_v_gen = db_update('l_contractor_info_master');
					$frm_v_gen->fields(array('is_from_v'  => 1));
					$frm_v_gen->condition('application_id',$application_id);
					$frm_v_gen->condition('user_id',$applicant_user_id);
					$frm_v_gen->execute();
	
					$reg = array('registration_date'=>$dateThirtydays,'status'=>'I','deemed'=>'Y');
					$reg_update =  db_update('l_clra_registration_master');
					$reg_update->fields($reg);
					$reg_update->condition('user_id',$applicant_user_id);
					$reg_update->condition('id',$application_id);
					$reg_update->execute();
					
					$msg = 'Congratulations! Your CLRA Registration certificate is issued by ALC(Govt. of WB). Login to download the certificate from dashboard (wblc.gov.in). Labour Commissionerate, WB';	
				}
			}
			
			
			$query		= db_select('l_remarks_master', 'rm');
			$query		->fields('rm',array());
			$query		->condition('rm.application_id', $application_id);
			$db_or 		= db_or();
			$db_or		->condition('rm.remark_type', 'V');
			$db_or		->condition('rm.remark_type', 'VA');
			$query		->condition($db_or);
			$query		->range(0,1)	;		
			$query		->orderBy('rm.remark_id','DESC');
			$result 	= $query->execute()->fetchAssoc();
			
			$alcuserId 		= $result['remark_by'];			
			$getEmployeeid 	= db_select('l_custom_user_detail','cd')->fields('cd',array('employee_id','fullname'))->condition('usr_id',$alcuserId)->execute()->fetchAssoc();
			
	
			$remark_details  =  array(
				'remarks'   		=> 'Congratulations! Certificate is issued by the Registering Authority. You can download it from the dashboard.',
				'remark_by'   		=> $result['remark_by'], 
				'remark_to' 		=> $applicant_user_id,
				'application_id' 	=> $application_id,
				'remark_date'  		=> $thirtydays,
				'remark_type' 		=> 'I',
				'remark_by_name'    => $getEmployeeid['fullname'],
				'remark_field_text' => $result['remark_field_text'].$total_fieldname,
				'remark_by_role' 	=> '4',
				'hrms_employee_id'  => $getEmployeeid['employee_id'],
				'deemed_on'			=> date('Y-m-d')
			);
	
			db_insert('l_remarks_master')->fields($remark_details)->execute();
			
		     /*********************************************/
				//sms
			/*********************************************/
				
			$applicant_mobile_no = get_mobile_number($applicant_user_id);
			$fetchCommonId = db_select('l_common_application_master', 'cam');
			$fetchCommonId->fields('cam', array('id','email','ldapplicationflag'));
			$fetchCommonId->condition('cam.user_id', $applicant_user_id);
			$commonId = $fetchCommonId->execute()->fetchAssoc();
			
			$mailto  = trim($commonId['email']);
			
			$template_id = 1107161520461049092;	
			send_sms_for_user_alert($applicant_mobile_no, $msg,$template_id);	
			$subject = 'Welcome to Labour Commissionerate, Govt. Of West Bengal';
			send_mail_for_user_alert($mailto, $subject, $message);		
			

			if($commonId['ldapplicationflag'] == 8){ 
				
				db_update('users')->fields(array('status'=>1))->condition('status',0)->condition('uid',$applicant_user_id)->execute();
				$msg = 'Your CLRA PE registration certificate is issued by ALC(Govt. of WB). Login to download the certificate from dashboard.<br>You may avail the Amendment and the other services from <strong><a href="'.$base_root.$base_path.'">wblc.gov.in</a></strong><br/><br/> <strong></strong>Username :'.$cafId.'<br/><br/>Also, you may find your user credentials from <a href="'.$base_root.$base_path.'find-user-details">CLICK HERE</a> with your application information. You can generate your password from <a href="'.$base_root.$base_path.'forgot-password">Forgot your password</a> ';
				send_mail_for_user_alert($mailto, $subject, $msg);
				send_mail_for_user_alert('wblc.nic@gmail.com', $subject, $msg);			
				
		    }
			
		}
			
	}

	if($act_id == 2){ 
		
		$applicant_mobile_no = get_mobile_number($applicant_user_id);
	
		$getLatestRemark  = check_final_submit_data(encryption_decryption_fun('encrypt', 2), encryption_decryption_fun('encrypt', $application_id));//miscellaneous.module	
			
		if(!empty($getLatestRemark) && $getLatestRemark['remark_type']=='S'){
			
			$final_submit_date 	= $getLatestRemark['remark_date']; //echo date('Y-m-d h:i:s',$getLatestRemark['remark_date']).'<br/>';
			$today 				= time();
			$thirtydays 		= strtotime('+30 days',$final_submit_date);
			$dateThirtydays 	= date('Y-m-d h:i:s',$thirtydays); //echo date('Y-m-d h:i:s',$thirtydays).'<br/>';
			$datethirtyonethDay = date('Y-m-d',$thirtydays);
			
			
			$get_bocwa_application	=	db_select('l_bocwa_registration_master', 'lbrm');
			$get_bocwa_application	->  leftJoin('l_customuser_relation_address', 'lcra','lcra.sub_div_code=lbrm.loc_e_subdivision ');
			$get_bocwa_application	->	fields('lbrm',array('loc_e_subdivision','loc_e_areatype_code','registration_number','bocwa_qr_code'));
			$get_bocwa_application	->	fields('lcra',array('sub_div_code'));
			$get_bocwa_application	->	condition('lbrm.id',$application_id);
			$get_bocwa_application	->	condition('lbrm.user_id',$applicant_user_id);
			
			$get_bocwa_application_result 					= 	$get_bocwa_application->execute();  

			if($get_bocwa_application_result-> rowCount() > 0 ){
		
				$applicant_data 							= 	$get_bocwa_application_result->fetchAssoc();
				$subdivision_code							=   $applicant_data['loc_e_subdivision'];
				$area_code									=   $applicant_data['loc_e_areatype_code'];
				$bocwa_registration_number					=   $applicant_data['registration_number'];
				$bocwa_qr_code								=   $applicant_data['bocwa_qr_code']; 
				$alc_subdiv_code							=   $applicant_data['sub_div_code']; 
						
			}
			

			if (empty($bocwa_registration_number) && empty($bocwa_qr_code)){
					/*** GENERATION OF QR CODE ****/
			
			 $generated_qr_code					= 'BOCWA-REG'.$application_id.'A2U'.$applicant_user_id.'T'.time();
		
			 /*** GENERATION OF BOCWA REGISTRATION NUMBER ***/
			 
			 //$getShortNameSubdivision 			=   custom_user_short_name_fun($subdivision_code);  // ---------custom_user module 
			 $getRloShortCode 					=  get_rlo_short_code($area_code); 

			 $getRegistrarCode					=	get_registration_code($area_code);              //-------------miscellaneous module
			 $registrarCode 					=   substr($getRegistrarCode, -2);			 
			
			 $reg_query	=	db_query("select max (NULLIF(substr(registration_number,11,6), '') :: integer) as serial_num  from l_bocwa_registration_master where loc_e_subdivision='".$subdivision_code."'");
			 $reg_query_result					=	$reg_query->fetchAssoc();
			 $reg_code							=	(int)$reg_query_result['serial_num'];
			 
			 if(empty($reg_code)){ 
				 
				$registration_number		=	$getRloShortCode.$registrarCode.'/'.'BCR'.'/'.'000001';
 
			 }else{
				   $reg_code_next			= 	$reg_code+1;
				   $reg_first				=	$getRloShortCode.$registrarCode.'/'.'BCR'.'/';
				   $reg_second				=	str_pad($reg_code_next, 6, "0", STR_PAD_LEFT);
				   $registration_number	=	$reg_first.$reg_second;
				  
			 }
			
			 $checkRegistrationNo	=	db_query("select id,registration_number from l_bocwa_registration_master where registration_number='".$registration_number."'")->fetchAssoc();

			 if(empty($checkRegistrationNo)){
				$update_status  =  db_update('l_bocwa_registration_master');
				$update_status->fields(array('bocwa_qr_code' => $generated_qr_code, 'registration_number' => $registration_number, 'registration_date' => $datethirtyonethDay,'status' =>'I','deemed'=>'Y'));
				$update_status->condition('id',$application_id);
				$update_status->condition('act_id',$act_id);
				$update_status->condition('user_id',$applicant_user_id);
				$update_status->execute();
			
				$msg = 'Congratulations! Your BOCWA registration certificate is issued by ALC(Govt. of WB). Login to download the certificate from dashboard (wblc.gov.in). Labour Commissionerate, WB';
			 }else{
				send_mail_for_user_alert('wblc.nic@gmail.com', 'Duplicate Reg No Generated on Deemed BOCWA', 'Application_id :'.$application_id.'Generated Registration Number :'.$registration_number.'Mobile :'.$applicant_mobile_no);	
			 }

		
		}else{
				
			$update_status  =  db_update('l_bocwa_registration_master');
			$update_status->fields(array('registration_date' => $datethirtyonethDay,'status' =>'I','deemed'=>'Y'));
			$update_status->condition('id',$application_id);
			$update_status->condition('act_id',$act_id);
			$update_status->condition('user_id',$applicant_user_id);
			$update_status->execute();	
				
		}
			
		$query		= db_select('l_bocwa_remark_master', 'rm');
		$query		->fields('rm',array());
		$query		->condition('rm.application_id', $application_id);
		$db_or 		= db_or();
		$db_or		->condition('rm.remark_type', 'V');
		$db_or		->condition('rm.remark_type', 'VA');
		$query		->condition($db_or);
		$query		->range(0,1)	;		
		$query		->orderBy('rm.id','DESC');
		$result 	= $query->execute()->fetchAssoc();
				
		
		$alcuserId 		= $result['remark_by'];			
		$getEmployeeid 	= db_select('l_custom_user_detail','cd')->fields('cd',array('employee_id','fullname'))->condition('usr_id',$alcuserId)->execute()->fetchAssoc();
		

		$remark_details  =  array(
			'remark_text'   	=> 'Congratulations! Certificate is issued by the Registering Authority. You can download it from the dashboard.',
			'remark_by'   		=> $result['remark_by'], 
			'remark_to' 		=> $applicant_user_id,
			'application_id' 	=> $application_id,
			'remark_date'  		=> $thirtydays,
			'remark_type' 		=> 'I',
			'remark_by_name'    => $getEmployeeid['fullname'],
			'remark_field_title'=> $result['remark_field_title'],
			'remark_by_role' 	=> '4',
			'emp_id'  			=> $getEmployeeid['employee_id'],
			'deemed_on'			=> date('Y-m-d')
		);

		db_insert('l_bocwa_remark_master')->fields($remark_details)->execute();
		
		 /*********************************************/
			//sms
		/*********************************************/
			
		
		$fetchCommonId = db_select('l_common_application_master', 'cam');
		$fetchCommonId->fields('cam', array('id','email'));
		$fetchCommonId->condition('cam.user_id', $applicant_user_id);
		$commonId = $fetchCommonId->execute()->fetchAssoc();
		
		$mailto  = trim($commonId['email']);
		
		$template_id = 1107161520461049092;	
		send_sms_for_user_alert($applicant_mobile_no, $msg,$template_id);
		//send_sms_for_user_alert('7278989577', $msg,$template_id); 
	
		$subject = 'Welcome to Labour Commissionerate, Govt. Of West Bengal';
		send_mail_for_user_alert($mailto, $subject, $message);	
			
		}
			
	}
	
	if($act_id == 3){
		$getLatestRemark  = check_final_submit_data(encryption_decryption_fun('encrypt', 3), encryption_decryption_fun('encrypt', $application_id));//miscellaneous.module	
			
		if(!empty($getLatestRemark) && $getLatestRemark['remark_type']=='S'){
			$final_submit_date 	= $getLatestRemark['remark_date']; //echo date('Y-m-d h:i:s',$getLatestRemark['remark_date']).'<br/>';
			$today 				= time();
			$thirtydays 		= strtotime('+30 days',$final_submit_date);
			$dateThirtydays 	= date('Y-m-d h:i:s',$thirtydays); //echo date('Y-m-d h:i:s',$thirtydays).'<br/>';
			$datethirtyonethDay = date('Y-m-d',$thirtydays);
			
			
			/*** Get Applicant Block Code & Statuses & ALC Details ****/
	
			$get_mtw_application =	db_select('l_mtw_registration_master', 'lbrm');
			$get_mtw_application->  leftJoin('l_customuser_relation_address', 'lcra','lcra.sub_div_code=lbrm.mtw_loc_subdivision ');
			$get_mtw_application->	fields('lbrm',array('mtw_loc_subdivision','mtw_loc_areatype_code','registration_number','mtw_qr_code'));
			$get_mtw_application->	fields('lcra',array('sub_div_code'));
			$get_mtw_application->	condition('lbrm.id',$application_id);
			$get_mtw_application->	condition('lbrm.user_id',$applicant_user_id);
			
			$get_mtw_application_result = 	$get_mtw_application->execute();
			
			if($get_mtw_application_result-> rowCount() > 0 ){
				
				$applicant_data 							= 	$get_mtw_application_result->fetchAssoc();
				$subdivision_code							=   $applicant_data['mtw_loc_subdivision'];
				$area_code									=   $applicant_data['mtw_loc_areatype_code'];
				$mtw_registration_number					=   $applicant_data['registration_number'];
				$mtw_qr_code								=   $applicant_data['mtw_qr_code']; 
				$alc_subdiv_code							=   $applicant_data['sub_div_code']; 
				
				
			}
			
			if (empty($mtw_registration_number) && empty($mtw_qr_code)){
					/*** GENERATION OF QR CODE ****/
					
					 $generated_qr_code					= 'MTW-REG'.$application_id.'A3U'.$applicant_user_id.'T'.time(); 
				
					/*** GENERATION OF MTW REGISTRATION NUMBER ***/			
					
					
					$getShortNameSubdivision 			=   custom_user_short_name_fun($subdivision_code);  // ---------come from custom_user module  

					$getRloShortCode 					=  	get_rlo_short_code($area_code); // added on 27/03/2024
					$getRegistrarCode					=	get_registration_code($area_code);              //-------------miscellaneous module
					$registrarCode 						=   substr($getRegistrarCode, -2);
					
					
					$chkdata							=	db_query("select registration_number from l_mtw_registration_master where id=(select MAX(id) from l_mtw_registration_master where registration_number!='');");
					
					if($chkdata->rowCount()>0){
						$chkquery						=	$chkdata->fetchObject();
						$reg_data						=	$chkquery->registration_number;
					
					}else{
						$reg_data						= 	'';
					}
					
					
					if(empty($reg_data)){ 
						// $registration_number	=	$getShortNameSubdivision.$registrarCode.'/'.'MTW'.'/'.'000001';
						$registration_number	=	$getRloShortCode.$registrarCode.'/'.'MTW'.'/'.'000001';
						$certificate_serial_no	=	'C/'.$alc_subdiv_code.'/'.date('Y').'/1';	
		
					}else{
						$reg_query				=	db_query("select  max (NULLIF(substr(registration_number,11,6),'') :: integer) as serial_num  from l_mtw_registration_master where mtw_loc_subdivision='".$alc_subdiv_code."'");
						
						$reg_query_result		=	$reg_query->fetchAssoc();
						
						$reg_code				=	$reg_query_result['serial_num'];
						$reg_code_next			= 	$reg_code+1; 
						// $reg_first				=	$getShortNameSubdivision.$registrarCode.'/'.'MTW'.'/';
						$reg_first				=	$getRloShortCode.$registrarCode.'/'.'MTW'.'/'; // added on 27/03/2024
						
						$reg_second				=	str_pad($reg_code_next, 6, "0", STR_PAD_LEFT);
						$registration_number	=	$reg_first.$reg_second;
						$certificate_serial_no	=	'C/'.$alc_subdiv_code.'/'.date('Y').'/'.$reg_code_next;	
					}
					
					
					/*** Update Status of mtw Master Table ***/ 
					$checkRegistrationNomtw	=	db_query("select id,registration_number from l_mtw_registration_master where registration_number='".$registration_number."'")->fetchAssoc();

					if(empty($checkRegistrationNomtw)){
					
						$update_status =  db_update('l_mtw_registration_master');
						$update_status->fields(array('mtw_qr_code' => $generated_qr_code, 'registration_number' =>	$registration_number, 'registration_date' => $datethirtyonethDay, 'certificate_serial' => $certificate_serial_no,'expiry_date'=>date("Y").'-12-31','status'=>'I','deemed'=>'Y'));
						$update_status->condition('id',$application_id);
						$update_status->condition('user_id',$applicant_user_id);
						$update_status->execute();
						
						/* Renewal section start*/
						$dataQuery			=	db_select('l_mtw_registration_master','lmrm');
						$dataQuery->fields('lmrm',array('registration_date','mtw_registration_certificate','finalfees','application_date'));
						$dataQuery->condition('id',$application_id);
						$dataEx 			=	$dataQuery->execute();
						
						if($dataEx->rowCount()>0){
							$dataArr			=	$dataEx->fetchObject();
							
							$application_date	=	$dataArr->application_date;
							$registration_date	= 	$dataArr->registration_date;
							$previous_fees		=	$dataArr->finalfees;
							$prvCertificate		=	$dataArr->mtw_registration_certificate;
							
							// store data first time in renewal table
							$upNewalPrvData	=	array(
								'previous_fees' 		=>	0,
								'current_fees' 			=>	$previous_fees,
								'final_fees' 			=>	$previous_fees,
								'purpose'				=>  'registration',
								'mtw_qr_code'			=>	$generated_qr_code,
								'mtw_registration_certificate'=> trim($prvCertificate),
								'application_id'	 	=>  $application_id,
								'application_date'		=> 	$application_date, 		// Applicant apply date
								'renewal_ref_number' 	=>  'MTW-REG-'.$application_id.'-'.time(),
								'renewal_date'			=>	$datethirtyonethDay,
								'expiry_date' 			=>  date("Y").'-12-31',
								'status'				=>	'I'
							); 
							//print_r($insertNewalPrvData);
							db_update('l_mtw_registration_renewal')->fields($upNewalPrvData)->condition('application_id',$application_id)->condition('status','V')->execute();
							//db_insert('l_mtw_registration_renewal')->fields($insertNewalPrvData)->execute();
						}
						
						$query		= db_select('l_mtw_remark_master', 'rm');
						$query		->fields('rm',array());
						$query		->condition('rm.application_id', $application_id);
						$db_or 		= db_or();
						$db_or		->condition('rm.remark_type', 'V');
						$db_or		->condition('rm.remark_type', 'VA');
						$query		->condition($db_or);
						$query		->range(0,1)	;		
						$query		->orderBy('rm.id','DESC');
						$result 	= $query->execute()->fetchAssoc();
					
					$alc_user_id 			= $result['remark_by'];	
					$ref_number				= $result['ref_number'];	
					$renewal_id_val			= $result['renewal_id'];
					$getEmployeeid 			= db_select('l_custom_user_detail','cd')->fields('cd',array('employee_id','fullname'))->condition('usr_id',$alc_user_id)->execute()->fetchAssoc();
					$alc_full_name			= $getEmployeeid['fullname'];	
					$employee_id			= $getEmployeeid['employee_id'];
					
					$fieldsApplInfo2  =  array(
						'remark_text'   		=> 'Congratulations! Certificate is issued by the Registering Authority. You can download it from the dashboard.',  
						'remark_by'   			=> $alc_user_id, 
						'remark_to' 			=> $applicant_user_id,
						'application_id' 		=> $application_id,
						'remark_date'  			=> $thirtydays,
						'remark_type' 			=> 'I',
						'remark_by_name'    	=> $alc_full_name,
						'remark_field_title' 	=> $result['remark_field_text'],
						'remark_by_role' 		=> 4,
						'employee_id'			=> $employee_id,
						'deemed_on'				=> date('Y-m-d'),
						'ref_number'			=> $ref_number,
						'renewal_id'			=> $renewal_id_val
					);
		
					db_insert('l_mtw_remark_master')->fields($fieldsApplInfo2)->execute();
				}else{
					send_mail_for_user_alert('wblc.nic@gmail.com', 'Duplicate Reg No Generated on Deemed MTW', 'Application_id :'.$application_id.'Generated Registration Number :'.$registration_number.'Mobile :'.$applicant_mobile_no);
				}
			
			}
		}
	}
	
	if($act_id == 4){
		
		$getLatestRemark  = check_final_submit_data(encryption_decryption_fun('encrypt', 4), encryption_decryption_fun('encrypt', $application_id));//miscellaneous.module	
			
		if(!empty($getLatestRemark) && $getLatestRemark['remark_type']=='S'){
			
			$final_submit_date 	= $getLatestRemark['remark_date']; //echo date('Y-m-d h:i:s',$getLatestRemark['remark_date']).'<br/>';
			$today 				= time();
			$thirtydays 		= strtotime('+30 days',$final_submit_date);
			$dateThirtydays 	= date('Y-m-d h:i:s',$thirtydays); //echo date('Y-m-d h:i:s',$thirtydays).'<br/>';
			$datethirtyonethDay = date('Y-m-d',$thirtydays);
			
			$ismw_application				=	db_select('l_interstate_workman_master', 'lbrm');
			$ismw_application				->  leftJoin('l_customuser_relation_address', 'lcra','lcra.sub_div_code=lbrm.loc_e_subdivision ');
			$ismw_application				->	fields('lbrm',array('loc_e_subdivision','loc_e_areatype_code','registration_number','iwm_qr_code','identification_number'));
			$ismw_application				->	fields('lcra',array('sub_div_code'));
			$ismw_application				->	condition('lbrm.id',$application_id);
			$ismw_application				->	condition('lbrm.user_id',$applicant_user_id);
			$ismw_application_result 		= 	$ismw_application->execute();
			
			if($ismw_application_result-> rowCount() > 0 ){
		
				$applicant_data 							= 	$ismw_application_result->fetchAssoc();
				$subdivision_code							=   $applicant_data['loc_e_subdivision'];
				$area_code									=   $applicant_data['loc_e_areatype_code'];
				$ismw_registration_number					=   $applicant_data['registration_number'];
				$ismw_qr_code								=   $applicant_data['iwm_qr_code']; 
				$alc_subdiv_code							=   $applicant_data['sub_div_code'];
				$identification_number						=   $applicant_data['identification_number']; 		
			}
			
			if (empty($ismw_registration_number) && empty($ismw_qr_code)){
		
				/*** GENERATION OF QR CODE ****/			
				
				 $generated_qr_code					= 'ISMW-REG'.$application_id.'A4U'.$applicant_user_id.'T'.time();		
			
				/*** GENERATION OF ISMW REGISTRATION NUMBER ***/
				
				
				$getShortNameSubdivision 			=   custom_user_short_name_fun($subdivision_code);  // ---------come from custom_user module  
				$getRloShortCode 					=  	get_rlo_short_code($area_code); // added on 27/03/2024
				$getRegistrarCode					=	get_registration_code($area_code);              //-------------miscellaneous module
				$registrarCode 						=   substr($getRegistrarCode, -2);
				
				$reg_query							=	db_query("select  max (NULLIF(substr(registration_number,11,6),'') :: integer) as serial_num  from l_interstate_workman_master where loc_e_subdivision='".$alc_subdiv_code."'");
				$reg_query_result					=	$reg_query->fetchAssoc();
				$reg_code							=	$reg_query_result['serial_num'];
				
				if(empty($reg_code)){ 
					// $registration_number	=	$getShortNameSubdivision.$registrarCode.'/'.'IMR'.'/'.'000001';
					$registration_number	=	$getRloShortCode.$registrarCode.'/'.'IMR'.'/'.'000001';
				}else{
					$reg_code_next			= 	$reg_code+1; 
					// $reg_first				=	$getShortNameSubdivision.$registrarCode.'/'.'IMR'.'/';
					$reg_first				=	$getRloShortCode.$registrarCode.'/'.'IMR'.'/'; // added on 27/03/2024
					$reg_second				=	str_pad($reg_code_next, 6, "0", STR_PAD_LEFT);
					$registration_number	=	$reg_first.$reg_second;
				}
			
			
				/*** Update Status of ISMW Master Table ***/ 
				
				$update_status  =  db_update('l_interstate_workman_master');
				$update_status->fields(array('iwm_qr_code' => $generated_qr_code, 'registration_number' =>	$registration_number, 'registration_date' => $datethirtyonethDay,'status'=>'I','deemed'=>'Y'));
				$update_status->condition('id',$application_id);
				$update_status->condition('act_id',$act_id);
				$update_status->condition('user_id',$applicant_user_id);
				$update_status->execute();
				
				
				$ismw_con 				= 	db_select('l_interstate_contractor_master', 'licm');
				$ismw_con				->	fields('licm', array('id'));
				$ismw_con				->  condition('licm.application_id', $application_id);	
				$ismw_con				->	condition('licm.user_id', $applicant_user_id);
				$ismw_con				->	condition('licm.contractor_status', 1);
				$ismw_con				->	orderBy('licm.id', 'DESC');
				$ismw_con_res			= 	$ismw_con->execute()->fetchAll(); 
			
				foreach ($ismw_con_res as $con_row){
				
					$form_six 			=   $con_row->id;
					
					$update_form_six 	= 	db_update('l_interstate_contractor_master');
					$update_form_six	->	fields(array('form_six'	  => $form_six));
					$update_form_six	->	condition('id',$con_row->id);
					$update_form_six	->	condition('user_id',$applicant_user_id);
					$update_form_six	->	condition('contractor_status', 1);
					$update_form_six	->	execute();
			
				}
				
				$query		= db_select('l_interstate_remark_master', 'rm');
				$query		->fields('rm',array());
				$query		->condition('rm.application_id', $application_id);
				$db_or 		= db_or();
				$db_or		->condition('rm.remark_type', 'V');
				$db_or		->condition('rm.remark_type', 'VA');
				$query		->condition($db_or);
				$query		->range(0,1)	;		
				$query		->orderBy('rm.id','DESC');
				$result 	= $query->execute()->fetchAssoc();
				
				$alc_user_id 			= $result['remark_by'];			
				$getEmployeeid 			= db_select('l_custom_user_detail','cd')->fields('cd',array('employee_id','fullname'))->condition('usr_id',$alc_user_id)->execute()->fetchAssoc();
				$alc_full_name			= $getEmployeeid['fullname'];	
				$employee_id			= $getEmployeeid['employee_id'];
				
				$fieldsApplInfo2  =  array(
								'remark_text'   		=> 'Congratulations! Certificate is issued by the Registering Authority. You can download it from the dashboard.',  
								'remark_by'   			=> $alc_user_id, 
								'remark_to' 			=> $applicant_user_id,
								'application_id' 		=> $application_id,
								'remark_date'  			=> $thirtydays,
								'remark_type' 			=> 'I',
								'remark_by_name'    	=> $alc_full_name,
								'remark_field_text' 	=> $result['remark_field_text'],
								'remark_by_role' 		=> 4,
								'employee_id'			=> $employee_id,
								'deemed_on'				=> date('Y-m-d')
							);
	
				db_insert('l_interstate_remark_master')->fields($fieldsApplInfo2)->execute();

				
				$update_tag  =  db_update('l_interstate_tag_master')
							   ->fields(array('registration_number' => $registration_number, 'issued_date' => $datethirtyonethDay,'status' => 'I'))
							   ->condition('application_id', $application_id)	
							   ->condition('identification_number', $identification_number)
							   ->condition('pe_user_id', $applicant_user_id)
							   ->condition('applied_for', 'REG')
							   ->condition('act_id', 4)
							   ->execute();
			
			}
			
		}
		
	}
	
	
}


function common_deemed_license_update_status($act_id_en = '', $formv_en = '', $particularId_en='', $userid_en = ''){
	
	$act_id					= encryption_decryption_fun('decrypt', $act_id_en);
	$serialFormV			= encryption_decryption_fun('decrypt', $formv_en); 
	$particular_id			= encryption_decryption_fun('decrypt', $particularId_en);
	$contractor_user_id  	= encryption_decryption_fun('decrypt', $userid_en); 
	 
	
	
	if($act_id == 12){
		
		$getLatestRemark  = check_final_submit_data(encryption_decryption_fun('encrypt', $act_id), encryption_decryption_fun('encrypt', $serialFormV));//miscellaneous.module
		
		if(!empty($getLatestRemark) && $getLatestRemark['remark_type']=='U'){
			
			$final_submit_date 	= $getLatestRemark['remark_date']; //echo date('Y-m-d h:i:s',$getLatestRemark['remark_date']).'<br/>';
			$today 				= time();
			$thirtydays 		= strtotime('+30 days',$final_submit_date);
			$dateThirtydays 	= date('Y-m-d h:i:s',$thirtydays); //echo date('Y-m-d h:i:s',$thirtydays).'<br/>';
			$datethirtyonethDay = date('Y-m-d',$thirtydays);
			
			
			$getLicenseID = db_select('l_contractor_license_application','cm')->fields('cm',array('id'))->condition('serial_no_from_v',$serialFormV)->condition('contractor_particular_id',$particular_id)->condition('contractor_user_id',$contractor_user_id);
			$reslicenseid = $getLicenseID->execute()->fetchAssoc();
			$license_id = $reslicenseid['id'];
			
			$query		= db_select('l_remark_license', 'rm');
			$query		->fields('rm',array());
			$query		->condition('rm.remark_to', $serialFormV);
			$query		->condition('rm.particular_id', $particular_id);
			$query		->condition('rm.flag', 'L');
			$db_or 		= db_or();
			$db_or		->condition('rm.remark_type', 'A');
			$db_or		->condition('rm.remark_type', 'VA');
			$query		->condition($db_or);
			$query		->range(0,1)	;		
			$query		->orderBy('rm.id','DESC');
			$result 	= $query->execute()->fetchAssoc();
			
			$alcUserId 		= $result['remark_by'];			
			$getEmployeeid 	= db_select('l_custom_user_detail','cd')->fields('cd',array('employee_id','fullname'))->condition('usr_id',$alcUserId)->execute()->fetchAssoc();
			
			
			/*** Get Applicant Block Code & Statuses  ****/
	 
			$license				=	db_select('l_contractor_license_application', 'license_master');
			$license				->  leftJoin('l_particular_of_contract_labour', 'particular','particular.id=license_master.contractor_particular_id ');
			$license				->  leftJoin('l_contractor_info_master', 'contractor','contractor.id=particular.serial_no_from_v ');
			$license				->	fields('particular',array('contractor_user_id','worksite_subdivision','name_work_site_areatype'));
			$license				->	fields('contractor',array('name_of_contractor'));
			$license				->	fields('license_master',array('contractor_license_number','licence_qr_code'));
			$license				->	condition('license_master.id',$license_id);
			$license				->	condition('particular.id',$particular_id);
			$license				->	condition('particular.contractor_user_id',$contractor_user_id);
			$license				->  condition('particular.serial_no_from_v',$serialFormV);
			$license_result 		= $license->execute();
			
			if($license_result-> rowCount() > 0 ){
		
				$applicant_data 	= 	$license_result->fetchAssoc();
				
				$subdivision_code	=   $applicant_data['worksite_subdivision'];
				$area_code			=   $applicant_data['name_work_site_areatype'];
				$license_number		=   $applicant_data['contractor_license_number'];
				$license_qr_code	=   $applicant_data['licence_qr_code']; 
				$contractorName		= 	$applicant_data['name_of_contractor'];
				$contractor_user_id	= 	$applicant_data['contractor_user_id'];
		
				if (empty($license_number) && empty($license_qr_code)){
			
					/*** GENERATION OF LICENSE NUMBER ***/
					
					$getShortNameSubdivision =  custom_user_short_name_fun($subdivision_code); 
					$getRloShortCode 		=  get_rlo_short_code($area_code); 
					$getRegistrarCode		 =	get_registration_code($area_code);  
					$registrarCode 			 =  substr($getRegistrarCode, -2); 
					
					$reg_query				=	db_query("select  max (NULLIF(substr(contractor_license_number,11,6),'') :: integer) as serial_num  from l_contractor_license_application where substr(contractor_license_number,0,4) ='".$getRloShortCode."'");
					$reg_query_result		=	$reg_query->fetchAssoc();
					$reg_code				=	$reg_query_result['serial_num'];
					
					if(empty($reg_code)){ 
						
						// $license_number			=	$getShortNameSubdivision.$registrarCode.'/'.'CLL'.'/'.'000001';
						$license_number			=	$getRloShortCode.$registrarCode.'/'.'CLL'.'/'.'000001'; // added on 22/03/2024
					
					}else{
						$reg_code_next			= 	$reg_code+1; 
						// $reg_first				=	$getShortNameSubdivision.$registrarCode.'/'.'CLL'.'/';
						$reg_first				=	$getRloShortCode.$registrarCode.'/'.'CLL'.'/'; // added on 22/03/2024
						
						$reg_second				=	str_pad($reg_code_next, 6, "0", STR_PAD_LEFT);
						$license_number			=	$reg_first.$reg_second;
					}
					
					$renewalDate 				= date("Y-m-d", strtotime("+364 days", $thirtydays));
					$SLNo						= 'CLL'.$serialFormV.'V'.'T'.time();
					$licence_qr_code			= encryption_decryption_fun('encrypt',"License No:".$license_number."\nIssue Date:". date("dS M, Y",$thirtydays)."\nName of Contractor:".$contractorName."\nValid upto:".date("dS M, Y",strtotime($renewalDate))."\nIssued By:".$getEmployeeid['fullname']."\nSL.No:".$SLNo);		
			
			
				/*** Update Status of Master License Table ***/ 
					
				$update_status  			=  db_update('l_contractor_license_application');
				$update_status->fields(array('licence_qr_code' => $licence_qr_code, 'contractor_license_number' =>	$license_number, 'license_date' => $datethirtyonethDay,'next_renweal_date' => $renewalDate ,'modification_date'=> $datethirtyonethDay, 'remark_by_userid'=> $alcUserId , 'block_next_renwal_date' =>$renewalDate,'status'=>'I','deemed'=>'Y'));
				$update_status->condition('id',$license_id);
				$update_status->condition('serial_no_from_v',$serialFormV);
				$update_status->condition('contractor_particular_id',$particular_id);
				$update_status->condition('contractor_user_id',$contractor_user_id);
				$update_status->execute();
				
				
				
				$licenseRemarks 	= array(
									'remark_text'   		=> 'Congratulations! Certificate is issued by the Registering Authority. You can download it from the dashboard.', 
									'remark_by'   			=> $alcUserId, 
									'remark_to' 			=> $serialFormV,
									'remark_type' 			=> 'I',
									'remark_date'  			=> $thirtydays,
									'remark_field_title' 	=> $result['remark_field_title'],
									'particular_id'			=> $particular_id,
									'remark_by_role' 		=> '4',
									'remark_by_name' 		=>  $getEmployeeid['fullname'],
									'flag' 					=>  'L',
									'employee_id'			=> $getEmployeeid['employee_id'],
									'deemed_on'				=> date('Y-m-d')
									);
										
				db_insert('l_remark_license')->fields($licenseRemarks)->execute();	
				
				$tag 	= array(
								'from_v_serial_no' 				=> $serialFormV,
								'flag' 							=> 'L',
								'renewal_license_ammendment_id' => $license_id,
								'created_by'					=> $contractor_user_id,
								'create_date'					=> $datethirtyonethDay,
								'application_status'			=> 'I',
								'remark_user_id'  				=> $alcUserId,
								'act_id' 						=> 1
								
								);
			
				db_insert('l_contractor_activity_tag')->fields($tag)->execute();	
			
				// FOR SMS ALERT START
			
				$applicant_mobile_no = get_mobile_number($contractor_user_id);
				
				if($status == 'B'){					
					$msg = 'Your License for (00'.$serialFormV.') application is backed for rectification by ALC(Govt. of WB). Please check your dashboard for further process.(wblc.gov.in)';
					send_sms_for_user_alert($applicant_mobile_no, $msg);			
				}else if($status == 'A'){			
					$msg = 'Your License for (00'.$serialFormV.') application is approved for fees submission by ALC(Govt. of WB). Please check your dashboard for further process.(wblc.gov.in)';
					send_sms_for_user_alert($applicant_mobile_no, $msg);
				}else if($status == 'I'){			
					$msg = 'Congratulations! Your License for (00'.$serialFormV.') is issued by ALC(Govt. of WB). Login to download the certificate from dashboard (wblc.gov.in)';
					//send_sms_for_user_alert('7278989577', $msg);
				}else if($status == 'R'){			
					$msg = 'Your License for (00'.$serialFormV.') application is rejected by ALC(Govt. of WB). Please check your dashboard for further process.(wblc.gov.in)';
					send_sms_for_user_alert($applicant_mobile_no, $msg);			
				}		
					
				// FOR SMS ALERT END
			
				/*** Update Contractor Master Table ***/ 
					
					$update_contractor  	=  	db_update('l_contractor_info_master');
					$update_contractor->fields(array('contractor_user_id'=> $contractor_user_id));
					$update_contractor->condition('id',$serialFormV);
					$update_contractor->execute();
					
		
				}
			}
			
		}
	
	}
	
	
	if($act_id == 14){
		
		// $getLatestRemark  = check_final_submit_data(encryption_decryption_fun('encrypt', $act_id), $particularId_en);
		
		// if(!empty($getLatestRemark) && $getLatestRemark['remark_type']=='U'){
			
		// 	$final_submit_date 	= $getLatestRemark['remark_date']; //echo date('Y-m-d h:i:s',$getLatestRemark['remark_date']).'<br/>';
		// 	$today 				= time();
		// 	$thirtydays 		= strtotime('+31 days',$final_submit_date);
		// 	$dateThirtydays 	= date('Y-m-d h:i:s',$thirtydays); //echo date('Y-m-d h:i:s',$thirtydays).'<br/>';
		// 	$datethirtyonethDay = date('Y-m-d',$thirtydays);
			
		// 	$query		= db_select('l_remark_license', 'rm');
		// 	$query		->fields('rm',array());
		// 	$query		->condition('rm.remark_to', $serialFormV);
		// 	$query		->condition('rm.particular_id', $particular_id);
		// 	$query		->condition('rm.flag', 'A');
		// 	$db_or 		= db_or();
		// 	$db_or		->condition('rm.remark_type', 'A');
		// 	$db_or		->condition('rm.remark_type', 'AW');
		// 	$query		->condition($db_or);
		// 	$query		->range(0,1)	;		
		// 	$query		->orderBy('rm.id','DESC');
		// 	$result 	= $query->execute()->fetchAssoc();
			
		// 	$alcUserId 		= $result['remark_by'];
		// 	$amendId		= $result['id'];
		// 	$not_amendment_check_field = $result['not_amendment_check_field'];
		// 	$amendment_check_field	= $result['amendment_check_field'];
				
		// 	$getAmendDet = db_select('l_amendment_of_contract_labour_license','ad')->fields('ad',array('id','license_id'))->condition('reference_no',$particular_id)->condition('created_by',$contractor_user_id)->execute()->fetchAssoc();
			
			
		// 	$update_status  =  db_update('l_amendment_of_contract_labour_license');
		// 	$update_status->fields(array('ammendment_status'=>'I','alc_inspector_action_date' =>$datethirtyonethDay,'remark_by_userid'=> $alcUserId,'deemed'=>'Y'));
		// 	$update_status->condition('reference_no',$particular_id);
		// 	$update_status->condition('license_id',$getAmendDet['license_id']);
		// 	$update_status->condition('ammendment_status','U');
		// 	$update_status->execute();
					
		// 	$getEmployeeid 			= db_select('l_custom_user_detail','cd')->fields('cd',array('employee_id','fullname'))->condition('usr_id',$alcUserId)->execute()->fetchAssoc();
			
		// 	$amendRemarks 			= array(
		// 								'remark_text'   			=> 'Congratulations! Certificate is issued by the Registering Authority. You can download it from the dashboard.', 
		// 								'remark_by'   				=> $alcUserId, 
		// 								'remark_to' 				=> $serialFormV,
		// 								'remark_type' 				=> 'I',
		// 								'remark_date'  				=> $thirtydays,
		// 								'remark_field_title' 		=> $result['remark_field_title'],
		// 								'particular_id'				=> $particular_id,
		// 								'remark_by_role' 			=> '4',
		// 								'remark_by_name' 			=>  $getEmployeeid['fullname'],
		// 								'flag' 						=>  'A',
		// 								'employee_id'				=> $getEmployeeid['employee_id'],
		// 								'not_amendment_check_field' => $not_amendment_check_field,
		// 								'amendment_check_field' 	=> $amendment_check_field,
		// 								'deemed_on'					=> date('Y-m-d')
		// 							);				
			


		// 		db_insert('l_remark_license')->fields($amendRemarks)->execute();
				
		// 		$tag 	= array(
		// 						'from_v_serial_no' 				=> $serialFormV,
		// 						'flag' 							=> 'A',
		// 						'renewal_license_ammendment_id' => $getAmendDet['id'],
		// 						'created_by'					=> $contractor_user_id,
		// 						'create_date'					=> $datethirtyonethDay,
		// 						'application_status'			=> 'I',
		// 						'remark_user_id'  				=> $alcUserId,
		// 						'act_id' 						=> 1
								
		// 						);
			
		// 		db_insert('l_contractor_activity_tag')->fields($tag)->execute();
				
			
		// }
		
		
	}
	
	
	
	
	
}
function check_final_submit_data($act_id =0, $application_id_en = 0){ 
	global $user;
	$act_id 		= encryption_decryption_fun('decrypt', $act_id);
	$application_id = encryption_decryption_fun('decrypt', $application_id_en);
	
	if($act_id == 1){
		$query = db_select('l_remarks_master','rm')->fields('rm',array())->condition('application_id',$application_id)->range(0,1)->orderBy('remark_id','desc');
		$result = $query->execute()->fetchAssoc();	
	}else if($act_id ==2){
		$query = db_select('l_bocwa_remark_master','rm')->fields('rm',array())->condition('application_id',$application_id)->range(0,1)->orderBy('id','desc');
		$result = $query->execute()->fetchAssoc();
	}else if($act_id ==3){
		$query = db_select('l_mtw_remark_master','rm')->fields('rm',array())->condition('application_id',$application_id)->range(0,1)->orderBy('id','desc');
		$result = $query->execute()->fetchAssoc();
	}else if($act_id == 12){ 
		$query = db_select('l_remark_license','rm')->fields('rm',array())->condition('remark_to',$application_id)->condition('flag','L')->range(0,1)->orderBy('id','desc');
		$result = $query->execute()->fetchAssoc();
	}else if($act_id == 4){
		$query = db_select('l_interstate_remark_master','rm')->fields('rm',array())->condition('application_id',$application_id)->range(0,1)->orderBy('id','desc');
		$result = $query->execute()->fetchAssoc();
	}else if($act_id == 14){ 
		$query = db_select('l_remark_license','lic')->fields('lic',array())->condition('particular_id',$application_id)->condition('flag','A')->range(0,1)->orderBy('id','desc');
		$result = $query->execute()->fetchAssoc();
	}
	
	return $result;
}

function certificate_address_officers($user_id = ''){  
	$result = db_select('l_rlo_additional_info', 'add')->fields('add', array('clra_certificate_address','office_name', 'office_name_addisional1'))->condition('add.user_id', $user_id)->execute()->fetchObject();
	return $result;
}


function official_dashboard_officialtopbox_func($userid='',$user_role='',$areaCode='', $customjuristype='', $iscustom='',$status ='',$portal='',$apptype='' ){ //func called from theme dashboard tpl
   
	$totalWblc 			= 0;
	$totalSilpaSathi 	= 0;
	
	$totalWblcPending	= 0;
	$totalSSPending		= 0;	
		
	$totalIssued		= 0;
	$totalRejected		= 0;
	
	
	$totalWblcIssued	= 0;
	$totalWblcRejected  = 0;
	
	$clraReg			= 0;
	$clraAmendment		= 0;
	$bocwReg			= 0;
	$bocwAmendment		= 0;

	
	$getClraSubmittedApplications = db_select('l_clra_registration_master','clra');
	$getClraSubmittedApplications->fields('clra',array('id'));
	if($user_role == 5 && $iscustom =='N'){
		$getClraSubmittedApplications->condition('clra.loc_e_dist', $areaCode);
	}
	if($portal == 'wblc'){
		$getClraSubmittedApplications->condition('clra.identification_number', db_like('CLRA').'%','LIKE');		
		if($status == 'submitted'){		
			$getClraSubmittedApplications->isNotNull('clra.status');
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$clraAmendSubmittedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$clraRegSubmittedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$clraSubmittedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}
		}else if ($status == 'pendinginoffice'){
			$getClraSubmittedApplications->condition('clra.status',array('0','F','BI','S'),'IN');			
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$clraAmendPendingApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$clraRegPendingApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$getClraPendingApplications = $getClraSubmittedApplications->execute()->rowCount();
			}
		}else if($status == 'issued'){
			$getClraSubmittedApplications->condition('clra.status','I');	
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$clraAmendIssuedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$clraRegIssuedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$getClraIssuedApplications = $getClraSubmittedApplications->execute()->rowCount();	
			}
				
		}else if($status == 'reject'){
			$getClraSubmittedApplications->condition('clra.status','R');
			
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$clraAmendRejectedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$clraRegRejectedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$getClraRejectedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}
					
		}
		
	}else if($portal == 'ss'){
		$getClraSubmittedApplications->condition('clra.identification_number', db_like('CAF').'%','LIKE');
		if($status == 'submitted'){		
			$getClraSubmittedApplications->isNotNull('clra.status');			
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$sathiclraAmendSubmittedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$sathiclraRegSubmittedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiClraSubmittedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}
			
		}else if ($status == 'pendinginoffice'){
			$getClraSubmittedApplications->condition('clra.status',array('0','F','BI','S'),'IN');
			
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$sathiclraAmendPendingApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$sathiclraRegPendingApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiClraPendingApplications = $getClraSubmittedApplications->execute()->rowCount();
			}
				
		}else if($status == 'issued'){
			$getClraSubmittedApplications->condition('clra.status','I');
			
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$sathiclraAmendIssuedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$sathiclraRegIssuedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiClraIssuedApplications = $getClraSubmittedApplications->execute()->rowCount();	
			}
			
		}else if($status == 'reject'){
			$getClraSubmittedApplications->condition('clra.status','R');	
			
			if($apptype == 'amend'){
				$getClraSubmittedApplications->isNotNull('clra.amendment_parent_id');
				$sathiclraAmendRejectedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getClraSubmittedApplications->isNull('clra.amendment_parent_id');	
				$sathiclraRegRejectedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiClraRejectedApplications = $getClraSubmittedApplications->execute()->rowCount();
			}
			
		}
	}	
	
	
	$totalWblc    		  = $totalWblc + $clraSubmittedApplications;	
	$totalSilpaSathi      = $totalSilpaSathi + $sathiClraSubmittedApplications;	
	
	
	//$totalWblcPending     = $totalWblcPending + $getClraPendingApplications; 
	//$totalSSPending 	  = $totalSSPending + $sathiClraPendingApplications; 
	
	$totalWblcIssued      = $totalWblcIssued + $getClraIssuedApplications;
	$totalSSIssued        = $totalSSIssued + $sathiClraIssuedApplications;	
	
    $totalWblcRejected    = $totalWblcRejected + $getClraRejectedApplications;
	$totalSSRejected	  = $totalSSRejected + $sathiClraRejectedApplications;
	
	
	$getBOCWSubmittedApplications = db_select('l_bocwa_registration_master','bocwa');
	$getBOCWSubmittedApplications->fields('bocwa',array('id'));
	if($user_role == 5 && $iscustom =='N'){
		$getBOCWSubmittedApplications->condition('bocwa.loc_e_dist', $areaCode);
	}
	if($portal == 'wblc'){
		$getBOCWSubmittedApplications->condition('bocwa.identification_number', db_like('BOCWA').'%','LIKE');
		if($status == 'submitted'){		
			$getBOCWSubmittedApplications->isNotNull('bocwa.status');			
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$bocwAmend_SubmittedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$bocwReg_SubmittedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$bocwSubmittedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}
			
		}else if ($status == 'pendinginoffice'){
			$getBOCWSubmittedApplications->condition('bocwa.status',array('0','F','BI','S'),'IN');			
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$bocwAmend_PendingApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$bocwReg_PendingApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$getBOCWPendingApplications = $getBOCWSubmittedApplications->execute()->rowCount();	
			}			
		}else if($status == 'issued'){
			$getBOCWSubmittedApplications->condition('bocwa.status','I');	
			
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$bocwAmend_IssuedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$bocwReg_IssuedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$getBOCWIssuedApplications = $getBOCWSubmittedApplications->execute()->rowCount();	
			}	
				
		}else if($status == 'reject'){
			$getBOCWSubmittedApplications->condition('bocwa.status','R');
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$bocwAmend_RejectedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$bocwReg_RejectedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$getBOCWRejectedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}				
		}
	}else if($portal == 'ss'){
		$getBOCWSubmittedApplications->condition('bocwa.identification_number', db_like('CAF').'%','LIKE');
		if($status == 'submitted'){		
			$getBOCWSubmittedApplications->isNotNull('bocwa.status');
			
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$sathi_bocwAmend_SubmittedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$sathi_bocwReg_SubmittedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiBOCWSubmittedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}
			
			
			
		}else if ($status == 'pendinginoffice'){
			$getBOCWSubmittedApplications->condition('bocwa.status',array('0','F','BI','S'),'IN');
			
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$sathi_bocwAmend_PendingApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$sathi_bocwReg_PendingApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiBOCWPendingApplications = $getBOCWSubmittedApplications->execute()->rowCount();	
			}
			
				
		}else if($status == 'issued'){
			$getBOCWSubmittedApplications->condition('bocwa.status','I');
			
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$sathi_bocwAmend_IssuedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$sathi_bocwReg_IssuedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiBOCWIssuedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}
				
		}else if($status == 'reject'){
			$getBOCWSubmittedApplications->condition('bocwa.status','R');			
			if($apptype == 'amend'){
				$getBOCWSubmittedApplications->isNotNull('bocwa.amendment_parent_id');
				$sathi_bocwAmend_RejectedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getBOCWSubmittedApplications->isNull('bocwa.amendment_parent_id');	
				$sathi_bocwReg_RejectedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiBOCWRejectedApplications = $getBOCWSubmittedApplications->execute()->rowCount();
			}
			
		}
	}
	
	$totalWblc    		  = $totalWblc + $bocwSubmittedApplications;	
	$totalSilpaSathi      = $totalSilpaSathi + $sathiClraSubmittedApplications;	
	
	//$totalWblcPending     = $totalWblcPending + $getBOCWPendingApplications;
	//$totalSSPending 	  = $totalSSPending + $sathiBOCWPendingApplications;	
	
	$totalWblcIssued      = $totalWblcIssued + $getBOCWIssuedApplications;
	$totalSSIssued        = $totalSSIssued + $sathiBOCWIssuedApplications;	
	
    $totalWblcRejected    = $totalWblcRejected + $getBOCWRejectedApplications;
	$totalSSRejected	  = $totalSSRejected + $sathiBOCWRejectedApplications;
	
	/******MTW  *****/
	
	$getMtwSubmittedApplications = db_select('l_mtw_registration_master','mtw');
	if($user_role == 5 && $iscustom =='N'){
		$getMtwSubmittedApplications->condition('mtw.mtw_loc_dist', $areaCode);
	}
	if($portal == 'wblc'){		
		if($status == 'submitted'){		
			// if($apptype == 'renewal'){
			// 	$getMtwSubmittedApplications->leftJoin('l_mtw_registration_renewal', 'mtw_ren','mtw_ren.application_id=mtw.id');
			// 	$getMtwSubmittedApplications->fields('mtw_ren',array('id'));
			// 	$getMtwSubmittedApplications->condition('mtw.is_renew', 1);
			// 	$getMtwSubmittedApplications->isNotNull('mtw_ren.status');
			// 	$mtwRenewal_SubmittedApplications = $getMtwSubmittedApplications->execute()->rowCount();
				
			// }else if ($apptype == 'reg'){
			// 	$getMtwSubmittedApplications->fields('mtw',array('id'));
			// 	$getMtwSubmittedApplications->isNotNull('mtw.status');
			// 	//$getMtwSubmittedApplications->condition('mtw.is_renew', 0);
			// 	$mtwReg_SubmittedApplications = $getMtwSubmittedApplications->execute()->rowCount();
			// }else{
			// 	$getMtwSubmittedApplications->fields('mtw',array('id'));
			// 	$getMtwSubmittedApplications->isNotNull('mtw.status');	
			// 	$mtwSubmittedApplications = $getMtwSubmittedApplications->execute()->rowCount();
				
				
			// 	$getRenewalSubmitted = db_select('l_mtw_registration_master','mtw');
			// 	if($user_role == 5 && $iscustom =='N'){
			// 		$getRenewalSubmitted->condition('mtw.mtw_loc_dist', $areaCode);
			// 	}
			// 	$getRenewalSubmitted->leftJoin('l_mtw_registration_renewal', 'mtw_ren','mtw_ren.application_id=mtw.id');
			// 	$getRenewalSubmitted->fields('mtw_ren',array('id'));
			// 	$getRenewalSubmitted->condition('mtw.is_renew', 1);
			// 	$getRenewalSubmitted->isNotNull('mtw_ren.status');
			// 	$renewalMtw_SubmittedApplications = $getRenewalSubmitted->execute()->rowCount();
							
			// 	$mtwSubmittedApplications = $mtwSubmittedApplications + $renewalMtw_SubmittedApplications;
			// }
			
		}else if ($status == 'pendinginoffice'){
			
			if($apptype == 'renewal'){
				// $getMtwSubmittedApplications->leftJoin('l_mtw_registration_renewal', 'mtw_ren','mtw_ren.application_id=mtw.id');
				// $getMtwSubmittedApplications->fields('mtw_ren',array('id'));
				// $getMtwSubmittedApplications->condition('mtw.is_renew', 1);
				// $getMtwSubmittedApplications->condition('mtw_ren.status',array('0','F','BI','S'),'IN');
				// $mtwRenewal_PendingApplications = $getMtwSubmittedApplications->execute()->rowCount();
				
			}else if ($apptype == 'reg'){

				// $getMtwSubmittedApplications->fields('mtw',array('id'));
				// $getMtwSubmittedApplications->condition('mtw.reg_status',array('0','F','BI','S'),'IN');			
				// $mtwReg_PendingApplications = $getMtwSubmittedApplications->execute()->rowCount();

			}else{
				$getMtwSubmittedApplications->fields('mtw',array('id'));
				$getMtwSubmittedApplications->condition('mtw.reg_status',array('0','F','BI','S'),'IN');
				$mtwPendingApplications = $getMtwSubmittedApplications->execute()->rowCount();
				

				$getRenewalPending = db_select('l_mtw_registration_renewal','ren');
				$getRenewalPending->leftJoin('l_mtw_registration_master', 'mtm','ren.application_id=mtm.id');
				$getRenewalPending->fields('ren',array('id'));
				if($user_role == 5 && $iscustom =='N'){
					$getRenewalPending->condition('mtm.mtw_loc_dist', $areaCode);
				}				
				$getRenewalPending->condition('ren.status',array('0','F','BI','S'),'IN');
				$getRenewalPending->condition('ren.purpose','renewal');
				$getRenewalPending->condition('mtm.is_renew', 1);
				$renewalMtw_PendingApplications = $getRenewalPending->execute()->rowCount();
				
				$getMTWPendingApplications = $mtwPendingApplications + $renewalMtw_PendingApplications;
			}
					
		}else if($status == 'issued'){
			
			// if($apptype == 'renewal'){
			// 	$getMtwSubmittedApplications->leftJoin('l_mtw_registration_renewal', 'mtw_ren','mtw_ren.application_id=mtw.id');
			// 	$getMtwSubmittedApplications->fields('mtw_ren',array('id'));
			// 	$getMtwSubmittedApplications->condition('mtw.is_renew', 1);
			// 	$getMtwSubmittedApplications->condition('mtw_ren.status','I');
			// 	$mtwRenewal_IssuedApplications = $getMtwSubmittedApplications->execute()->rowCount();
			// }else if ($apptype == 'reg'){
			// 	$getMtwSubmittedApplications->fields('mtw',array('id'));
			// 	$getMtwSubmittedApplications->condition('mtw.status' ,'I');
			// 	//$getMtwSubmittedApplications->condition('mtw.is_renew', 0);
			// 	$mtwReg_IssuedApplications = $getMtwSubmittedApplications->execute()->rowCount();
			// }else{
			// 	$getMtwSubmittedApplications->fields('mtw',array('id'));
			// 	$getMtwSubmittedApplications->condition('mtw.status','I');	
			// 	$mtwIssuedApplications = $getMtwSubmittedApplications->execute()->rowCount();
				
				
			// 	$getRenewalIssued = db_select('l_mtw_registration_master','mtw');
			// 	if($user_role == 5 && $iscustom =='N'){
			// 		$getRenewalIssued->condition('mtw.mtw_loc_dist', $areaCode);
			// 	}
			// 	$getRenewalIssued->leftJoin('l_mtw_registration_renewal', 'mtw_ren','mtw_ren.application_id=mtw.id');
			// 	$getRenewalIssued->fields('mtw_ren',array('id'));
			// 	$getRenewalIssued->condition('mtw.is_renew', 1);
			// 	$getRenewalIssued->condition('mtw_ren.status','I');
			// 	$renewalMtw_IssuedApplications = $getRenewalIssued->execute()->rowCount();
				
			// 	$getMTWIssuedApplications = $mtwIssuedApplications +  $renewalMtw_IssuedApplications;
			// }
			
			
					
		}else if($status == 'reject'){
			
			
			// if($apptype == 'renewal'){
			// 	$getMtwSubmittedApplications->leftJoin('l_mtw_registration_renewal', 'mtw_ren','mtw_ren.application_id=mtw.id');
			// 	$getMtwSubmittedApplications->fields('mtw_ren',array('id'));
			// 	$getMtwSubmittedApplications->condition('mtw.is_renew', 1);
			// 	$getMtwSubmittedApplications->condition('mtw_ren.status','R');
			// 	$mtwRenewal_RejectedApplications = $getMtwSubmittedApplications->execute()->rowCount();
			// }else if ($apptype == 'reg'){
			// 	$getMtwSubmittedApplications->fields('mtw',array('id'));
			// 	$getMtwSubmittedApplications->condition('mtw.status' ,'R');
			// 	//$getMtwSubmittedApplications->condition('mtw.is_renew', 0);
			// 	$mtwReg_RejectedApplications = $getMtwSubmittedApplications->execute()->rowCount();
			// }else{
			// 	//$getMtwSubmittedApplications->condition('mtw.is_renew', 0);
			// 	$getMtwSubmittedApplications->fields('mtw',array('id'));
			// 	$getMtwSubmittedApplications->condition('mtw.status','R');
			// 	$regMtwRejectedApplications = $getMtwSubmittedApplications->execute()->rowCount();
				
				
			// 	$getRenewalRejected = db_select('l_mtw_registration_master','mtw');
			// 	if($user_role == 5 && $iscustom =='N'){
			// 		$getRenewalRejected->condition('mtw.mtw_loc_dist', $areaCode);
			// 	}
			// 	$getRenewalRejected->leftJoin('l_mtw_registration_renewal', 'mtw_ren','mtw_ren.application_id=mtw.id');
			// 	$getRenewalRejected->fields('mtw_ren',array('id'));
			// 	$getRenewalRejected->condition('mtw.is_renew', 1);
			// 	$getRenewalRejected->condition('mtw_ren.status','R');
			// 	$renewalMtw_RejectedApplications = $getRenewalRejected->execute()->rowCount();
					
			// 	$getMTWRejectedApplications = $regMtwRejectedApplications + $renewalMtw_RejectedApplications;
			// }
			
			
			
		}
	}
	
	//$totalWblc    		  = $totalWblc + $mtwSubmittedApplications;	
	$totalWblcPending     = $totalWblcPending + $getMTWPendingApplications;
	//$totalWblcIssued      = $totalWblcIssued + $getMTWIssuedApplications;
   // $totalWblcRejected    = $totalWblcRejected + $getMTWRejectedApplications;*/
	
	
	$getISMWSubmittedApplications = db_select('l_interstate_workman_master','ismw');
	$getISMWSubmittedApplications->fields('ismw',array('id'));
	if($user_role == 5 && $iscustom =='N'){
		$getISMWSubmittedApplications->condition('ismw.loc_e_dist', $areaCode);
	}
	if($portal == 'wblc'){
		$getISMWSubmittedApplications->condition('ismw.identification_number', db_like('ISMW_REG').'%','LIKE');
		if($status == 'submitted'){	
			$getISMWSubmittedApplications->isNotNull('ismw.status');
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$ismwAmend_SubmittedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$ismwReg_SubmittedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$ismwSubmittedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}
		}else if ($status == 'pendinginoffice'){
			$getISMWSubmittedApplications->condition('ismw.status',array('0','F','BI','S'),'IN');
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$ismwAmend_PendingApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$ismwReg_PendingApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$getISMWPendingApplications = $getISMWSubmittedApplications->execute()->rowCount();	
			}
				
		}else if($status == 'issued'){
			$getISMWSubmittedApplications->condition('ismw.status','I');
			
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$ismwAmend_IssuedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$ismwReg_IssuedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$getISMWIssuedApplications = $getISMWSubmittedApplications->execute()->rowCount();	
			}
				
					
		}else if($status == 'reject'){
			$getISMWSubmittedApplications->condition('ismw.status','R');	
			
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$ismwAmend_RejectedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$ismwReg_RejectedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$getISMWRejectedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}
			
			
			
		}
	}else if($portal == 'ss'){
		$getISMWSubmittedApplications->condition('ismw.identification_number', db_like('CAF').'%','LIKE');
		if($status == 'submitted'){		
			$getISMWSubmittedApplications->isNotNull('ismw.status');
			
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$sathi_ismwAmend_SubmittedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$sathi_ismwReg_SubmittedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiISMWSubmittedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}
			
			
			
			
		}else if ($status == 'pendinginoffice'){
			$getISMWSubmittedApplications->condition('ismw.status',array('0','F','BI','S'),'IN');
			
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$sathi_ismwAmend_PendingApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$sathi_ismwReg_PendingApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiISMWPendingApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}
			
					
		}else if($status == 'issued'){
			$getISMWSubmittedApplications->condition('ismw.status','I');
			
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$sathi_ismwAmend_IssuedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$sathi_ismwReg_IssuedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiISMWIssuedApplications = $getISMWSubmittedApplications->execute()->rowCount();	
			}
				
				
		}else if($status == 'reject'){
			$getISMWSubmittedApplications->condition('ismw.status','R');
			
			if($apptype == 'amend'){
				$getISMWSubmittedApplications->isNotNull('ismw.amendment_parent_id');
				$sathi_ismwAmend_RejectedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else if ($apptype == 'reg'){
				$getISMWSubmittedApplications->isNull('ismw.amendment_parent_id');	
				$sathi_ismwReg_RejectedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}else{				
				$sathiISMWRejectedApplications = $getISMWSubmittedApplications->execute()->rowCount();
			}
		
			
			
		}
	}
	
	
	$totalWblc    		  = $totalWblc + $ismwSubmittedApplications;	
	$totalSilpaSathi      = $totalSilpaSathi + $sathiISMWSubmittedApplications;	
	
	//$totalWblcPending     = $totalWblcPending + $getISMWPendingApplications;
	//$totalSSPending 	  = $totalSSPending + $sathiISMWPendingApplications;	
	
	$totalWblcIssued      = $totalWblcIssued + $getISMWIssuedApplications;
	$totalSSIssued        = $totalSSIssued + $sathiISMWIssuedApplications;	
	
    $totalWblcRejected    = $totalWblcRejected + $getISMWRejectedApplications;
	$totalSSRejected	  = $totalSSRejected + $sathiISMWRejectedApplications;
	

	$getClraLicenseSubmittedApplications =	db_select('l_contractor_license_application', 'lic');
	$getClraLicenseSubmittedApplications->leftJoin('l_particular_of_contract_labour', 'part','part.serial_no_from_v=lic.serial_no_from_v and part.contractor_user_id=lic.contractor_user_id');
	$getClraLicenseSubmittedApplications->fields('lic',array('id'));
	if($user_role == 5 && $iscustom =='N'){
		$getClraLicenseSubmittedApplications->condition('part.worksite_dist',$areaCode);
	}
	if($portal == 'wblc'){
		$getClraLicenseSubmittedApplications->isNull('lic.caf_id_no');
		if($status == 'submitted'){		
			$getClraLicenseSubmittedApplications->isNotNull('lic.status');
			$clraLicenseSubmittedApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$getClraLicenseSubmittedApplications->condition('lic.status',array('F','FW','BI','U'),'IN');
			$clraLicensePendingApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$getClraLicenseSubmittedApplications->condition('lic.status','I');	
			$clraLicenseIssuedApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$getClraLicenseSubmittedApplications->condition('lic.status','R');	
			$clraLicenseRejectedApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();
		}
		
	}else if($portal == 'ss'){
		$getClraLicenseSubmittedApplications->isNotNull('lic.caf_id_no');
		if($status == 'submitted'){		
			$getClraLicenseSubmittedApplications->isNotNull('lic.status');
			$sathiclraLicenseSubmittedApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$getClraLicenseSubmittedApplications->condition('lic.status',array('F','FW','BI','U'),'IN');
			$sathiclraLicensePendingApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$getClraLicenseSubmittedApplications->condition('lic.status','I');	
			$sathiclraLicenseIssuedApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$getClraLicenseSubmittedApplications->condition('lic.status','R');	
			$sathiclraLicenseRejectedApplications = $getClraLicenseSubmittedApplications->execute()->rowCount();
		}
	}
	
	$totalWblc    		  = $totalWblc + $clraLicenseSubmittedApplications;	
	$totalSilpaSathi      = $totalSilpaSathi + $sathiclraLicenseSubmittedApplications;	
	
	//$totalWblcPending     = $totalWblcPending + $clraLicensePendingApplications;
	//$totalSSPending 	  = $totalSSPending + $sathiclraLicensePendingApplications;	
	
	$totalWblcIssued      = $totalWblcIssued + $clraLicenseIssuedApplications;
	$totalSSIssued        = $totalSSIssued + $sathiclraLicenseIssuedApplications;	
	
    $totalWblcRejected    = $totalWblcRejected + $clraLicenseRejectedApplications;
	$totalSSRejected	  = $totalSSRejected + $sathiclraLicenseRejectedApplications;
	
	
	
	$getreneWalSubmittedApplications = db_select('l_contractor_license_apply_renweal', 'ren');
	$getreneWalSubmittedApplications->leftJoin('l_contractor_license_application', 'lic','lic.id=ren.lincense_id and ren.created_by=lic.contractor_user_id');
	$getreneWalSubmittedApplications->leftJoin('l_particular_of_contract_labour', 'part','part.serial_no_from_v=lic.serial_no_from_v and part.contractor_user_id=ren.created_by and part.id = lic.contractor_particular_id');	
	$getreneWalSubmittedApplications->fields('ren',array('id'));
	$getreneWalSubmittedApplications->condition('lic.status','I');
	if($user_role == 5 && $iscustom =='N'){
		$getreneWalSubmittedApplications->condition('part.worksite_dist',$areaCode);
	}
	if($portal == 'wblc'){
		$getreneWalSubmittedApplications->isNull('ren.caf_id_no');
		if($status == 'submitted'){		
			$getreneWalSubmittedApplications->isNotNull('ren.renewal_appliaction_status');
			$clraRenewalSubmittedApplications = $getreneWalSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$getreneWalSubmittedApplications->condition('ren.renewal_appliaction_status',array('F','FW','BI','U'),'IN');
			$clraRenewalPendingApplications = $getreneWalSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$getreneWalSubmittedApplications->condition('ren.renewal_appliaction_status','I');	
			$clraRenewalIssuedApplications = $getreneWalSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$getreneWalSubmittedApplications->condition('ren.renewal_appliaction_status','R');	
			$clraRenewalRejectedApplications = $getreneWalSubmittedApplications->execute()->rowCount();
		}
	}else if ($portal == 'ss'){
		$getreneWalSubmittedApplications->isNotNull('ren.caf_id_no');
		if($status == 'submitted'){		
			$getreneWalSubmittedApplications->isNotNull('ren.renewal_appliaction_status');
			$sathiClraRenewalSubmittedApplications = $getreneWalSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$getreneWalSubmittedApplications->condition('ren.renewal_appliaction_status',array('F','FW','BI','U'),'IN');
			$sathiClraRenewalPendingApplications = $getreneWalSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$getreneWalSubmittedApplications->condition('ren.renewal_appliaction_status','I');	
			$sathiClraRenewalIssuedApplications = $getreneWalSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$getreneWalSubmittedApplications->condition('ren.renewal_appliaction_status','R');	
			$sathiClraRenewalRejectedApplications = $getreneWalSubmittedApplications->execute()->rowCount();
		}
	}
	
	
	$totalWblc    		  = $totalWblc + $clraRenewalSubmittedApplications;	
	$totalSilpaSathi      = $totalSilpaSathi + $sathiClraRenewalSubmittedApplications;	
	
	//$totalWblcPending     = $totalWblcPending + $clraRenewalPendingApplications;
	//$totalSSPending 	  = $totalSSPending + $sathiClraRenewalPendingApplications;	
	
	$totalWblcIssued      = $totalWblcIssued + $clraRenewalIssuedApplications;
	$totalSSIssued        = $totalSSIssued + $sathiClraRenewalIssuedApplications;	
	
    $totalWblcRejected    = $totalWblcRejected + $clraRenewalRejectedApplications;
	$totalSSRejected	  = $totalSSRejected + $sathiClraRenewalRejectedApplications;
	
	
	$licAmendmentSubmittedApplications 	= db_select('l_amendment_of_contract_labour_license', 'amnd');
	$licAmendmentSubmittedApplications->leftJoin('l_contractor_license_application', 'lic','lic.id=amnd.license_id and lic.contractor_user_id=amnd.created_by');
	$licAmendmentSubmittedApplications->leftJoin('l_particular_of_contract_labour', 'part','part.serial_no_from_v=lic.serial_no_from_v and part.contractor_user_id=lic.contractor_user_id and part.id = lic.contractor_particular_id');
	$licAmendmentSubmittedApplications->fields('amnd',array('id'));
	if($user_role == 5 && $iscustom =='N'){
		$licAmendmentSubmittedApplications->condition('part.worksite_dist',$areaCode);
	}
	if($portal == 'wblc'){		
		if($status == 'submitted'){		
			$licAmendmentSubmittedApplications->isNotNull('amnd.ammendment_status');
			$getLicAmendmentSubmittedApplications = $licAmendmentSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$licAmendmentSubmittedApplications->condition('amnd.ammendment_status',array('F','FW','BI','U'),'IN');
			$getLicAmendmentPendingApplications = $licAmendmentSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$licAmendmentSubmittedApplications->condition('amnd.ammendment_status','I');	
			$getLicAmendmentIssuedApplications = $licAmendmentSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$licAmendmentSubmittedApplications->condition('amnd.ammendment_status','R');	
			$getLicAmendmentRejectedApplications = $licAmendmentSubmittedApplications->execute()->rowCount();
		}
	}
	
	$totalWblc    		  = $totalWblc + $getLicAmendmentSubmittedApplications;	
	//$totalWblcPending     = $totalWblcPending + $getLicAmendmentPendingApplications;
	$totalWblcIssued      = $totalWblcIssued + $getLicAmendmentIssuedApplications;
    $totalWblcRejected    = $totalWblcRejected + $getLicAmendmentRejectedApplications;
	
	$liclogAmendmentSubmittedApplications 	= db_select('l_amendment_of_contract_labour_license_log', 'amndlog');
	$liclogAmendmentSubmittedApplications   ->leftJoin('l_contractor_license_application', 'lic','lic.id=amndlog.license_id and lic.contractor_user_id=amndlog.created_by');
	$liclogAmendmentSubmittedApplications   ->leftJoin('l_particular_of_contract_labour', 'part','part.serial_no_from_v=lic.serial_no_from_v and part.contractor_user_id=lic.contractor_user_id and part.id = lic.contractor_particular_id');
	$liclogAmendmentSubmittedApplications	->fields('amndlog',array('id'));
	if($user_role == 5 && $iscustom =='N'){
		$liclogAmendmentSubmittedApplications	->condition('part.worksite_dist',$areaCode);
	}
	if($portal == 'wblc'){		
		if($status == 'submitted'){		
			$liclogAmendmentSubmittedApplications->isNotNull('amndlog.ammendment_status');
			$logLicAmendmentSubmittedApplications = $liclogAmendmentSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$liclogAmendmentSubmittedApplications->condition('amndlog.ammendment_status',array('F','FW','BI','U'),'IN');
			$logLicAmendmentPendingApplications = $liclogAmendmentSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$liclogAmendmentSubmittedApplications->condition('amndlog.ammendment_status','I');	
			$logLicAmendmentIssuedApplications = $liclogAmendmentSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$liclogAmendmentSubmittedApplications->condition('amndlog.ammendment_status','R');	
			$logLicAmendmentRejectedApplications = $liclogAmendmentSubmittedApplications->execute()->rowCount();
		}
	}
	
	$totalWblc    		  = $totalWblc + $logLicAmendmentSubmittedApplications;	
	//$totalWblcPending     = $totalWblcPending + $logLicAmendmentPendingApplications;
	$totalWblcIssued      = $totalWblcIssued + $logLicAmendmentIssuedApplications;
    $totalWblcRejected    = $totalWblcRejected + $logLicAmendmentRejectedApplications;
	
	
	$ismwlicEmpSubmittedApplications = db_select('l_interstate_license_master','ismwlic');
	$ismwlicEmpSubmittedApplications->fields('ismwlic',array('id'));
	$ismwlicEmpSubmittedApplications->condition('ismwlic.applied_for','L');
	$ismwlicEmpSubmittedApplications->condition('ismwlic.act_id',42);
	if($user_role == 5 && $iscustom =='N'){
		$ismwlicEmpSubmittedApplications->condition('ismwlic.worksite_subdiv', $areaCode);
	}
	if($portal == 'wblc'){
		if($status == 'submitted'){		
			$ismwlicEmpSubmittedApplications->isNotNull('ismwlic.status');
			$getIsmwLicEmpSubmittedApplications = $ismwlicEmpSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$ismwlicEmpSubmittedApplications->condition('ismwlic.status',array('0','F','BI','S'),'IN');
			$getIsmwLicEmpPendingApplications = $ismwlicEmpSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$ismwlicEmpSubmittedApplications->condition('ismwlic.status','I');	
			$getIsmwLicEmpIssuedApplications = $ismwlicEmpSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$ismwlicEmpSubmittedApplications->condition('ismwlic.status','R');	
			$getIsmwLicEmpRejectedApplications = $ismwlicEmpSubmittedApplications->execute()->rowCount();
		}
	}
	
	$totalWblc    		  = $totalWblc + $getIsmwLicEmpSubmittedApplications;	
	//$totalWblcPending     = $totalWblcPending + $getIsmwLicEmpPendingApplications;
	$totalWblcIssued      = $totalWblcIssued + $getIsmwLicEmpIssuedApplications;
    $totalWblcRejected    = $totalWblcRejected + $getIsmwLicEmpRejectedApplications;
		
	$ismwlicRecSubmittedApplications = db_select('l_interstate_license_master','ismwlic');
	$ismwlicRecSubmittedApplications->fields('ismwlic',array('id'));
	$ismwlicRecSubmittedApplications->condition('applied_for','L');
	$ismwlicEmpSubmittedApplications->condition('ismwlic.act_id',43);
	if($user_role == 5 && $iscustom =='N'){
		$ismwlicRecSubmittedApplications->condition('ismwlic.worksite_subdiv', $areaCode);
	}
	if($portal == 'wblc'){
		if($status == 'submitted'){		
			$ismwlicRecSubmittedApplications->isNotNull('ismwlic.status');
			$getIsmwLicRecSubmittedApplications = $ismwlicRecSubmittedApplications->execute()->rowCount();
		}else if ($status == 'pendinginoffice'){
			$ismwlicRecSubmittedApplications->condition('ismwlic.status',array('0','F','BI','S'),'IN');
			$getIsmwLicRecPendingApplications = $ismwlicRecSubmittedApplications->execute()->rowCount();		
		}else if($status == 'issued'){
			$ismwlicRecSubmittedApplications->condition('ismwlic.status','I');	
			$getIsmwLicRecIssuedApplications = $ismwlicRecSubmittedApplications->execute()->rowCount();		
		}else if($status == 'reject'){
			$ismwlicRecSubmittedApplications->condition('ismwlic.status','R');	
			$getIsmwLicRecRejectedApplications = $ismwlicRecSubmittedApplications->execute()->rowCount();
		}
	}
	
	$totalWblc    		  = $totalWblc + $getIsmwLicRecSubmittedApplications;	
	$totalWblcPending     = $totalWblcPending + $getIsmwLicRecPendingApplications;
	$totalWblcIssued      = $totalWblcIssued + $getIsmwLicRecIssuedApplications;
    $totalWblcRejected    = $totalWblcRejected + $getIsmwLicRecRejectedApplications;
	
	
	if ($status == 'pendinginoffice'){
		//echo 'CLRA ---'.$getClraPendingApplications.'<br/>';
		//echo 'bocw ---'.$getBOCWPendingApplications.'<br/>';
		//echo 'mtw ---'.$getMTWPendingApplications.'<br/>';
		/*echo 'ismw ---'.$getISMWPendingApplications.'<br/>'.$ismwReg_PendingApplications.'<br/>';
		echo 'clralic ---'.$clraLicensePendingApplications.'<br/>';
		echo 'renclralic ---'.$clraRenewalPendingApplications.'<br/>';
		echo 'amendlic------'.$getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications.'<br/>'.$getLicAmendmentPendingApplications.'---'.$logLicAmendmentPendingApplications.'<br/>';
		echo 'emplic ---'.$getIsmwLicEmpPendingApplications.'<br/>';
		echo 'reclic ---'.$getIsmwLicRecPendingApplications.'<br/>';*/
		//die;
		
		
		if ($apptype == 'all'){
			$totalWblcPending 	=  $getClraPendingApplications + $getBOCWPendingApplications +  $getMTWPendingApplications + $getISMWPendingApplications + $clraLicensePendingApplications + $clraRenewalPendingApplications + $getLicAmendmentPendingApplications + $logLicAmendmentPendingApplications + $getIsmwLicEmpPendingApplications + $getIsmwLicRecPendingApplications ;  
			
			$totalSSPending 	=  $sathiClraPendingApplications + $sathiBOCWPendingApplications + $sathiISMWPendingApplications + $sathiclraLicensePendingApplications + $sathiClraRenewalPendingApplications; 
			
			if($portal == 'wblc'){
				$getPendingArray = array(
					'total_pending_from_wblc'			=> ($totalWblcPending>0) ? $totalWblcPending : 0
				);
			}else if ($portal == 'ss'){
				
				$getPendingArray = array(
					'total_pending_from_silpasathi'		=> ($totalSSPending>0)? $totalSSPending:0
				);
			}
			 
			
			
			return $getPendingArray;
			
		}else if($apptype == 'reg'){
			
			if($portal == 'wblc'){
				$getPendingArray = array(			
					'clraregpending'					=> ($clraRegPendingApplications>0) ? $clraRegPendingApplications : 0,
					'bocwreg_pending'					=> ($bocwReg_PendingApplications>0)? $bocwReg_PendingApplications : 0,
					//'mtwreg_pending'					=> ($mtwReg_PendingApplications>0)? $mtwReg_PendingApplications : 0,
					'ismwreg_pending'					=> ($ismwReg_PendingApplications>0)? $ismwReg_PendingApplications : 0,
					'clralic_pending'					=> ($clraLicensePendingApplications>0)? $clraLicensePendingApplications : 0,
					'emp_ismwlic_pending'				=> ($getIsmwLicEmpPendingApplications>0)? $getIsmwLicEmpPendingApplications : 0,
					'rec_ismwlic_pending'				=> ($getIsmwLicRecPendingApplications>0)? $getIsmwLicRecPendingApplications : 0,
				);
				return $getPendingArray;
			}else if ($portal == 'ss'){
				$getPendingArray = array(	
					'sathi_clraregpending'				=> ($sathiclraRegPendingApplications>0) ? $sathiclraRegPendingApplications : 0,
					'sathi_bocwregpending'				=> ($sathi_bocwReg_PendingApplications>0) ? $sathi_bocwReg_PendingApplications : 0,
					'sathi_ismwreg_pending'				=> ($sathi_ismwReg_PendingApplications>0)? $sathi_ismwReg_PendingApplications : 0,
					'sathi_clralic_pending'				=> ($sathiclraLicensePendingApplications>0)? $sathiclraLicensePendingApplications : 0,
				);
				return $getPendingArray;
				
			}
			
			
			
			
		}else if($apptype == 'amend'){
			
			if($portal == 'wblc'){
			
				$getPendingArray = array(			
					'clraamendpending'					=> ($clraAmendPendingApplications>0) ? $clraAmendPendingApplications : 0,
					'bocwamend_pending'					=> ($bocwAmend_PendingApplications>0)? $bocwAmend_PendingApplications : 0,
					//'ismwamend_pending'					=> ($ismwAmend_PendingApplications>0)? $ismwAmend_PendingApplications : 0,
					'amend_clralic_pending'				=> (($getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications )>0)? $getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications : 0,
				
				);
				return $getPendingArray;
				
			}else if ($portal == 'ss'){
				$getPendingArray = array(
				
				
				);
				return $getPendingArray;
				
			}
			
			
			
		}else if($apptype == 'renewal'){
			
			if($portal == 'wblc'){
				$getPendingArray = array(
					'clralic_renewal_pending'			=> ($clraRenewalPendingApplications>0)? $clraRenewalPendingApplications : 0,
					//'mtwrenewal_pending'				=> ($mtwRenewal_PendingApplications>0)? $mtwRenewal_PendingApplications : 0,
				);
				return $getPendingArray;
			}else if ($portal == 'ss'){
				
				$getPendingArray = array(
					'sathi_clralic_renewal_pending'		=> ($sathiClraRenewalPendingApplications>0)? $sathiClraRenewalPendingApplications : 0
					
				);
				return $getPendingArray;
			}
			
		}
		
		
		
	}
	

	/*if ($status == 'pendinginoffice'){
		
		if ($apptype = 'all'){
			
			$getPendingArray = array(
				'total_pending_from_wblc'			=> ($totalWblcPending>0) ? $totalWblcPending : 0,
				'clraregpending'					=> ($clraRegPendingApplications>0) ? $clraRegPendingApplications : 0,
				'clraamendpending'					=> ($clraAmendPendingApplications>0) ? $clraAmendPendingApplications : 0,
				'bocwreg_pending'					=> ($bocwReg_PendingApplications>0)? $bocwReg_PendingApplications : 0,
				'bocwamend_pending'					=> ($bocwAmend_PendingApplications>0)? $bocwAmend_PendingApplications : 0,
				//'mtwreg_pending'					=> ($mtwReg_PendingApplications>0)? $mtwReg_PendingApplications : 0,
				'mtwrenewal_pending'				=> ($mtwRenewal_PendingApplications>0)? $mtwRenewal_PendingApplications : 0,
				//'ismwreg_pending'					=> ($ismwReg_PendingApplications>0)? $ismwReg_PendingApplications : 0,
				//'ismwamend_pending'					=> ($ismwAmend_PendingApplications>0)? $ismwAmend_PendingApplications : 0,
				'clralic_pending'					=> ($clraLicensePendingApplications>0)? $clraLicensePendingApplications : 0,
				'clralic_renewal_pending'			=> ($clraRenewalPendingApplications>0)? $clraRenewalPendingApplications : 0,
				'amend_clralic_pending'				=> (($getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications )>0)? $getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications : 0,
				'emp_ismwlic_pending'				=> ($getIsmwLicEmpPendingApplications>0)? $getIsmwLicEmpPendingApplications : 0,
				'rec_ismwlic_pending'				=> ($getIsmwLicRecPendingApplications>0)? $getIsmwLicRecPendingApplications : 0,
				
				'total_pending_from_silpasathi'		=> ($totalSSPending>0)? $totalSSPending:0,
				//'sathi_clraregpending'				=> ($sathiclraRegPendingApplications>0) ? $sathiclraRegPendingApplications : 0,
				//'sathi_clraamendpending'			=> ($sathiclraAmendPendingApplications>0) ? $sathiclraAmendPendingApplications :0,
				//'sathi_bocwregpending'				=> ($sathi_bocwReg_PendingApplications>0) ? $sathi_bocwReg_PendingApplications : 0,
				//'sathi_bocwamendpending'			=> ($sathi_bocwAmend_PendingApplications > 0) ? $sathi_bocwAmend_PendingApplications : 0,				
				//'sathi_ismwreg_pending'				=> ($sathi_ismwReg_PendingApplications>0)? $sathi_ismwReg_PendingApplications : 0,
				//'sathi_ismwamend_issued'			=> ($sathi_ismwAmend_IssuedApplications>0)? $sathi_ismwAmend_IssuedApplications : 0,
				'sathi_clralic_pending'				=> ($sathiclraLicensePendingApplications>0)? $sathiclraLicensePendingApplications : 0,
				'sathi_clralic_renewal_pending'		=> ($sathiClraRenewalPendingApplications>0)? $sathiClraRenewalPendingApplications : 0
				);
			
		}else{
		
			if ($portal == 'wblc'){
		
				$getPendingArray = array(
					'total_pending_from_wblc'			=> ($totalWblcPending>0) ? $totalWblcPending : 0,
					'clraregpending'					=> ($clraRegPendingApplications>0) ? $clraRegPendingApplications : 0,
					'clraamendpending'					=> ($clraAmendPendingApplications>0) ? $clraAmendPendingApplications : 0,
					'bocwreg_pending'					=> ($bocwReg_PendingApplications>0)? $bocwReg_PendingApplications : 0,
					'bocwamend_pending'					=> ($bocwAmend_PendingApplications>0)? $bocwAmend_PendingApplications : 0,
					'mtwreg_pending'					=> ($mtwReg_PendingApplications>0)? $mtwReg_PendingApplications : 0,
					'mtwrenewal_pending'				=> ($mtwRenewal_PendingApplications>0)? $mtwRenewal_PendingApplications : 0,
					'ismwreg_pending'					=> ($ismwReg_PendingApplications>0)? $ismwReg_PendingApplications : 0,
					//'ismwamend_pending'					=> ($ismwAmend_PendingApplications>0)? $ismwAmend_PendingApplications : 0,
					'clralic_pending'					=> ($clraLicensePendingApplications>0)? $clraLicensePendingApplications : 0,
					'clralic_renewal_pending'			=> ($clraRenewalPendingApplications>0)? $clraRenewalPendingApplications : 0,
					'amend_clralic_pending'				=> (($getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications )>0)? $getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications : 0,
					'emp_ismwlic_pending'				=> ($getIsmwLicEmpPendingApplications>0)? $getIsmwLicEmpPendingApplications : 0,
					'rec_ismwlic_pending'				=> ($getIsmwLicRecPendingApplications>0)? $getIsmwLicRecPendingApplications : 0
				
			
			);	
		}else if ($portal == 'ss'){
			
			$getPendingArray = array(
				'total_pending_from_silpasathi'		=> ($totalSSPending>0)? $totalSSPending:0,
				'sathi_clraregpending'				=> ($sathiclraRegPendingApplications>0) ? $sathiclraRegPendingApplications : 0,
				//'sathi_clraamendpending'			=> ($sathiclraAmendPendingApplications>0) ? $sathiclraAmendPendingApplications :0,
				'sathi_bocwregpending'				=> ($sathi_bocwReg_PendingApplications>0) ? $sathi_bocwReg_PendingApplications : 0,
				//'sathi_bocwamendpending'			=> ($sathi_bocwAmend_PendingApplications > 0) ? $sathi_bocwAmend_PendingApplications : 0,				
				'sathi_ismwreg_pending'				=> ($sathi_ismwReg_PendingApplications>0)? $sathi_ismwReg_PendingApplications : 0,
				//'sathi_ismwamend_issued'			=> ($sathi_ismwAmend_IssuedApplications>0)? $sathi_ismwAmend_IssuedApplications : 0,
				'sathi_clralic_pending'				=> ($sathiclraLicensePendingApplications>0)? $sathiclraLicensePendingApplications : 0,
				'sathi_clralic_renewal_pending'		=> ($sathiClraRenewalPendingApplications>0)? $sathiClraRenewalPendingApplications : 0,
			);	
			
		}
		}
			
			
		
		
		return $getPendingArray; 
		
	}*/
		
	/*$getTotal = array(					
					'total_submitted_from_wblc'			=> $totalWblc,
					'total_submitted_from_silpasathi'	=> $totalSilpaSathi,					
					
					'total_pending_from_wblc'			=> ($totalWblcPending>0) ? $totalWblcPending : 0,
					'total_pending_from_silpasathi'		=> ($totalSSPending>0)? $totalSSPending:0,					
					
					'total_issued_from_wblc'			=> $totalWblcIssued,
					'total_issued_from_silpasathi'		=> $totalSSIssued,
					
					'total_rejected_from_wblc'			=> $totalWblcRejected,
					'total_rejected_from_silpasathi'	=> $totalSSRejected,
					
					'clraregsubmitted'					=> ($clraRegSubmittedApplications>0) ? $clraRegSubmittedApplications :0,
					'sathi_clraregsubmitted'			=> ($sathiclraRegSubmittedApplications>0)? $sathiclraRegSubmittedApplications :0,
					'clraamendsubmitted'				=> ($clraAmendSubmittedApplications>0) ? $clraAmendSubmittedApplications :0,					
					'sathi_clraamendsubmitted'			=> ($sathiclraAmendSubmittedApplications>0)? $sathiclraAmendSubmittedApplications : 0,					
					
					'clraregpending'					=> ($clraRegPendingApplications>0) ? $clraRegPendingApplications : 0,
					'sathi_clraregpending'				=> ($sathiclraRegPendingApplications>0) ? $sathiclraRegPendingApplications : 0,
					'clraamendpending'					=> ($clraAmendPendingApplications>0) ? $clraAmendPendingApplications : 0,
					'sathi_clraamendpending'			=> ($sathiclraAmendPendingApplications>0) ? $sathiclraAmendPendingApplications :0,
										
					'clraregissued'						=> ($clraRegIssuedApplications>0)? $clraRegIssuedApplications : 0,
					'sathi_clraregissued'				=> ($sathiclraRegIssuedApplications>0)? $sathiclraRegIssuedApplications : 0,
					'clraamendissued'					=> ($clraAmendIssuedApplications>0) ? $clraAmendIssuedApplications : 0,
					'sathi_clraamendissued'				=> ($sathiclraAmendIssuedApplications>0) ? $sathiclraAmendIssuedApplications :0,					
					
					'clraregrejected'					=> ($clraRegRejectedApplications>0)? $clraRegRejectedApplications :0,
					'sathi_clraregrejected'				=> ($sathiclraRegRejectedApplications>0)?  $sathiclraRegRejectedApplications :0,
					'clraamendrejected'					=> ($clraAmendRejectedApplications>0)? $clraAmendRejectedApplications :0,
					'sathi_clraamendrejected'			=> ($sathiclraAmendRejectedApplications>0)? $sathiclraAmendRejectedApplications :0,
					
					
					'bocwreg_submitted'					=> ($bocwReg_SubmittedApplications>0) ? $bocwReg_SubmittedApplications :0,
					'sathi_bocwregsubmitted'			=> ($sathi_bocwReg_SubmittedApplications>0) ? $sathi_bocwReg_SubmittedApplications :0,
					'bocwamend_submitted'				=> ($bocwAmend_SubmittedApplications>0)? $bocwAmend_SubmittedApplications :0,
					'sathi_bocwamendsubmitted'			=> ($sathi_bocwAmend_SubmittedApplications>0) ? $sathi_bocwAmend_SubmittedApplications : 0,
					
					'bocwreg_pending'					=> ($bocwReg_PendingApplications>0)? $bocwReg_PendingApplications : 0,
					'sathi_bocwregpending'				=> ($sathi_bocwReg_PendingApplications>0) ? $sathi_bocwReg_PendingApplications : 0,
					'bocwamend_pending'					=> ($bocwAmend_PendingApplications>0)? $bocwAmend_PendingApplications : 0,
					'sathi_bocwamendpending'			=> ($sathi_bocwAmend_PendingApplications > 0) ? $sathi_bocwAmend_PendingApplications : 0,	
					
					'bocwreg_issued'					=> ($bocwReg_IssuedApplications>0)? $bocwReg_IssuedApplications : 0 ,
					'sathi_bocwregissued'				=> ($sathi_bocwReg_IssuedApplications>0)? $sathi_bocwReg_IssuedApplications :0,					
					'bocwamend_issued'					=> ($bocwAmend_IssuedApplications>0)? $bocwAmend_IssuedApplications :0,
					'sathi_bocwamendissued'				=> ($sathi_bocwAmend_IssuedApplications>0)? $sathi_bocwAmend_IssuedApplications :0,
					
					'bocwreg_rejected'					=> ($bocwReg_RejectedApplications>0)? $bocwReg_RejectedApplications : 0,
					'bocwamend_rejected'				=> ($bocwAmend_RejectedApplications>0)? $bocwAmend_RejectedApplications :0,
					'sathi_bocwregrejected'				=> ($sathi_bocwReg_RejectedApplications>0)? $sathi_bocwReg_RejectedApplications : 0,
					'sathi_bocwamendrejected'			=> ($sathi_bocwAmend_RejectedApplications>0)? $sathi_bocwAmend_RejectedApplications : 0,
					
					'mtwreg_submitted'					=> ($mtwReg_SubmittedApplications>0)? $mtwReg_SubmittedApplications : 0,
					'mtwrenewal_submitted'				=> ($mtwRenewal_SubmittedApplications>0)? $mtwRenewal_SubmittedApplications : 0,
					
					'mtwreg_pending'					=> ($mtwReg_PendingApplications>0)? $mtwReg_PendingApplications : 0,
					'mtwrenewal_pending'				=> ($mtwRenewal_PendingApplications>0)? $mtwRenewal_PendingApplications : 0,
					
					'mtwreg_issued'						=> ($mtwReg_IssuedApplications>0)? $mtwReg_IssuedApplications : 0,
					'mtwrenewal_issued'					=> ($mtwRenewal_IssuedApplications>0)? $mtwRenewal_IssuedApplications : 0,
					
					'mtwreg_rejected'					=> ($mtwReg_RejectedApplications>0)? $mtwReg_RejectedApplications : 0,
					'mtwrenewal_rejected'				=> ($mtwRenewal_RejectedApplications>0)? $mtwRenewal_RejectedApplications : 0,
					
					'ismwreg_submitted'					=> ($ismwReg_SubmittedApplications>0)? $ismwReg_SubmittedApplications : 0,
					'sathi_ismwreg_submitted'			=> ($sathi_ismwReg_SubmittedApplications>0)? $sathi_ismwReg_SubmittedApplications : 0,
					'ismwamend_submitted'				=> ($ismwAmend_SubmittedApplications>0)? $ismwAmend_SubmittedApplications : 0,
					'sathi_ismwamend_submitted'			=> ($sathi_ismwAmend_SubmittedApplications>0)? $sathi_ismwAmend_SubmittedApplications : 0,
					
					'ismwreg_pending'					=> ($ismwReg_PendingApplications>0)? $ismwReg_PendingApplications : 0,
					'sathi_ismwreg_pending'				=> ($sathi_ismwReg_PendingApplications>0)? $sathi_ismwReg_PendingApplications : 0,
					'ismwamend_pending'					=> ($ismwAmend_PendingApplications>0)? $ismwAmend_PendingApplications : 0,
					'sathi_ismwamend_pending'			=> ($sathi_ismwAmend_PendingApplications>0)? $sathi_ismwAmend_PendingApplications : 0,
					
					'ismwreg_issued'					=> ($ismwReg_IssuedApplications>0)? $ismwReg_IssuedApplications : 0,
					'sathi_ismwreg_issued'				=> ($sathi_ismwReg_IssuedApplications>0)? $sathi_ismwReg_IssuedApplications : 0,
					'ismwamend_issued'					=> ($ismwAmend_IssuedApplications>0)? $ismwAmend_IssuedApplications : 0,
					'sathi_ismwamend_issued'			=> ($sathi_ismwAmend_IssuedApplications>0)? $sathi_ismwAmend_IssuedApplications : 0,
					
					'ismwreg_rejected'					=> ($ismwReg_RejectedApplications>0)? $ismwReg_RejectedApplications : 0,
					'sathi_ismwreg_rejected'			=> ($sathi_ismwReg_RejectedApplications>0)? $sathi_ismwReg_RejectedApplications : 0,
					'ismwamend_rejected'				=> ($ismwAmend_RejectedApplications>0)? $ismwAmend_RejectedApplications : 0,
					'sathi_ismwamend_rejected'			=> ($sathi_ismwAmend_RejectedApplications>0)? $sathi_ismwAmend_RejectedApplications : 0,
				
					'clralic_submitted'					=> ($clraLicenseSubmittedApplications>0)? $clraLicenseSubmittedApplications : 0,
					'sathi_clralic_submitted'			=> ($sathiclraLicenseSubmittedApplications>0)? $sathiclraLicenseSubmittedApplications : 0,
					'clralic_pending'					=> ($clraLicensePendingApplications>0)? $clraLicensePendingApplications : 0,
					'sathi_clralic_pending'				=> ($sathiclraLicensePendingApplications>0)? $sathiclraLicensePendingApplications : 0,
					'clralic_issued'					=> ($clraLicenseIssuedApplications>0)? $clraLicenseIssuedApplications : 0,
					'sathi_clralic_issued'				=> ($sathiclraLicenseIssuedApplications>0)? $sathiclraLicenseIssuedApplications : 0,
					'clralic_rejected'					=> ($clraLicenseRejectedApplications>0)? $clraLicenseRejectedApplications : 0,
					'sathi_clralic_rejected'			=> ($sathiclraLicenseRejectedApplications>0)? $sathiclraLicenseRejectedApplications : 0,
					
					'clralic_renewal_submitted'			=> ($clraRenewalSubmittedApplications>0)? $clraRenewalSubmittedApplications : 0,
					'sathi_clralic_renewal_submitted'	=> ($sathiClraRenewalSubmittedApplications>0)? $sathiClraRenewalSubmittedApplications : 0,
					'clralic_renewal_pending'			=> ($clraRenewalPendingApplications>0)? $clraRenewalPendingApplications : 0,
					'sathi_clralic_renewal_pending'		=> ($sathiClraRenewalPendingApplications>0)? $sathiClraRenewalPendingApplications : 0,
					'clralic_renewal_issued'			=> ($clraRenewalIssuedApplications>0)? $clraRenewalIssuedApplications : 0,
					'sathi_clralic_renewal_issued'		=> ($sathiClraRenewalIssuedApplications>0)? $sathiClraRenewalIssuedApplications : 0,
					'clralic_renewal_rejected'			=> ($clraRenewalRejectedApplications>0)? $clraRenewalRejectedApplications : 0,
					'sathi_clralic_renewal_rejected'	=> ($sathiClraRenewalRejectedApplications>0)? $sathiClraRenewalRejectedApplications : 0,
					
					'amend_clralic_submitted'			=> (($getLicAmendmentSubmittedApplications+ $logLicAmendmentSubmittedApplications )>0)? $getLicAmendmentSubmittedApplications+ $logLicAmendmentSubmittedApplications : 0,
					'amend_clralic_pending'				=> (($getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications )>0)? $getLicAmendmentPendingApplications+ $logLicAmendmentPendingApplications : 0,
					'amend_clralic_issued'				=> (($getLicAmendmentIssuedApplications+ $logLicAmendmentIssuedApplications )>0)? $getLicAmendmentIssuedApplications+ $logLicAmendmentIssuedApplications : 0,
					'amend_clralic_rejected'			=> (($getLicAmendmentRejectedApplications+ $logLicAmendmentRejectedApplications )>0)? $getLicAmendmentRejectedApplications+ $logLicAmendmentRejectedApplications : 0,
					
					'emp_ismwlic_submitted'				=> ($getIsmwLicEmpSubmittedApplications>0)? $getIsmwLicEmpSubmittedApplications : 0,
					'emp_ismwlic_pending'				=> ($getIsmwLicEmpPendingApplications>0)? $getIsmwLicEmpPendingApplications : 0,
					'emp_ismwlic_issued'				=> ($getIsmwLicEmpIssuedApplications>0)? $getIsmwLicEmpIssuedApplications : 0,
					'emp_ismwlic_rejected'				=> ($getIsmwLicEmpRejectedApplications>0)? $getIsmwLicEmpRejectedApplications : 0,
					
					'rec_ismwlic_submitted'				=> ($getIsmwLicRecSubmittedApplications>0)? $getIsmwLicRecSubmittedApplications : 0,
					'rec_ismwlic_pending'				=> ($getIsmwLicRecPendingApplications>0)? $getIsmwLicRecPendingApplications : 0,
					'rec_ismwlic_issued'				=> ($getIsmwLicRecIssuedApplications>0)? $getIsmwLicRecIssuedApplications : 0,
					'rec_ismwlic_rejected'				=> ($getIsmwLicRecRejectedApplications>0)? $getIsmwLicRecRejectedApplications : 0,
					
					
			
	);
	
	return $getTotal;*/
		
}


function selectAllifsc($string){
	
	$sql = "select ifsc_code 
			from bank_branch_master 
			where ifsc_code ILIKE :ifsc_code";
	
	// now() between open_dt_frm and close_dt_to and
	
	$result 	= db_query($sql,array(':ifsc_code' => "".db_like($string)."%"));
	
	$matches 	= array();
	if( $result->rowCount()>0 ){
		foreach($result as $item) {
			$matches[$item->ifsc_code] = check_plain($item->ifsc_code);
		}
	}else{
		$matches[] = "";
	}
	drupal_json_output($matches);
	exit;	
}

function get_role_based_sub_division($district_code, $sub_division_code = null)
{
	global $user;

	$default_subdvselect = array('' => ' - Select -');

	if (in_array('ALC', $user->roles)) {
		$query_subdv = db_select('sub_division', 'subdv');
		$query_subdv->fields('subdv', array('sub_div_code', 'sub_div_name'));
		$query_subdv->condition('subdv.sub_div_code', $sub_division_code);
		$result_subdv = $query_subdv->execute();

		if (!empty($result_subdv)) {
			foreach ($result_subdv as $rows) {
				$all_subdvs[$rows->sub_div_code] = t('@subdvsname', array('@subdvsname' => $rows->sub_div_name));
			}
		}
		$all_val = $all_subdvs ? $default_subdvselect + $all_subdvs : $default_subdvselect;
	} else {
		$query_subdv = db_select('sub_division', 'subdv');
		$query_subdv->fields('subdv', array('sub_div_code', 'sub_div_name'));
		$query_subdv->orderBy('subdv.sub_div_name', 'ASC');
		$query_subdv->condition('subdv.is_active', 'Y');
		$query_subdv->condition('subdv.district_code', (int)$district_code);
		$result_subdv 			= $query_subdv->execute();
		if (!empty($result_subdv)) {
			foreach ($result_subdv as $rows) {
				$all_subdvs[$rows->sub_div_code] = t('@subdvsname', array('@subdvsname' => $rows->sub_div_name));
			}
		}
		$all_val = $all_subdvs ? $default_subdvselect + $all_subdvs : $default_subdvselect;
	}
	return $all_val;
}

function get_role_based_block_mun_master($sub_division_code)
{
	global $user;

	$default_blockselect = array('' => ' - Select -');

	$query_block = db_select('block_mun_master', 'bm');
	$query_block->fields('bm', array('block_code', 'block_mun_name'));
	$query_block->orderBy('bm.block_mun_name', 'ASC');
	$query_block->condition('bm.is_active', 'Y');
	$query_block->condition('bm.sub_division_code', $sub_division_code);
	$result_block = $query_block->execute();
	if (!empty($result_block)) {
		foreach ($result_block as $rows) {
			$all_blocks[$rows->block_code] = t('@blockname', array('@blockname' => $rows->block_mun_name));
		}
	}
	$all_val = $all_blocks ? $default_blockselect + $all_blocks : $default_blockselect;
	return $all_val;
}
function get_rlo_lwfc_code($loc_e_vill_ward_code = ''){	
	$query = db_select('village_ward_master', 'gw');	
	$query->fields('gw', array('rlo_code', 'lwfc_code'));	
	$query->condition('gw.village_code', trim($loc_e_vill_ward_code));
	$query->condition('gw.is_active', 'Y');
	$query = $query->execute();	
	if($query->rowCount() > 0){		
		return $result = $query->fetchObject();	
	}
}

function get_rlo_short_code($area_code){	
	 
	$get_rloCode= db_select('block_mun_master', 'bmm');
	$get_rloCode->fields('bmm',array('rlo_short_code'));
	$get_rloCode->condition('bmm.block_code', $area_code);	 
	$result_rloCode = 	$get_rloCode->execute();
	$rloCodeRes		=	$result_rloCode->fetchObject();
	$rloCode		=	$rloCodeRes->rlo_short_code;
	return $rloCode;
}
